!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).GW=t.GW||{})}(this,(function(t){"use strict";const e="\n#version 300 es\n\nin vec2 position;\nin uvec2 offset;\nin highp uint style;\n\nout vec2 fsUv;\nout vec3 fgRgb;\nout vec3 bgRgb;\nflat out uvec2 fontPos;\n\nuniform uvec2 tileSize;\nuniform uvec2 viewportSize;\n\nvoid main() {\n\tgl_Position = vec4(position, 0.0, 1.0);\n\n\tfloat fr = float((style & uint(0x00000F00)) >> 8);\n\tfloat fg = float((style & uint(0x000000F0)) >> 4);\n\tfloat fb = float(style & uint(0x0000000F));\n\tfgRgb = vec3(fr, fg, fb) / 15.0;\n  \n\tfloat br = float((style & uint(0x00F00000)) >> 20);\n\tfloat bg = float((style & uint(0x000F0000)) >> 16);\n\tfloat bb = float((style & uint(0x0000F000)) >> 12);\n\tbgRgb = vec3(br, bg, bb) / 15.0;\n\n\tuint glyph = (style & uint(0xFF000000)) >> 24;\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tfontPos = uvec2(glyphX, glyphY);\n\n\tfsUv = vec2(offset);\n}".trim(),i="\n#version 300 es\nprecision highp float;\n\nin vec2 fsUv;\nin vec3 fgRgb;\nin vec3 bgRgb;\nflat in uvec2 fontPos;\n\nout vec4 fragColor;\n\nuniform sampler2D font;\nuniform highp uvec2 tileSize;\n\nvoid main() {\n\tuvec2 fontPx = (tileSize * fontPos) + uvec2(vec2(tileSize) * fsUv);\n\tvec3 texel = texelFetch(font, ivec2(fontPx), 0).rgb;\n\n\tfragColor = vec4(mix(bgRgb, fgRgb, texel), 1.0);\n}".trim();class s{constructor(t={}){this._tileWidth=12,this._tileHeight=16,this.needsUpdate=!0,this._map={},t.font=t.font||"monospace",this._node=document.createElement("canvas"),this._ctx=this.node.getContext("2d"),this._configure(t)}static fromImage(t){if("string"==typeof t){if(t.startsWith("data:"))throw new Error("Glyph: You must load a data string into an image element and use that.");const e=document.getElementById(t);if(!e)throw new Error("Glyph: Failed to find image element with id:"+t);t=e}const e=new this({tileWidth:t.width/16,tileHeight:t.height/16});return e._ctx.drawImage(t,0,0),e}static fromFont(t){"string"==typeof t&&(t={font:t});const e=new this(t),i=t.basicOnly||t.basic||!1;return e._initGlyphs(i),e}get node(){return this._node}get ctx(){return this._ctx}get tileWidth(){return this._tileWidth}get tileHeight(){return this._tileHeight}get pxWidth(){return this._node.width}get pxHeight(){return this._node.height}forChar(t){return null==t?-1:this._map[t]||-1}_configure(t){this._tileWidth=t.tileWidth||this.tileWidth,this._tileHeight=t.tileHeight||this.tileHeight,this.node.width=16*this.tileWidth,this.node.height=16*this.tileHeight,this._ctx.fillStyle="black",this._ctx.fillRect(0,0,this.pxWidth,this.pxHeight);const e=t.fontSize||t.size||Math.max(this.tileWidth,this.tileHeight);this._ctx.font=e+"px "+t.font,this._ctx.textAlign="center",this._ctx.textBaseline="middle",this._ctx.fillStyle="white"}draw(t,e){if(t>256)throw new Error("Cannot draw more than 256 glyphs.");const i=t%16*this.tileWidth,s=Math.floor(t/16)*this.tileHeight,h=i+Math.floor(this.tileWidth/2),r=s+Math.floor(this.tileHeight/2);this._ctx.save(),this._ctx.beginPath(),this._ctx.rect(i,s,this.tileWidth,this.tileHeight),this._ctx.clip(),"function"==typeof e?e(this._ctx,i,s,this.tileWidth,this.tileHeight):(void 0===this._map[e]&&(this._map[e]=t),this._ctx.fillText(e,h,r)),this._ctx.restore(),this.needsUpdate=!0}_initGlyphs(t=!1){for(let t=32;t<127;++t)this.draw(t,String.fromCharCode(t));t||([" ","☺","☻","♥","♦","♣","♠","☼","☀","★","☆","♂","♀","♪","♫","☸","▶","◀","↕","‼","⁋","☯","⌘","☖","↑","↓","→","←","Ω","↔","▲","▼"].forEach(((t,e)=>{this.draw(e,t)})),["⌂","Ç","ü","é","â","ä","à","å","ç","ê","ë","è","ï","î","ì","Ä","Å","É","æ","Æ","ô","ö","ò","û","ù","ÿ","Ö","Ü","¢","£","¥","₧","ƒ","á","í","ó","ú","ñ","Ñ","ª","º","¿","⌐","¬","½","¼","¡","«","»","░","▒","▓","│","┤","╡","╢","╖","╕","╣","║","╗","╝","╜","╛","┐","└","┴","┬","├","─","┼","╞","╟","╚","╔","╩","╦","╠","═","╬","╧","╨","╤","╥","╙","╘","╒","╓","╫","╪","┘","┌","█","▄","▌","▐","▀","α","ß","Γ","π","Σ","σ","µ","τ","Φ","Θ","Ω","δ","∞","φ","ε","∩","≡","±","≥","≤","⌠","⌡","÷","≈","°","∙","·","√","ⁿ","²","■"," "].forEach(((t,e)=>{this.draw(e+127,t)})))}}class h extends Error{constructor(...t){super(...t),Error.captureStackTrace&&Error.captureStackTrace(this,h),this.name="NotSupportedError"}}class r{constructor(t){if(this._renderRequested=!1,this._autoRender=!0,this._width=50,this._height=25,!t.glyphs)throw new Error("You must supply glyphs for the canvas.");this._node=this._createNode(),this._createContext(),this._configure(t)}get node(){return this._node}get width(){return this._width}get height(){return this._height}get tileWidth(){return this._glyphs.tileWidth}get tileHeight(){return this._glyphs.tileHeight}get pxWidth(){return this.node.clientWidth}get pxHeight(){return this.node.clientHeight}get glyphs(){return this._glyphs}set glyphs(t){this._setGlyphs(t)}_createNode(){return document.createElement("canvas")}_configure(t){if(this._width=t.width||this._width,this._height=t.height||this._height,this._autoRender=!1!==t.render,this._setGlyphs(t.glyphs),t.div){let e;"string"==typeof t.div?(e=document.getElementById(t.div),e||console.warn("Failed to find parent element by ID: "+t.div)):e=t.div,e&&e.appendChild&&e.appendChild(this.node)}}_setGlyphs(t){return t!==this._glyphs&&(this._glyphs=t,this.resize(this._width,this._height),!0)}resize(t,e){this._width=t,this._height=e;const i=this.node;i.width=this._width*this.tileWidth,i.height=this._height*this.tileHeight}draw(t,e,i,s,h){const r=(i&=255)*(1<<24)+4096*(h&=4095)+(s&=4095);this._set(t,e,r)}_requestRender(){this._renderRequested||(this._renderRequested=!0,this._autoRender&&requestAnimationFrame((()=>this.render())))}_set(t,e,i){let s=e*this.width+t;return this._data[s]!==i&&(this._data[s]=i,this._requestRender(),!0)}copy(t){this._data.set(t.data),this._requestRender()}copyTo(t){t.data.set(this._data)}hasXY(t,e){return t>=0&&e>=0&&t<this.width&&e<this.height}toX(t){return Math.floor(this.width*t/this.node.clientWidth)}toY(t){return Math.floor(this.height*t/this.node.clientHeight)}}class n extends r{constructor(t){super(t)}_createContext(){let t=this.node.getContext("webgl2");if(!t)throw new h("WebGL 2 not supported");this._gl=t,this._buffers={},this._attribs={},this._uniforms={};const s=function(t,...e){const i=t.createProgram();if([t.VERTEX_SHADER,t.FRAGMENT_SHADER].forEach(((s,h)=>{const r=t.createShader(s);if(t.shaderSource(r,e[h]),t.compileShader(r),!t.getShaderParameter(r,t.COMPILE_STATUS))throw new Error(t.getShaderInfoLog(r));t.attachShader(i,r)})),t.linkProgram(i),!t.getProgramParameter(i,t.LINK_STATUS))throw new Error(t.getProgramInfoLog(i));return i}(t,e,i);t.useProgram(s);const r=t.getProgramParameter(s,t.ACTIVE_ATTRIBUTES);for(let e=0;e<r;e++){t.enableVertexAttribArray(e);let i=t.getActiveAttrib(s,e);this._attribs[i.name]=e}const n=t.getProgramParameter(s,t.ACTIVE_UNIFORMS);for(let e=0;e<n;e++){let i=t.getActiveUniform(s,e);this._uniforms[i.name]=t.getUniformLocation(s,i.name)}t.uniform1i(this._uniforms.font,0),this._texture=function(t){let e=t.createTexture();return t.bindTexture(t.TEXTURE_2D,e),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),e}(t)}_createGeometry(){const t=this._gl;this._buffers.position&&t.deleteBuffer(this._buffers.position),this._buffers.uv&&t.deleteBuffer(this._buffers.uv);let e=function(t,e,i,s){let h=i*s,r=new Float32Array(h*o.length),n=new Uint8Array(h*o.length);for(let t=0;t<s;t++)for(let e=0;e<i;e++){const h=(e+t*i)*o.length;r.set(o.map(((h,r)=>r%2?1-2*(t+h)/s:2*(e+h)/i-1)),h),n.set(o,h)}const a=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,a),t.vertexAttribPointer(e.position,2,t.FLOAT,!1,0,0),t.bufferData(t.ARRAY_BUFFER,r,t.STATIC_DRAW);const l=t.createBuffer();return t.bindBuffer(t.ARRAY_BUFFER,l),t.vertexAttribIPointer(e.offset,2,t.UNSIGNED_BYTE,0,0),t.bufferData(t.ARRAY_BUFFER,n,t.STATIC_DRAW),{position:a,uv:l}}(t,this._attribs,this.width,this.height);Object.assign(this._buffers,e)}_createData(){const t=this._gl,e=this._attribs,i=this.width*this.height;this._buffers.style&&t.deleteBuffer(this._buffers.style),this._data=new Uint32Array(6*i);const s=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,s),t.vertexAttribIPointer(e.style,1,t.UNSIGNED_INT,0,0),Object.assign(this._buffers,{style:s})}_setGlyphs(t){if(!super._setGlyphs(t))return!1;const e=this._gl,i=this._uniforms;return e.uniform2uiv(i.tileSize,[this.tileWidth,this.tileHeight]),this._uploadGlyphs(),!0}_uploadGlyphs(){if(!this._glyphs.needsUpdate)return;const t=this._gl;t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this._texture),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,this._glyphs.node),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),this._requestRender(),this._glyphs.needsUpdate=!1}resize(t,e){super.resize(t,e);const i=this._gl,s=this._uniforms;i.viewport(0,0,this.node.width,this.node.height),i.uniform2ui(s.viewportSize,this.node.width,this.node.height),this._createGeometry(),this._createData()}_set(t,e,i){let s=e*this.width+t;s*=6;return this._data[s]!==i&&(this._data[s+0]=i,this._data[s+1]=i,this._data[s+2]=i,this._data[s+3]=i,this._data[s+4]=i,this._data[s+5]=i,this._requestRender(),!0)}copy(t){t.data.forEach(((t,e)=>{const i=6*e;this._data[i+0]=t,this._data[i+1]=t,this._data[i+2]=t,this._data[i+3]=t,this._data[i+4]=t,this._data[i+5]=t})),this._requestRender()}copyTo(t){const e=this.width*this.height,i=t.data;for(let t=0;t<e;++t){const e=6*t;i[t]=this._data[e+0]}}render(){const t=this._gl;if(this._glyphs.needsUpdate)this._uploadGlyphs();else if(!this._renderRequested)return;this._renderRequested=!1,t.bindBuffer(t.ARRAY_BUFFER,this._buffers.style),t.bufferData(t.ARRAY_BUFFER,this._data,t.DYNAMIC_DRAW),t.drawArrays(t.TRIANGLES,0,this._width*this._height*6)}}class a extends r{constructor(t){super(t)}_createContext(){const t=this.node.getContext("2d");if(!t)throw new h("2d context not supported!");this._ctx=t}_set(t,e,i){const s=super._set(t,e,i);return s&&(this._changed[e*this.width+t]=1),s}resize(t,e){super.resize(t,e),this._data=new Uint32Array(t*e),this._changed=new Int8Array(t*e)}copy(t){for(let e=0;e<this._data.length;++e)this._data[e]!==t.data[e]&&(this._data[e]=t.data[e],this._changed[e]=1);this._requestRender()}render(){this._renderRequested=!1;for(let t=0;t<this._changed.length;++t)this._changed[t]&&this._renderCell(t),this._changed[t]=0}_renderCell(t){const e=t%this.width,i=Math.floor(t/this.width),s=this._data[t],h=s/(1<<24)>>0,r=s>>12&4095,n=4095&s,a=e*this.tileWidth,o=i*this.tileHeight,l=h%16*this.tileWidth,d=Math.floor(h/16)*this.tileHeight,u=this.glyphs.ctx.getImageData(l,d,this.tileWidth,this.tileHeight);for(let t=0;t<u.width*u.height;++t){const e=u.data[4*t]/255,i=1-e;u.data[4*t+0]=e*(17*((3840&n)>>8))+i*(17*((3840&r)>>8)),u.data[4*t+1]=e*(17*((240&n)>>4))+i*(17*((240&r)>>4)),u.data[4*t+2]=e*(17*(15&n))+i*(17*(15&r)),u.data[4*t+3]=255}this._ctx.putImageData(u,a,o)}}const o=[0,0,1,0,0,1,0,1,1,0,1,1];var l={random:Math.random.bind(Math)};const d={};class u extends Int16Array{constructor(t=-1,e=0,i=0,s=0,h=0,r=0,n=0,a=!1){super(7),this.dances=!1,this.set([t,e,i,s,h,r,n]),this.dances=a}static fromArray(t,e=!1){for(;t.length<3;)t.push(0);if(e)for(let e=0;e<7;++e)t[e]=Math.round(100*(t[e]||0)/255);return new this(...t)}static fromCss(t){if(!t.startsWith("#"))throw new Error('Color CSS strings must be of form "#abc" or "#abcdef" - received: ['+t+"]");const e=Number.parseInt(t.substring(1),16);let i,s,h;return 4==t.length?(i=Math.round((e>>8)/15*100),s=Math.round(((240&e)>>4)/15*100),h=Math.round((15&e)/15*100)):(i=Math.round((e>>16)/255*100),s=Math.round(((65280&e)>>8)/255*100),h=Math.round((255&e)/255*100)),new this(i,s,h)}static fromName(t){const e=d[t];if(!e)throw new Error("Unknown color name: "+t);return e}static fromNumber(t,e=!1){const i=new this;for(let t=0;t<i.length;++t)i[t]=0;return t<0?i._r=-1:e||t>4095?(i._r=Math.round(100*((16711680&t)>>16)/255),i._g=Math.round(100*((65280&t)>>8)/255),i._b=Math.round(100*(255&t)/255)):(i._r=Math.round(100*((3840&t)>>8)/15),i._g=Math.round(100*((240&t)>>4)/15),i._b=Math.round(100*(15&t)/15)),i}static make(t,e=!1){if(null==t)return new this(-1);if(t instanceof u)return t.clone();if("string"==typeof t)return t.startsWith("#")?this.fromCss(t):this.fromName(t).clone();if(Array.isArray(t))return this.fromArray(t,e);if("number"==typeof t)return t<0?new this(-1):this.fromNumber(t,e);throw new Error("Failed to make color - unknown argument: "+JSON.stringify(t))}static from(...t){const e=t[0];return e instanceof u?e:e<0||void 0===e?new this(-1):"string"!=typeof e||e.startsWith("#")?this.make(e,t[1]):this.fromName(e)}static install(t,e){const i=e instanceof u?e:this.make(e);return d[t]=i,i.name=t,i}static installSpread(t,e){const i=this.install(t,e);return this.install("light_"+t,i.clone().lighten(25)),this.install("lighter_"+t,i.clone().lighten(50)),this.install("lightest_"+t,i.clone().lighten(75)),this.install("dark_"+t,i.clone().darken(25)),this.install("darker_"+t,i.clone().darken(50)),this.install("darkest_"+t,i.clone().darken(75)),i}get r(){return Math.round(2.550001*this[0])}get _r(){return this[0]}set _r(t){this[0]=t}get g(){return Math.round(2.550001*this[1])}get _g(){return this[1]}set _g(t){this[1]=t}get b(){return Math.round(2.550001*this[2])}get _b(){return this[2]}set _b(t){this[2]=t}get _rand(){return this[3]}get _redRand(){return this[4]}get _greenRand(){return this[5]}get _blueRand(){return this[6]}get l(){return Math.round(.5*(Math.min(this._r,this._g,this._b)+Math.max(this._r,this._g,this._b)))}get s(){return this.l>=100?0:Math.round((Math.max(this._r,this._g,this._b)-Math.min(this._r,this._g,this._b))*(100-Math.abs(2*this.l-100))/100)}get h(){let t=0,e=this.r,i=this.g,s=this.b;return t=e>=i&&i>=s?(i-s)/(e-s)*60:i>e&&e>=s?60*(2-(e-s)/(i-s)):i>=s&&s>e?60*(2+(s-e)/(i-e)):s>i&&i>e?60*(4-(i-e)/(s-e)):s>e&&e>=i?60*(4+(e-i)/(s-i)):60*(6-(s-i)/(e-i)),Math.round(t)}isNull(){return this._r<0}equals(t){if("string"==typeof t)return t.length>4?this.toString(!0)==t:this.toString()==t;if("number"==typeof t)return this.toInt()==t||this.toInt(!0)==t;const e=u.from(t);return this.isNull()?e.isNull():this.every(((t,i)=>t==(e[i]||0)))}copy(t){if(Array.isArray(t))this.set(t);else{const e=u.from(t);this.set(e)}return t instanceof u?(this.dances=t.dances,this.name=t.name):this._changed(),this}_changed(){return this.name=void 0,this}clone(){const t=new this.constructor;return t.copy(this),t}assign(t=-1,e=0,i=0,s=0,h=0,r=0,n=0,a){for(let t=0;t<this.length;++t)this[t]=arguments[t]||0;return void 0!==a&&(this.dances=a),this._changed()}assignRGB(t=-1,e=0,i=0,s=0,h=0,r=0,n=0,a){for(let t=0;t<this.length;++t)this[t]=Math.round((arguments[t]||0)/2.55);return void 0!==a&&(this.dances=a),this._changed()}nullify(){return this[0]=-1,this.dances=!1,this._changed()}blackOut(){for(let t=0;t<this.length;++t)this[t]=0;return this.dances=!1,this._changed()}toInt(t=!1){return this.isNull()?-1:function(t=0,e=0,i=0,s=!1){return s?((t=Math.max(0,Math.min(255,Math.round(2.550001*t))))<<16)+((e=Math.max(0,Math.min(255,Math.round(2.550001*e))))<<8)+(i=Math.max(0,Math.min(255,Math.round(2.550001*i)))):((t=Math.max(0,Math.min(15,Math.round(t/100*15))))<<8)+((e=Math.max(0,Math.min(15,Math.round(e/100*15))))<<4)+(i=Math.max(0,Math.min(15,Math.round(i/100*15))))}(this._r,this._g,this._b,t)}clamp(){return this.isNull()?this:(this._r=Math.min(100,Math.max(0,this._r)),this._g=Math.min(100,Math.max(0,this._g)),this._b=Math.min(100,Math.max(0,this._b)),this._changed())}mix(t,e){const i=u.from(t);if(i.isNull())return this;this.isNull()&&this.blackOut();const s=100-(e=Math.min(100,Math.max(0,e)));for(let t=0;t<this.length;++t)this[t]=Math.round((this[t]*s+i[t]*e)/100);return this.dances=this.dances||i.dances,this._changed()}lighten(t){if(this.isNull())return this;if((t=Math.min(100,Math.max(0,t)))<=0)return;const e=100-t;for(let i=0;i<3;++i)this[i]=Math.round((this[i]*e+100*t)/100);return this._changed()}darken(t){if(this.isNull())return this;if((t=Math.min(100,Math.max(0,t)))<=0)return;const e=100-t;for(let i=0;i<3;++i)this[i]=Math.round((this[i]*e+0*t)/100);return this._changed()}bake(){if(this.isNull())return this;const t=this;if(t[3]+t[4]+t[5]+t[6]){const t=this._rand?Math.floor(l.random()*this._rand):0,e=this._redRand?Math.floor(l.random()*this._redRand):0,i=this._greenRand?Math.floor(l.random()*this._greenRand):0,s=this._blueRand?Math.floor(l.random()*this._blueRand):0;this._r+=t+e,this._g+=t+i,this._b+=t+s;for(let t=3;t<this.length;++t)this[t]=0;return this._changed()}return this}add(t,e=100){const i=u.from(t);if(i.isNull())return this;this.isNull()&&this.blackOut();for(let t=0;t<this.length;++t)this[t]+=Math.round(i[t]*e/100);return this.dances=this.dances||i.dances,this._changed()}scale(t){if(this.isNull()||100==t)return this;t=Math.max(0,t);for(let e=0;e<this.length;++e)this[e]=Math.round(this[e]*t/100);return this._changed()}multiply(t){if(this.isNull())return this;let e=t;if(!Array.isArray(t)){if(t.isNull())return this;e=t}const i=Math.max(3,Math.min(this.length,e.length));for(let t=0;t<i;++t)this[t]=Math.round(this[t]*(e[t]||0)/100);return this._changed()}normalize(){if(this.isNull())return this;const t=Math.max(this._r,this._g,this._b);return t<=100?this:(this._r=Math.round(100*this._r/t),this._g=Math.round(100*this._g/t),this._b=Math.round(100*this._b/t),this._changed())}css(t=!1){return"#"+this.toInt(t).toString(16).padStart(t?6:3,"0")}toString(t=!1){return this.name?this.name:this.isNull()?"null color":this.css(t)}static separate(t,e){if(t.isNull()||e.isNull())return;const i=t.clone().clamp(),s=e.clone().clamp();let h=Math.abs(i.h-s.h);if(h>180&&(h=360-h),h>45)return;if(Math.abs(i.l-s.l)>=40)return;const[r,n]=[i,s].sort(((t,e)=>t.s-e.s));for(;n.l-r.l<40;)n.mix(g,5),r.mix(c,5);t.copy(i),e.copy(s)}static swap(t,e){const i=t.clone();t.copy(e),e.copy(i)}static diff(t,e){return Math.round((t._r-e._r)*(t._r-e._r)*.2126+(t._g-e._g)*(t._g-e._g)*.7152+(t._b-e._b)*(t._b-e._b)*.0722)}}const c=u.install("black",0),g=u.install("white",4095);u.installSpread("teal",[30,100,100]),u.installSpread("brown",[60,40,0]),u.installSpread("tan",[80,70,55]),u.installSpread("pink",[100,60,66]),u.installSpread("gray",[50,50,50]),u.installSpread("yellow",[100,100,0]),u.installSpread("purple",[100,0,100]),u.installSpread("green",[0,100,0]),u.installSpread("orange",[100,50,0]),u.installSpread("blue",[0,0,100]),u.installSpread("red",[100,0,0]),u.installSpread("amber",[100,75,0]),u.installSpread("flame",[100,25,0]),u.installSpread("fuchsia",[100,0,100]),u.installSpread("magenta",[100,0,75]),u.installSpread("crimson",[100,0,25]),u.installSpread("lime",[75,100,0]),u.installSpread("chartreuse",[50,100,0]),u.installSpread("sepia",[50,40,25]),u.installSpread("violet",[50,0,100]),u.installSpread("han",[25,0,100]),u.installSpread("cyan",[0,100,100]),u.installSpread("turquoise",[0,100,75]),u.installSpread("sea",[0,100,50]),u.installSpread("sky",[0,75,100]),u.installSpread("azure",[0,50,100]),u.installSpread("silver",[75,75,75]),u.installSpread("gold",[100,85,0]);class f{constructor(t,e){this._width=t,this._height=e,this._data=new Uint32Array(t*e)}get data(){return this._data}get width(){return this._width}get height(){return this._height}get(t,e){let i=e*this.width+t;const s=this._data[i]||0;return{glyph:s>>24,fg:4095&s,bg:s>>12&4095}}_toGlyph(t){return null==t?-1:t.charCodeAt(0)}draw(t,e,i=-1,s=-1,h=-1){let r=e*this.width+t;const n=this._data[r]||0;"number"!=typeof i&&(i=this._toGlyph(i)),"number"!=typeof s&&(s=u.from(s).toInt()),"number"!=typeof h&&(h=u.from(h).toInt());const a=((i=i>=0?255&i:n>>24)<<24)+((h=h>=0?4095&h:n>>12&4095)<<12)+(s=s>=0?4095&s:4095&n);return this._data[r]=a,this}drawSprite(t,e,i){let s=i.ch?i.ch:void 0!==i.glyph?i.glyph:-1;return this.draw(t,e,s,i.fg,i.bg)}blackOut(t,e){return 0==arguments.length?this.fill(0,0,0):this.draw(t,e,0,0,0)}fill(t=0,e=4095,i=0){"string"==typeof t&&(t=this._toGlyph(t));const s=((t&=255)<<24)+((i&=4095)<<12)+(e&=4095);return this._data.fill(s),this}copy(t){return this._data.set(t._data),this}}class _{constructor(){this.ch=-1,this.fg=new u,this.bg=new u}_changed(){return this}copy(t){return this.ch=t.ch,this.fg.copy(t.fg),this.bg.copy(t.bg),this._changed()}clone(){const t=new _;return t.copy(this),t}nullify(){return this.ch=-1,this.fg.nullify(),this.bg.nullify(),this._changed()}blackOut(){return this.ch=0,this.fg.blackOut(),this.bg.blackOut(),this._changed()}draw(t=-1,e=-1,i=-1){return t&&-1!==t&&(this.ch=t),-1!==e&&null!==e&&(e=u.from(e),this.fg.copy(e)),-1!==i&&null!==i&&(i=u.from(i),this.bg.copy(i)),this._changed()}drawSprite(t,e){if(void 0===e&&(e=t.opacity),void 0===e&&(e=100),!(e<=0))return t.ch?this.ch=t.ch:void 0!==t.glyph&&(this.ch=t.glyph),t.fg&&this.fg.mix(t.fg,e),t.bg&&this.bg.mix(t.bg,e),this._changed()}invert(){return[this.bg,this.fg]=[this.fg,this.bg],this._changed()}multiply(t,e=!0,i=!0){return t=u.from(t),e&&this.fg.multiply(t),i&&this.bg.multiply(t),this._changed()}mix(t,e=50,i=e){return t=u.from(t),e>0&&this.fg.mix(t,e),i>0&&this.bg.mix(t,i),this._changed()}add(t,e=100,i=e){return t=u.from(t),e>0&&this.fg.add(t,e),i>0&&this.bg.add(t,i),this._changed()}separate(){return u.separate(this.fg,this.bg),this._changed()}bake(){return this.fg.bake(),this.bg.bake(),this._changed(),{ch:this.ch,fg:this.fg.toInt(),bg:this.bg.toInt()}}}class p{constructor(t,e,i,s){this.ch=t,this.fg=e,this.bg=i,this.opacity=s}static make(...t){let e,i=null,s=-1,h=-1;if(0==t.length)return new p(null,-1,-1);if(1==t.length&&Array.isArray(t[0])&&(t=t[0]),t.length>1)i=t[0]||null,s=t[1],h=t[2],e=t[3];else if(1==t.length)if("string"==typeof t[0])h=t[0];else{const r=t[0];i=r.ch||null,s=r.fg||-1,h=r.bg||-1,e=r.opacity}return"string"==typeof s?s=u.from(s):Array.isArray(s)?s=u.make(s):null==s&&(s=-1),"string"==typeof h?h=u.from(h):Array.isArray(h)?h=u.make(h):null==h&&(h=-1),new this(i,s,h,e)}static install(t,...e){let i;return i=this.make(...e),i.name=t,m[t]=i,i}}const m={};var y={__proto__:null,Canvas:n,Canvas2D:a,Glyphs:s,Buffer:class extends f{constructor(t){super(t.width,t.height),this._canvas=t,t.copyTo(this)}_toGlyph(t){return this._canvas.glyphs.forChar(t)}render(){return this._canvas.copy(this),this}copyFromCanvas(){return this._canvas.copyTo(this),this}},DataBuffer:f,Color:u,colors:d,Mixer:_,Sprite:p,withImage:function(t){let e,i={};if("string"==typeof t)i.glyphs=s.fromImage(t);else if(t instanceof HTMLImageElement)i.glyphs=s.fromImage(t);else{if(!t.image)throw new Error("You must supply the image.");Object.assign(i,t),i.glyphs=s.fromImage(t.image)}try{e=new n(i)}catch(t){if(!(t instanceof h))throw t}return e||(e=new a(i)),e},withFont:function(t){let e;"string"==typeof t&&(t={font:t}),t.glyphs=s.fromFont(t);try{e=new n(t)}catch(t){if(!(t instanceof h))throw t}return e||(e=new a(t)),e},configure:function(t={}){Object.assign(l,t)},NotSupportedError:h};t.canvas=y,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=gw-canvas.min.js.map
