{"version":3,"file":"gw-canvas.min.js","sources":["../js/shaders.js","../js/glyphs.js","../js/color.js","../js/layer.js","../js/canvas.js","../js/mixer.js","../js/buffer.js","../js/config.js","../js/sprite.js"],"sourcesContent":["export const VS = `\n#version 300 es\n\nin vec2 position;\nin uvec2 offset;\nin uint fg;\nin uint bg;\nin uint glyph;\n\nout vec2 fsOffset;\nout vec4 fgRgb;\nout vec4 bgRgb;\nflat out uvec2 fontPos;\n\nuniform int depth;\n\nvoid main() {\n\tfloat fdepth = float(depth) / 255.0;\n\tgl_Position = vec4(position, fdepth, 1.0);\n\n\tfloat fgr = float((fg & uint(0xF000)) >> 12);\n\tfloat fgg = float((fg & uint(0x0F00)) >> 8);\n\tfloat fgb = float((fg & uint(0x00F0)) >> 4);\n\tfloat fga = float((fg & uint(0x000F)) >> 0);\n\tfgRgb = vec4(fgr, fgg, fgb, fga) / 15.0;\n  \n\tfloat bgr = float((bg & uint(0xF000)) >> 12);\n\tfloat bgg = float((bg & uint(0x0F00)) >> 8);\n\tfloat bgb = float((bg & uint(0x00F0)) >> 4);\n\tfloat bga = float((bg & uint(0x000F)) >> 0);\n\tbgRgb = vec4(bgr, bgg, bgb, bga) / 15.0;\n\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tfontPos = uvec2(glyphX, glyphY);\n\n\tfsOffset = vec2(offset);\n}`.trim();\nexport const FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 fsOffset;\nin vec4 fgRgb;\nin vec4 bgRgb;\nflat in uvec2 fontPos;\n\nout vec4 fragColor;\n\nuniform sampler2D font;\nuniform uvec2 tileSize;\n\nvoid main() {\n\tuvec2 fontPx = (tileSize * fontPos) + uvec2(vec2(tileSize) * fsOffset);\n\tvec4 texel = texelFetch(font, ivec2(fontPx), 0).rgba;\n\n\tfragColor = vec4(mix(bgRgb.rgb, fgRgb.rgb, texel.rgb), mix(bgRgb.a, fgRgb.a, texel.r));\n}`.trim();\n","export class Glyphs {\n    constructor(opts = {}) {\n        this._tileWidth = 12;\n        this._tileHeight = 16;\n        this.needsUpdate = true;\n        this._map = {};\n        opts.font = opts.font || 'monospace';\n        this._node = document.createElement('canvas');\n        this._ctx = this.node.getContext('2d');\n        this._configure(opts);\n    }\n    static fromImage(src) {\n        if (typeof src === 'string') {\n            if (src.startsWith('data:'))\n                throw new Error('Glyph: You must load a data string into an image element and use that.');\n            const el = document.getElementById(src);\n            if (!el)\n                throw new Error('Glyph: Failed to find image element with id:' + src);\n            src = el;\n        }\n        const glyph = new this({ tileWidth: src.width / 16, tileHeight: src.height / 16 });\n        glyph._ctx.drawImage(src, 0, 0);\n        return glyph;\n    }\n    static fromFont(src) {\n        if (typeof src === 'string') {\n            src = { font: src };\n        }\n        const glyphs = new this(src);\n        const basicOnly = src.basicOnly || src.basic || false;\n        glyphs._initGlyphs(basicOnly);\n        return glyphs;\n    }\n    get node() { return this._node; }\n    get ctx() { return this._ctx; }\n    get tileWidth() { return this._tileWidth; }\n    get tileHeight() { return this._tileHeight; }\n    get pxWidth() { return this._node.width; }\n    get pxHeight() { return this._node.height; }\n    forChar(ch) {\n        if (ch === null || ch === undefined)\n            return -1;\n        return this._map[ch] || -1;\n    }\n    _configure(opts) {\n        this._tileWidth = opts.tileWidth || this.tileWidth;\n        this._tileHeight = opts.tileHeight || this.tileHeight;\n        this.node.width = 16 * this.tileWidth;\n        this.node.height = 16 * this.tileHeight;\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(0, 0, this.pxWidth, this.pxHeight);\n        const size = opts.fontSize || opts.size || Math.max(this.tileWidth, this.tileHeight);\n        this._ctx.font = '' + size + 'px ' + opts.font;\n        this._ctx.textAlign = 'center';\n        this._ctx.textBaseline = 'middle';\n        this._ctx.fillStyle = 'white';\n    }\n    draw(n, ch) {\n        if (n > 256)\n            throw new Error('Cannot draw more than 256 glyphs.');\n        const x = (n % 16) * this.tileWidth;\n        const y = Math.floor(n / 16) * this.tileHeight;\n        const cx = x + Math.floor(this.tileWidth / 2);\n        const cy = y + Math.floor(this.tileHeight / 2);\n        this._ctx.save();\n        this._ctx.beginPath();\n        this._ctx.rect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.clip();\n        if (typeof ch === 'function') {\n            ch(this._ctx, x, y, this.tileWidth, this.tileHeight);\n        }\n        else {\n            if (this._map[ch] === undefined)\n                this._map[ch] = n;\n            this._ctx.fillText(ch, cx, cy);\n        }\n        this._ctx.restore();\n        this.needsUpdate = true;\n    }\n    _initGlyphs(basicOnly = false) {\n        for (let i = 32; i < 127; ++i) {\n            this.draw(i, String.fromCharCode(i));\n        }\n        if (!basicOnly) {\n            [' ', '\\u263a', '\\u263b', '\\u2665', '\\u2666', '\\u2663', '\\u2660', '\\u263c',\n                '\\u2600', '\\u2605', '\\u2606', '\\u2642', '\\u2640', '\\u266a', '\\u266b', '\\u2638',\n                '\\u25b6', '\\u25c0', '\\u2195', '\\u203c', '\\u204b', '\\u262f', '\\u2318', '\\u2616',\n                '\\u2191', '\\u2193', '\\u2192', '\\u2190', '\\u2126', '\\u2194', '\\u25b2', '\\u25bc',\n            ].forEach((ch, i) => {\n                this.draw(i, ch);\n            });\n            // [\n            // '\\u2302',\n            // '\\u2b09', '\\u272a', '\\u2718', '\\u2610', '\\u2611', '\\u25ef', '\\u25ce', '\\u2690',\n            // '\\u2691', '\\u2598', '\\u2596', '\\u259d', '\\u2597', '\\u2744', '\\u272d', '\\u2727',\n            // '\\u25e3', '\\u25e4', '\\u25e2', '\\u25e5', '\\u25a8', '\\u25a7', '\\u259a', '\\u265f',\n            // '\\u265c', '\\u265e', '\\u265d', '\\u265b', '\\u265a', '\\u301c', '\\u2694', '\\u2692',\n            // '\\u25b6', '\\u25bc', '\\u25c0', '\\u25b2', '\\u25a4', '\\u25a5', '\\u25a6', '\\u257a',\n            // '\\u257b', '\\u2578', '\\u2579', '\\u2581', '\\u2594', '\\u258f', '\\u2595', '\\u272d',\n            // '\\u2591', '\\u2592', '\\u2593', '\\u2503', '\\u252b', '\\u2561', '\\u2562', '\\u2556',\n            // '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255d', '\\u255c', '\\u255b', '\\u2513',\n            // '\\u2517', '\\u253b', '\\u2533', '\\u2523', '\\u2501', '\\u254b', '\\u255e', '\\u255f',\n            // '\\u255a', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256c', '\\u2567',\n            // '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256b',\n            // '\\u256a', '\\u251b', '\\u250f', '\\u2588', '\\u2585', '\\u258c', '\\u2590', '\\u2580',\n            // '\\u03b1', '\\u03b2', '\\u0393', '\\u03c0', '\\u03a3', '\\u03c3', '\\u03bc', '\\u03c4',\n            // '\\u03a6', '\\u03b8', '\\u03a9', '\\u03b4', '\\u221e', '\\u03b8', '\\u03b5', '\\u03b7',\n            // '\\u039e', '\\u00b1', '\\u2265', '\\u2264', '\\u2234', '\\u2237', '\\u00f7', '\\u2248',\n            // '\\u22c4', '\\u22c5', '\\u2217', '\\u27b5', '\\u2620', '\\u2625', '\\u25fc', '\\u25fb'\n            // ].forEach( (ch, i) => {\n            //   this.draw(i + 127, ch); \n            // });\n            ['\\u2302',\n                '\\u00C7', '\\u00FC', '\\u00E9', '\\u00E2', '\\u00E4', '\\u00E0', '\\u00E5', '\\u00E7',\n                '\\u00EA', '\\u00EB', '\\u00E8', '\\u00EF', '\\u00EE', '\\u00EC', '\\u00C4', '\\u00C5',\n                '\\u00C9', '\\u00E6', '\\u00C6', '\\u00F4', '\\u00F6', '\\u00F2', '\\u00FB', '\\u00F9',\n                '\\u00FF', '\\u00D6', '\\u00DC', '\\u00A2', '\\u00A3', '\\u00A5', '\\u20A7', '\\u0192',\n                '\\u00E1', '\\u00ED', '\\u00F3', '\\u00FA', '\\u00F1', '\\u00D1', '\\u00AA', '\\u00BA',\n                '\\u00BF', '\\u2310', '\\u00AC', '\\u00BD', '\\u00BC', '\\u00A1', '\\u00AB', '\\u00BB',\n                '\\u2591', '\\u2592', '\\u2593', '\\u2502', '\\u2524', '\\u2561', '\\u2562', '\\u2556',\n                '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255D', '\\u255C', '\\u255B', '\\u2510',\n                '\\u2514', '\\u2534', '\\u252C', '\\u251C', '\\u2500', '\\u253C', '\\u255E', '\\u255F',\n                '\\u255A', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256C', '\\u2567',\n                '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256B',\n                '\\u256A', '\\u2518', '\\u250C', '\\u2588', '\\u2584', '\\u258C', '\\u2590', '\\u2580',\n                '\\u03B1', '\\u00DF', '\\u0393', '\\u03C0', '\\u03A3', '\\u03C3', '\\u00B5', '\\u03C4',\n                '\\u03A6', '\\u0398', '\\u03A9', '\\u03B4', '\\u221E', '\\u03C6', '\\u03B5', '\\u2229',\n                '\\u2261', '\\u00B1', '\\u2265', '\\u2264', '\\u2320', '\\u2321', '\\u00F7', '\\u2248',\n                '\\u00B0', '\\u2219', '\\u00B7', '\\u221A', '\\u207F', '\\u00B2', '\\u25A0', '\\u00A0'\n            ].forEach((ch, i) => {\n                this.draw(i + 127, ch);\n            });\n        }\n    }\n}\n","export const colors = {};\nfunction clamp(v, n, x) {\n    return Math.max(n, Math.min(x, v));\n}\n// All colors are const!!!\nexport class Color {\n    // values are 0-100 for normal RGBA\n    constructor(r = -1, g = 0, b = 0, a = 100) {\n        if (r < 0) {\n            a = 0;\n            r = 0;\n        }\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n    rgb() {\n        return [this.r, this.g, this.b];\n    }\n    rgba() {\n        return [this.r, this.g, this.b, this.a];\n    }\n    isNull() {\n        return this.a === 0;\n    }\n    alpha(v) {\n        return new Color(this.r, this.g, this.b, clamp(v, 0, 100));\n    }\n    // luminosity (0-100)\n    get l() {\n        return Math.round(0.5 *\n            (Math.min(this.r, this.g, this.b) + Math.max(this.r, this.g, this.b)));\n    }\n    // saturation (0-100)\n    get s() {\n        if (this.l >= 100)\n            return 0;\n        return Math.round(((Math.max(this.r, this.g, this.b) - Math.min(this.r, this.g, this.b)) *\n            (100 - Math.abs(this.l * 2 - 100))) /\n            100);\n    }\n    // hue (0-360)\n    get h() {\n        let H = 0;\n        let R = this.r;\n        let G = this.g;\n        let B = this.b;\n        if (R >= G && G >= B) {\n            H = 60 * ((G - B) / (R - B));\n        }\n        else if (G > R && R >= B) {\n            H = 60 * (2 - (R - B) / (G - B));\n        }\n        else if (G >= B && B > R) {\n            H = 60 * (2 + (B - R) / (G - R));\n        }\n        else if (B > G && G > R) {\n            H = 60 * (4 - (G - R) / (B - R));\n        }\n        else if (B > R && R >= G) {\n            H = 60 * (4 + (R - G) / (B - G));\n        }\n        else {\n            H = 60 * (6 - (B - G) / (R - G));\n        }\n        return Math.round(H);\n    }\n    equals(other) {\n        if (typeof other === \"string\") {\n            if (other.startsWith(\"#\")) {\n                if (other.length == 4) {\n                    return this.css() === other;\n                }\n            }\n            if (this.name && this.name === other)\n                return true;\n        }\n        else if (typeof other === \"number\") {\n            const O = from(other);\n            return this.css() === O.css();\n        }\n        const O = from(other);\n        if (this.isNull())\n            return O.isNull();\n        if (O.isNull())\n            return false;\n        return this.r === O.r && this.g === O.g && this.b === O.b && this.a === O.a;\n    }\n    toInt() {\n        // if (this.isNull()) return -1;\n        const r = Math.max(0, Math.min(15, Math.round((this.r / 100) * 15)));\n        const g = Math.max(0, Math.min(15, Math.round((this.g / 100) * 15)));\n        const b = Math.max(0, Math.min(15, Math.round((this.b / 100) * 15)));\n        const a = Math.max(0, Math.min(15, Math.round((this.a / 100) * 15)));\n        // TODO - alpha\n        return (r << 12) + (g << 8) + (b << 4) + a;\n    }\n    toLight() {\n        return this.rgb();\n    }\n    clamp() {\n        if (this.isNull())\n            return this;\n        return make([\n            clamp(this.r, 0, 100),\n            clamp(this.g, 0, 100),\n            clamp(this.b, 0, 100),\n            clamp(this.a, 0, 100),\n        ]);\n    }\n    blend(other) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (O.a === 100)\n            return O;\n        const pct = O.a / 100;\n        const keepPct = 1 - pct;\n        const newColor = make(Math.round(this.r * keepPct + O.r * pct), Math.round(this.g * keepPct + O.g * pct), Math.round(this.b * keepPct + O.b * pct), Math.round(O.a + this.a * keepPct));\n        return newColor;\n    }\n    mix(other, percent) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (percent >= 100)\n            return O;\n        const pct = clamp(percent, 0, 100) / 100;\n        const keepPct = 1 - pct;\n        const newColor = make(Math.round(this.r * keepPct + O.r * pct), Math.round(this.g * keepPct + O.g * pct), Math.round(this.b * keepPct + O.b * pct), (this.isNull() ? 100 : this.a) * keepPct + O.a * pct);\n        return newColor;\n    }\n    // Only adjusts r,g,b\n    lighten(percent) {\n        if (this.isNull())\n            return this;\n        if (percent <= 0)\n            return this;\n        const pct = clamp(percent, 0, 100) / 100;\n        const keepPct = 1 - pct;\n        return make(Math.round(this.r * keepPct + 100 * pct), Math.round(this.g * keepPct + 100 * pct), Math.round(this.b * keepPct + 100 * pct), this.a);\n    }\n    // Only adjusts r,g,b\n    darken(percent) {\n        if (this.isNull())\n            return this;\n        const pct = clamp(percent, 0, 100) / 100;\n        const keepPct = 1 - pct;\n        return make(Math.round(this.r * keepPct + 0 * pct), Math.round(this.g * keepPct + 0 * pct), Math.round(this.b * keepPct + 0 * pct), this.a);\n    }\n    bake(_clearDancing = false) {\n        return this;\n    }\n    // Adds a color to this one\n    add(other, percent = 100) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        const alpha = (O.a / 100) * (percent / 100);\n        return new Color(Math.round(this.r + O.r * alpha), Math.round(this.g + O.g * alpha), Math.round(this.b + O.b * alpha), clamp(Math.round(this.a + alpha * 100), 0, 100));\n    }\n    scale(percent) {\n        if (this.isNull() || percent == 100)\n            return this;\n        const pct = Math.max(0, percent) / 100;\n        return make(Math.round(this.r * pct), Math.round(this.g * pct), Math.round(this.b * pct), this.a);\n    }\n    multiply(other) {\n        if (this.isNull())\n            return this;\n        let data;\n        if (Array.isArray(other)) {\n            if (other.length < 3)\n                throw new Error(\"requires at least r,g,b values.\");\n            data = other;\n        }\n        else {\n            if (other.isNull())\n                return this;\n            data = other.rgb();\n        }\n        const pct = (data[3] || 100) / 100;\n        return make(Math.round(this.r * (data[0] / 100) * pct), Math.round(this.g * (data[1] / 100) * pct), Math.round(this.b * (data[2] / 100) * pct), 100);\n    }\n    // scales rgb down to a max of 100\n    normalize() {\n        if (this.isNull())\n            return this;\n        const max = Math.max(this.r, this.g, this.b);\n        if (max <= 100)\n            return this;\n        return make(Math.round((100 * this.r) / max), Math.round((100 * this.g) / max), Math.round((100 * this.b) / max), 100);\n    }\n    /**\n     * Returns the css code for the current RGB values of the color.\n     * @param base256 - Show in base 256 (#abcdef) instead of base 16 (#abc)\n     */\n    css() {\n        if (this.a !== 100) {\n            const v = this.toInt();\n            // if (v < 0) return \"transparent\";\n            return \"#\" + v.toString(16).padStart(4, \"0\");\n        }\n        const v = this.toInt();\n        // if (v < 0) return \"transparent\";\n        return \"#\" + v.toString(16).padStart(4, \"0\").substring(0, 3);\n    }\n    toString() {\n        if (this.name)\n            return this.name;\n        // if (this.isNull()) return \"null color\";\n        return this.css();\n    }\n}\nexport function fromArray(vals, base256 = false) {\n    while (vals.length < 3)\n        vals.push(0);\n    if (base256) {\n        for (let i = 0; i < 3; ++i) {\n            vals[i] = Math.round(((vals[i] || 0) * 100) / 255);\n        }\n    }\n    return new Color(...vals);\n}\nexport function fromCss(css) {\n    if (!css.startsWith(\"#\")) {\n        throw new Error('Color CSS strings must be of form \"#abc\" or \"#abcdef\" - received: [' +\n            css +\n            \"]\");\n    }\n    const c = Number.parseInt(css.substring(1), 16);\n    let r, g, b;\n    if (css.length == 4) {\n        r = Math.round(((c >> 8) / 15) * 100);\n        g = Math.round((((c & 0xf0) >> 4) / 15) * 100);\n        b = Math.round(((c & 0xf) / 15) * 100);\n    }\n    else {\n        r = Math.round(((c >> 16) / 255) * 100);\n        g = Math.round((((c & 0xff00) >> 8) / 255) * 100);\n        b = Math.round(((c & 0xff) / 255) * 100);\n    }\n    return new Color(r, g, b);\n}\nexport function fromName(name) {\n    const c = colors[name];\n    if (!c) {\n        throw new Error(\"Unknown color name: \" + name);\n    }\n    return c;\n}\nexport function fromNumber(val, base256 = false) {\n    if (val < 0) {\n        return new Color();\n    }\n    else if (base256 || val > 0xfff) {\n        return new Color(Math.round((((val & 0xff0000) >> 16) * 100) / 255), Math.round((((val & 0xff00) >> 8) * 100) / 255), Math.round(((val & 0xff) * 100) / 255), 100);\n    }\n    else {\n        return new Color(Math.round((((val & 0xf00) >> 8) * 100) / 15), Math.round((((val & 0xf0) >> 4) * 100) / 15), Math.round(((val & 0xf) * 100) / 15), 100);\n    }\n}\nexport function make(...args) {\n    let arg = args[0];\n    let base256 = args[1];\n    if (args.length == 0)\n        return new Color();\n    if (args.length > 2) {\n        arg = args;\n        base256 = false; // TODO - Change this!!!\n    }\n    if (arg === undefined || arg === null)\n        return new Color(-1);\n    if (arg instanceof Color) {\n        return arg;\n    }\n    if (typeof arg === \"string\") {\n        if (arg.startsWith(\"#\")) {\n            return fromCss(arg);\n        }\n        return fromName(arg);\n    }\n    else if (Array.isArray(arg)) {\n        return fromArray(arg, base256);\n    }\n    else if (typeof arg === \"number\") {\n        return fromNumber(arg, base256);\n    }\n    throw new Error(\"Failed to make color - unknown argument: \" + JSON.stringify(arg));\n}\nexport function from(...args) {\n    const arg = args[0];\n    if (arg instanceof Color)\n        return arg;\n    if (arg === undefined)\n        return new Color(-1);\n    if (typeof arg === \"string\") {\n        if (!arg.startsWith(\"#\")) {\n            return fromName(arg);\n        }\n    }\n    return make(arg, args[1]);\n}\n// adjusts the luminosity of 2 colors to ensure there is enough separation between them\nexport function separate(a, b) {\n    if (a.isNull() || b.isNull())\n        return [a, b];\n    const A = a.clamp();\n    const B = b.clamp();\n    // console.log('separate');\n    // console.log('- a=%s, h=%d, s=%d, l=%d', A.toString(), A.h, A.s, A.l);\n    // console.log('- b=%s, h=%d, s=%d, l=%d', B.toString(), B.h, B.s, B.l);\n    let hDiff = Math.abs(A.h - B.h);\n    if (hDiff > 180) {\n        hDiff = 360 - hDiff;\n    }\n    if (hDiff > 45)\n        return [A, B]; // colors are far enough apart in hue to be distinct\n    const dist = 40;\n    if (Math.abs(A.l - B.l) >= dist)\n        return [A, B];\n    // Get them sorted by saturation ( we will darken the more saturated color and lighten the other)\n    const out = [A, B];\n    const lo = A.s <= B.s ? 0 : 1;\n    const hi = 1 - lo;\n    // console.log('- lo=%s, hi=%s', lo.toString(), hi.toString());\n    while (out[hi].l - out[lo].l < dist) {\n        out[hi] = out[hi].mix(WHITE, 5);\n        out[lo] = out[lo].mix(BLACK, 5);\n    }\n    // console.log('=>', a.toString(), b.toString());\n    return out;\n}\nexport function relativeLuminance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.2126 +\n            (a.g - b.g) * (a.g - b.g) * 0.7152 +\n            (a.b - b.b) * (a.b - b.b) * 0.0722)) /\n        10000);\n}\nexport function distance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.3333 +\n            (a.g - b.g) * (a.g - b.g) * 0.3333 +\n            (a.b - b.b) * (a.b - b.b) * 0.3333)) /\n        10000);\n}\n// Draws the smooth gradient that appears on a button when you hover over or depress it.\n// Returns the percentage by which the current tile should be averaged toward a hilite color.\nexport function smoothScalar(rgb, maxRgb = 100) {\n    return Math.floor(100 * Math.sin((Math.PI * rgb) / maxRgb));\n}\nexport function install(name, ...args) {\n    let info = args;\n    if (args.length == 1) {\n        info = args[0];\n    }\n    const c = info instanceof Color ? info : make(info);\n    // @ts-ignore\n    c._const = true;\n    colors[name] = c;\n    c.name = name;\n    return c;\n}\nexport function installSpread(name, ...args) {\n    let c;\n    if (args.length == 1) {\n        c = install(name, args[0]);\n    }\n    else {\n        c = install(name, ...args);\n    }\n    install(\"light_\" + name, c.lighten(25));\n    install(\"lighter_\" + name, c.lighten(50));\n    install(\"lightest_\" + name, c.lighten(75));\n    install(\"dark_\" + name, c.darken(25));\n    install(\"darker_\" + name, c.darken(50));\n    install(\"darkest_\" + name, c.darken(75));\n    return c;\n}\nexport const NONE = install(\"NONE\", -1);\nexport const BLACK = install(\"black\", 0x000);\nexport const WHITE = install(\"white\", 0xfff);\ninstallSpread(\"teal\", [30, 100, 100]);\ninstallSpread(\"brown\", [60, 40, 0]);\ninstallSpread(\"tan\", [80, 70, 55]); // 80, 67,\t\t15);\ninstallSpread(\"pink\", [100, 60, 66]);\ninstallSpread(\"gray\", [50, 50, 50]);\ninstallSpread(\"yellow\", [100, 100, 0]);\ninstallSpread(\"purple\", [100, 0, 100]);\ninstallSpread(\"green\", [0, 100, 0]);\ninstallSpread(\"orange\", [100, 50, 0]);\ninstallSpread(\"blue\", [0, 0, 100]);\ninstallSpread(\"red\", [100, 0, 0]);\ninstallSpread(\"amber\", [100, 75, 0]);\ninstallSpread(\"flame\", [100, 25, 0]);\ninstallSpread(\"fuchsia\", [100, 0, 100]);\ninstallSpread(\"magenta\", [100, 0, 75]);\ninstallSpread(\"crimson\", [100, 0, 25]);\ninstallSpread(\"lime\", [75, 100, 0]);\ninstallSpread(\"chartreuse\", [50, 100, 0]);\ninstallSpread(\"sepia\", [50, 40, 25]);\ninstallSpread(\"violet\", [50, 0, 100]);\ninstallSpread(\"han\", [25, 0, 100]);\ninstallSpread(\"cyan\", [0, 100, 100]);\ninstallSpread(\"turquoise\", [0, 100, 75]);\ninstallSpread(\"sea\", [0, 100, 50]);\ninstallSpread(\"sky\", [0, 75, 100]);\ninstallSpread(\"azure\", [0, 50, 100]);\ninstallSpread(\"silver\", [75, 75, 75]);\ninstallSpread(\"gold\", [100, 85, 0]);\n","import { VERTICES_PER_TILE } from \"./canvas\";\nimport * as Color from \"./color\";\nexport class Layer {\n    constructor(canvas, depth = 0) {\n        this._empty = true;\n        this.canvas = canvas;\n        this.resize(canvas.width, canvas.height);\n        this._depth = depth;\n    }\n    get width() {\n        return this.canvas.width;\n    }\n    get height() {\n        return this.canvas.height;\n    }\n    get depth() {\n        return this._depth;\n    }\n    get empty() {\n        return this._empty;\n    }\n    detach() {\n        // @ts-ignore\n        this.canvas = null;\n    }\n    resize(width, height) {\n        const size = width * height * VERTICES_PER_TILE;\n        if (!this.fg || this.fg.length !== size) {\n            this.fg = new Uint16Array(size);\n            this.bg = new Uint16Array(size);\n            this.glyph = new Uint8Array(size);\n        }\n    }\n    clear() {\n        this.fg.fill(0);\n        this.bg.fill(0);\n        this.glyph.fill(0);\n        this._empty = true;\n    }\n    draw(x, y, glyph, fg = 0xfff, bg = -1) {\n        const index = x + y * this.canvas.width;\n        if (typeof glyph === \"string\") {\n            glyph = this.canvas.glyphs.forChar(glyph);\n        }\n        fg = Color.from(fg).toInt();\n        bg = Color.from(bg).toInt();\n        this.set(index, glyph, fg, bg);\n        if (glyph || fg || bg) {\n            this._empty = false;\n        }\n    }\n    set(index, glyph, fg, bg) {\n        index *= VERTICES_PER_TILE;\n        glyph = glyph & 0xff;\n        bg = bg & 0xffff;\n        fg = fg & 0xffff;\n        for (let i = 0; i < VERTICES_PER_TILE; ++i) {\n            this.glyph[index + i] = glyph;\n            this.fg[index + i] = fg;\n            this.bg[index + i] = bg;\n        }\n    }\n    //   forEach(\n    //     cb: (i: number, glyph: number, fg: number, bg: number) => void\n    //   ): void {\n    //     for (let i = 0; i < this.glyph.length; ++i) {\n    //       cb(i, this.glyph[i], this.fg[i], this.bg[i]);\n    //     }\n    //   }\n    copy(buffer) {\n        if (buffer.width !== this.width || buffer.height !== this.height) {\n            console.log(\"auto resizing buffer\");\n            buffer.resize(this.width, this.height);\n        }\n        if (!this.canvas) {\n            throw new Error(\"Layer is detached.  Did you resize the canvas?\");\n        }\n        buffer._data.forEach((mixer, i) => {\n            let glyph = mixer.ch;\n            if (typeof glyph === \"string\") {\n                glyph = this.canvas.glyphs.forChar(glyph);\n            }\n            this.set(i, glyph, mixer.fg.toInt(), mixer.bg.toInt());\n        });\n        this.canvas._requestRender();\n    }\n    copyTo(buffer) {\n        buffer.resize(this.width, this.height);\n        for (let y = 0; y < this.height; ++y) {\n            for (let x = 0; x < this.width; ++x) {\n                const index = (x + y * this.width) * VERTICES_PER_TILE;\n                buffer.draw(x, y, this.glyph[index], this.fg[index], this.bg[index]);\n            }\n        }\n    }\n}\n","// Based on: https://github.com/ondras/fastiles/blob/master/ts/scene.ts (v2.1.0)\nimport * as shaders from \"./shaders\";\nimport { Glyphs } from \"./glyphs\";\nimport { Layer } from \"./layer\";\nimport * as Color from \"./color\";\nexport const VERTICES_PER_TILE = 6;\nexport class NotSupportedError extends Error {\n    constructor(...params) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(...params);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        // @ts-ignore\n        if (Error.captureStackTrace) {\n            // @ts-ignore\n            Error.captureStackTrace(this, NotSupportedError);\n        }\n        this.name = \"NotSupportedError\";\n    }\n}\nexport class Canvas {\n    constructor(options) {\n        this._renderRequested = false;\n        this._autoRender = true;\n        this._width = 50;\n        this._height = 25;\n        if (!options.glyphs)\n            throw new Error(\"You must supply glyphs for the canvas.\");\n        this._node = this._createNode();\n        this._createContext();\n        this._configure(options);\n    }\n    get node() {\n        return this._node;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get tileWidth() {\n        return this._glyphs.tileWidth;\n    }\n    get tileHeight() {\n        return this._glyphs.tileHeight;\n    }\n    get pxWidth() {\n        return this.node.clientWidth;\n    }\n    get pxHeight() {\n        return this.node.clientHeight;\n    }\n    get glyphs() {\n        return this._glyphs;\n    }\n    set glyphs(glyphs) {\n        this._setGlyphs(glyphs);\n    }\n    _createNode() {\n        return document.createElement(\"canvas\");\n    }\n    _configure(options) {\n        this._width = options.width || this._width;\n        this._height = options.height || this._height;\n        this._autoRender = options.render !== false;\n        this._setGlyphs(options.glyphs);\n        this.bg = Color.from(options.bg || Color.BLACK);\n        if (options.div) {\n            let el;\n            if (typeof options.div === \"string\") {\n                el = document.getElementById(options.div);\n                if (!el) {\n                    console.warn(\"Failed to find parent element by ID: \" + options.div);\n                }\n            }\n            else {\n                el = options.div;\n            }\n            if (el && el.appendChild) {\n                el.appendChild(this.node);\n            }\n        }\n    }\n    _setGlyphs(glyphs) {\n        if (glyphs === this._glyphs)\n            return false;\n        this._glyphs = glyphs;\n        this.resize(this._width, this._height);\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.uniform2uiv(uniforms[\"tileSize\"], [this.tileWidth, this.tileHeight]);\n        this._uploadGlyphs();\n        return true;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        const node = this.node;\n        node.width = this._width * this.tileWidth;\n        node.height = this._height * this.tileHeight;\n        const gl = this._gl;\n        // const uniforms = this._uniforms;\n        gl.viewport(0, 0, this.node.width, this.node.height);\n        // gl.uniform2ui(uniforms[\"viewportSize\"], this.node.width, this.node.height);\n        this._createGeometry();\n        this._createData();\n    }\n    _requestRender() {\n        if (this._renderRequested)\n            return;\n        this._renderRequested = true;\n        if (!this._autoRender)\n            return;\n        requestAnimationFrame(() => this.render());\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    toX(x) {\n        return Math.floor((this.width * x) / this.node.clientWidth);\n    }\n    toY(y) {\n        return Math.floor((this.height * y) / this.node.clientHeight);\n    }\n    _createContext() {\n        let gl = this.node.getContext(\"webgl2\");\n        if (!gl) {\n            throw new NotSupportedError(\"WebGL 2 not supported\");\n        }\n        this._gl = gl;\n        this._buffers = {};\n        this._attribs = {};\n        this._uniforms = {};\n        const p = createProgram(gl, shaders.VS, shaders.FS);\n        gl.useProgram(p);\n        const attributeCount = gl.getProgramParameter(p, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            gl.enableVertexAttribArray(i);\n            let info = gl.getActiveAttrib(p, i);\n            this._attribs[info.name] = i;\n        }\n        const uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(p, i);\n            this._uniforms[info.name] = gl.getUniformLocation(p, info.name);\n        }\n        gl.uniform1i(this._uniforms[\"font\"], 0);\n        this._texture = createTexture(gl);\n    }\n    _createGeometry() {\n        const gl = this._gl;\n        this._buffers.position && gl.deleteBuffer(this._buffers.position);\n        this._buffers.uv && gl.deleteBuffer(this._buffers.uv);\n        let buffers = createGeometry(gl, this._attribs, this.width, this.height);\n        Object.assign(this._buffers, buffers);\n    }\n    _createData() {\n        const gl = this._gl;\n        const attribs = this._attribs;\n        this._buffers.fg && gl.deleteBuffer(this._buffers.fg);\n        this._buffers.bg && gl.deleteBuffer(this._buffers.bg);\n        this._buffers.glyph && gl.deleteBuffer(this._buffers.glyph);\n        if (this.layer) {\n            this.layer.detach();\n        }\n        this.layer = new Layer(this, 0);\n        const fg = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, fg);\n        gl.vertexAttribIPointer(attribs[\"fg\"], 1, gl.UNSIGNED_SHORT, 0, 0);\n        const bg = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, bg);\n        gl.vertexAttribIPointer(attribs[\"bg\"], 1, gl.UNSIGNED_SHORT, 0, 0);\n        const glyph = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, glyph);\n        gl.vertexAttribIPointer(attribs[\"glyph\"], 1, gl.UNSIGNED_BYTE, 0, 0);\n        Object.assign(this._buffers, { fg, bg, glyph });\n    }\n    _uploadGlyphs() {\n        if (!this._glyphs.needsUpdate)\n            return;\n        const gl = this._gl;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._glyphs.node);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        this._requestRender();\n        this._glyphs.needsUpdate = false;\n    }\n    draw(x, y, glyph, fg, bg) {\n        this.layer.draw(x, y, glyph, fg, bg);\n        this._requestRender();\n        return true;\n    }\n    render() {\n        const gl = this._gl;\n        if (this._glyphs.needsUpdate) {\n            // auto keep glyphs up to date\n            this._uploadGlyphs();\n        }\n        else if (!this._renderRequested) {\n            return;\n        }\n        this._renderRequested = false;\n        // clear to bg color?\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        gl.clearColor(this.bg.r / 100, this.bg.g / 100, this.bg.b / 100, this.bg.a / 100);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        // loop layers\n        if (!this.layer.empty) {\n            // set depth\n            gl.uniform1i(this._uniforms[\"depth\"], this.layer.depth);\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.fg);\n            gl.bufferData(gl.ARRAY_BUFFER, this.layer.fg, gl.DYNAMIC_DRAW);\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.bg);\n            gl.bufferData(gl.ARRAY_BUFFER, this.layer.bg, gl.DYNAMIC_DRAW);\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.glyph);\n            gl.bufferData(gl.ARRAY_BUFFER, this.layer.glyph, gl.DYNAMIC_DRAW);\n            gl.drawArrays(gl.TRIANGLES, 0, this._width * this._height * VERTICES_PER_TILE);\n        }\n        // end loop\n    }\n}\nexport function withImage(image) {\n    let opts = {};\n    if (typeof image === \"string\") {\n        opts.glyphs = Glyphs.fromImage(image);\n    }\n    else if (image instanceof HTMLImageElement) {\n        opts.glyphs = Glyphs.fromImage(image);\n    }\n    else {\n        if (!image.image)\n            throw new Error(\"You must supply the image.\");\n        Object.assign(opts, image);\n        opts.glyphs = Glyphs.fromImage(image.image);\n    }\n    return new Canvas(opts);\n}\nexport function withFont(src) {\n    if (typeof src === \"string\") {\n        src = { font: src };\n    }\n    src.glyphs = Glyphs.fromFont(src);\n    return new Canvas(src);\n}\n// Copy of: https://github.com/ondras/fastiles/blob/master/ts/utils.ts (v2.1.0)\nexport function createProgram(gl, ...sources) {\n    const p = gl.createProgram();\n    [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER].forEach((type, index) => {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sources[index]);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(shader));\n        }\n        gl.attachShader(p, shader);\n    });\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p));\n    }\n    return p;\n}\nfunction createTexture(gl) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    return t;\n}\n// x, y offsets for 6 verticies (2 triangles) in square\nexport const QUAD = [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1];\nfunction createGeometry(gl, attribs, width, height) {\n    let tileCount = width * height;\n    let positionData = new Float32Array(tileCount * QUAD.length);\n    let offsetData = new Uint8Array(tileCount * QUAD.length);\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            const index = (x + y * width) * QUAD.length;\n            positionData.set(QUAD.map((v, i) => {\n                if (i % 2) {\n                    // y\n                    return 1 - (2 * (y + v)) / height;\n                }\n                else {\n                    return (2 * (x + v)) / width - 1;\n                }\n            }), index);\n            offsetData.set(QUAD, index);\n        }\n    }\n    const position = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, position);\n    gl.vertexAttribPointer(attribs[\"position\"], 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, positionData, gl.STATIC_DRAW);\n    const uv = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uv);\n    gl.vertexAttribIPointer(attribs[\"offset\"], 2, gl.UNSIGNED_BYTE, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, offsetData, gl.STATIC_DRAW);\n    return { position, uv };\n}\n","import * as Color from \"./color\";\nexport class Mixer {\n    constructor(base = {}) {\n        this.ch = base.ch || 0;\n        this.fg = Color.make(base.fg);\n        this.bg = Color.make(base.bg);\n    }\n    _changed() {\n        return this;\n    }\n    copy(other) {\n        this.ch = other.ch || -1;\n        this.fg = Color.from(other.fg);\n        this.bg = Color.from(other.bg);\n        return this._changed();\n    }\n    clone() {\n        const other = new Mixer();\n        other.copy(this);\n        return other;\n    }\n    equals(other) {\n        return (this.ch == other.ch &&\n            this.fg.equals(other.fg) &&\n            this.bg.equals(other.bg));\n    }\n    // get dances(): boolean {\n    //   return this.fg.dances || this.bg.dances;\n    // }\n    nullify() {\n        this.ch = -1;\n        this.fg = Color.NONE;\n        this.bg = Color.NONE;\n        return this._changed();\n    }\n    blackOut() {\n        this.ch = -1;\n        this.fg = Color.BLACK;\n        this.bg = Color.BLACK;\n        return this._changed();\n    }\n    draw(ch = -1, fg = -1, bg = -1) {\n        if (ch && ch !== -1) {\n            this.ch = ch;\n        }\n        if (fg !== -1 && fg !== null) {\n            fg = Color.from(fg);\n            this.fg = this.fg.blend(fg);\n        }\n        if (bg !== -1 && bg !== null) {\n            bg = Color.from(bg);\n            this.bg = this.bg.blend(bg);\n        }\n        return this._changed();\n    }\n    drawSprite(src, opacity) {\n        if (src === this)\n            return this;\n        // @ts-ignore\n        if (opacity === undefined)\n            opacity = src.opacity;\n        if (opacity === undefined)\n            opacity = 100;\n        if (opacity <= 0)\n            return;\n        if (src.ch)\n            this.ch = src.ch;\n        if ((src.fg && src.fg !== -1) || src.fg === 0)\n            this.fg = this.fg.mix(src.fg, opacity);\n        if ((src.bg && src.bg !== -1) || src.bg === 0)\n            this.bg = this.bg.mix(src.bg, opacity);\n        return this._changed();\n    }\n    invert() {\n        [this.bg, this.fg] = [this.fg, this.bg];\n        return this._changed();\n    }\n    multiply(color, fg = true, bg = true) {\n        color = Color.from(color);\n        if (fg) {\n            this.fg = this.fg.multiply(color);\n        }\n        if (bg) {\n            this.bg = this.bg.multiply(color);\n        }\n        return this._changed();\n    }\n    scale(multiplier, fg = true, bg = true) {\n        if (fg)\n            this.fg = this.fg.scale(multiplier);\n        if (bg)\n            this.bg = this.bg.scale(multiplier);\n        return this._changed();\n    }\n    mix(color, fg = 50, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg = this.fg.mix(color, fg);\n        }\n        if (bg > 0) {\n            this.bg = this.bg.mix(color, bg);\n        }\n        return this._changed();\n    }\n    add(color, fg = 100, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg = this.fg.add(color, fg);\n        }\n        if (bg > 0) {\n            this.bg = this.bg.add(color, bg);\n        }\n        return this._changed();\n    }\n    separate() {\n        [this.fg, this.bg] = Color.separate(this.fg, this.bg);\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        this.fg = this.fg.bake(clearDancing);\n        this.bg = this.bg.bake(clearDancing);\n        this._changed();\n        return {\n            ch: this.ch,\n            fg: this.fg.toInt(),\n            bg: this.bg.toInt(),\n        };\n    }\n    toString() {\n        // prettier-ignore\n        return `{ ch: ${this.ch}, fg: ${this.fg.toString()}, bg: ${this.bg.toString()} }`;\n    }\n}\nexport function makeMixer(base) {\n    return new Mixer(base);\n}\n","import { Mixer } from \"./mixer\";\nexport class DataBuffer {\n    constructor(width, height) {\n        this._data = [];\n        this.resize(width, height);\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    resize(width, height) {\n        if (this._width === width && this._height === height)\n            return;\n        this._width = width;\n        this._height = height;\n        while (this._data.length < width * height) {\n            this._data.push(new Mixer());\n        }\n        this._data.length = width * height; // truncate if was too large\n    }\n    get(x, y) {\n        let index = y * this.width + x;\n        return this._data[index];\n    }\n    _toGlyph(ch) {\n        if (ch === null || ch === undefined)\n            return -1;\n        return ch.charCodeAt(0);\n    }\n    draw(x, y, glyph = -1, fg = -1, bg = -1) {\n        let index = y * this.width + x;\n        const current = this._data[index];\n        current.draw(glyph, fg, bg);\n        return this;\n    }\n    // This is without opacity - opacity must be done in Mixer\n    drawSprite(x, y, sprite) {\n        let glyph = sprite.ch\n            ? sprite.ch\n            : sprite.glyph !== undefined\n                ? sprite.glyph\n                : -1;\n        // const fg = sprite.fg ? sprite.fg.toInt() : -1;\n        // const bg = sprite.bg ? sprite.bg.toInt() : -1;\n        return this.draw(x, y, glyph, sprite.fg, sprite.bg);\n    }\n    blackOut(x, y) {\n        if (arguments.length == 0) {\n            return this.fill(0, 0, 0);\n        }\n        return this.draw(x, y, 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xfff, bg = 0) {\n        this._data.forEach((m) => m.draw(glyph, fg, bg));\n        return this;\n    }\n    copy(other) {\n        this._data.forEach((m, i) => {\n            m.copy(other._data[i]);\n        });\n        return this;\n    }\n}\nexport class Buffer extends DataBuffer {\n    constructor(layer) {\n        super(layer.width, layer.height);\n        this._layer = layer;\n        layer.copyTo(this);\n    }\n    // get canvas() { return this._canvas; }\n    _toGlyph(ch) {\n        return this._layer.canvas.glyphs.forChar(ch);\n    }\n    render() {\n        this._layer.copy(this);\n        return this;\n    }\n    copyFromCanvas() {\n        this._layer.copyTo(this);\n        return this;\n    }\n}\n","export var options = {\n    random: Math.random.bind(Math),\n};\nexport function configure(opts = {}) {\n    Object.assign(options, opts);\n}\n","import * as Color from \"./color\";\nfunction clamp(v, n, x) {\n    return Math.min(x, Math.max(n, v));\n}\nexport class Sprite {\n    constructor(ch, fg, bg, opacity = 100) {\n        if (!ch)\n            ch = null;\n        this.ch = ch;\n        this.fg = Color.from(fg);\n        this.bg = Color.from(bg);\n        this.opacity = clamp(opacity, 0, 100);\n    }\n    clone() {\n        return new Sprite(this.ch, this.fg, this.bg, this.opacity);\n    }\n    toString() {\n        const parts = [];\n        if (this.ch)\n            parts.push(\"ch: \" + this.ch);\n        if (!this.fg.isNull())\n            parts.push(\"fg: \" + this.fg.toString());\n        if (!this.bg.isNull())\n            parts.push(\"bg: \" + this.bg.toString());\n        if (this.opacity !== 100)\n            parts.push(\"opacity: \" + this.opacity);\n        return \"{ \" + parts.join(\", \") + \" }\";\n    }\n}\nexport const sprites = {};\nexport function make(...args) {\n    let ch = null, fg = -1, bg = -1, opacity;\n    if (args.length == 0) {\n        return new Sprite(null, -1, -1);\n    }\n    else if (args.length == 1 && Array.isArray(args[0])) {\n        args = args[0];\n    }\n    if (args.length > 3) {\n        opacity = args[3];\n        args.pop();\n    }\n    else if (args.length == 2 &&\n        typeof args[1] == \"number\" &&\n        args[0].length > 1) {\n        opacity = args.pop();\n    }\n    if (args.length > 1) {\n        ch = args[0] || null;\n        fg = args[1];\n        bg = args[2];\n    }\n    else {\n        if (typeof args[0] === \"string\" && args[0].length == 1) {\n            ch = args[0];\n            fg = \"white\"; // white is default?\n        }\n        else if ((typeof args[0] === \"string\" && args[0].length > 1) ||\n            typeof args[0] === \"number\") {\n            bg = args[0];\n        }\n        else if (args[0] instanceof Color.Color) {\n            bg = args[0];\n        }\n        else {\n            const sprite = args[0];\n            ch = sprite.ch || null;\n            fg = sprite.fg || -1;\n            bg = sprite.bg || -1;\n            opacity = sprite.opacity;\n        }\n    }\n    if (typeof fg === \"string\")\n        fg = Color.from(fg);\n    else if (Array.isArray(fg))\n        fg = Color.make(fg);\n    else if (fg === undefined || fg === null)\n        fg = -1;\n    if (typeof bg === \"string\")\n        bg = Color.from(bg);\n    else if (Array.isArray(bg))\n        bg = Color.make(bg);\n    else if (bg === undefined || bg === null)\n        bg = -1;\n    return new Sprite(ch, fg, bg, opacity);\n}\nexport function from(config) {\n    if (typeof config === \"string\") {\n        const sprite = sprites[config];\n        if (!sprite)\n            throw new Error(\"Failed to find sprite: \" + config);\n        return sprite;\n    }\n    return make(config);\n}\nexport function install(name, ...args) {\n    let sprite;\n    // @ts-ignore\n    sprite = make(...args);\n    sprite.name = name;\n    sprites[name] = sprite;\n    return sprite;\n}\n"],"names":["VS","trim","FS","Glyphs","[object Object]","opts","this","_tileWidth","_tileHeight","needsUpdate","_map","font","_node","document","createElement","_ctx","node","getContext","_configure","src","startsWith","Error","el","getElementById","glyph","tileWidth","width","tileHeight","height","drawImage","glyphs","basicOnly","basic","_initGlyphs","ctx","pxWidth","pxHeight","ch","fillStyle","fillRect","size","fontSize","Math","max","textAlign","textBaseline","n","x","y","floor","cx","cy","save","beginPath","rect","clip","undefined","fillText","restore","i","draw","String","fromCharCode","forEach","colors","clamp","v","min","Color","r","g","b","a","l","round","s","abs","h","H","R","G","B","other","length","css","name","O","from","isNull","rgb","make","pct","keepPct","percent","_clearDancing","alpha","data","Array","isArray","toInt","toString","padStart","substring","fromArray","vals","base256","push","fromCss","c","Number","parseInt","fromName","fromNumber","val","args","arg","JSON","stringify","separate","A","hDiff","out","lo","hi","mix","WHITE","BLACK","install","info","_const","installSpread","lighten","darken","NONE","maxRgb","sin","PI","Layer","canvas","depth","_empty","resize","_depth","empty","VERTICES_PER_TILE","fg","Uint16Array","bg","Uint8Array","fill","index","forChar","Color.from","set","buffer","console","log","_data","mixer","_requestRender","NotSupportedError","params","super","captureStackTrace","Canvas","options","_renderRequested","_autoRender","_width","_height","_createNode","_createContext","_glyphs","clientWidth","clientHeight","_setGlyphs","render","Color.BLACK","div","warn","appendChild","gl","_gl","uniforms","_uniforms","uniform2uiv","_uploadGlyphs","viewport","_createGeometry","_createData","requestAnimationFrame","_buffers","_attribs","p","sources","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","type","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaders.VS","shaders.FS","useProgram","attributeCount","ACTIVE_ATTRIBUTES","enableVertexAttribArray","getActiveAttrib","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","uniform1i","_texture","t","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","position","deleteBuffer","uv","buffers","attribs","tileCount","positionData","Float32Array","QUAD","offsetData","map","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","vertexAttribIPointer","UNSIGNED_BYTE","createGeometry","Object","assign","layer","detach","UNSIGNED_SHORT","activeTexture","TEXTURE0","texImage2D","RGBA","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","clearColor","clear","COLOR_BUFFER_BIT","DYNAMIC_DRAW","drawArrays","TRIANGLES","Mixer","base","Color.make","_changed","copy","equals","Color.NONE","blend","opacity","color","multiply","multiplier","scale","add","Color.separate","clearDancing","bake","DataBuffer","charCodeAt","sprite","arguments","m","random","bind","Sprite","parts","join","_layer","copyTo","fromFont","image","fromImage","HTMLImageElement"],"mappings":"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"}