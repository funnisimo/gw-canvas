{"version":3,"file":"gw-canvas.min.js","sources":["../js/utils.js","../js/shaders.js","../js/glyphs.js","../js/canvas.js","../js/buffer.js","../js/index.js"],"sourcesContent":["// Copy of: https://github.com/ondras/fastiles/blob/master/ts/utils.ts (v2.1.0)\nexport const QUAD = [\n    0, 0, 1, 0, 0, 1,\n    0, 1, 1, 0, 1, 1\n];\nexport function createProgram(gl, ...sources) {\n    const p = gl.createProgram();\n    [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER].forEach((type, index) => {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sources[index]);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(shader));\n        }\n        gl.attachShader(p, shader);\n    });\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p));\n    }\n    return p;\n}\nexport function createTexture(gl) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    return t;\n}\n","// Based on: https://github.com/ondras/fastiles/blob/master/ts/shaders.ts (v2.1.0)\nexport const VS = `\n#version 300 es\nin uvec2 position;\nin uvec2 uv;\nin uint style;\nout vec2 fsUv;\nflat out uint fsStyle;\nuniform highp uvec2 tileSize;\nuniform uvec2 viewportSize;\nvoid main() {\n\tivec2 positionPx = ivec2(position * tileSize);\n\tvec2 positionNdc = (vec2(positionPx * 2) / vec2(viewportSize))-1.0;\n\tpositionNdc.y *= -1.0;\n\tgl_Position = vec4(positionNdc, 0.0, 1.0);\n\tfsUv = vec2(uv);\n\tfsStyle = style;\n}`.trim();\nexport const FS = `\n#version 300 es\nprecision highp float;\nin vec2 fsUv;\nflat in uint fsStyle;\nout vec4 fragColor;\nuniform sampler2D font;\nuniform highp uvec2 tileSize;\nvoid main() {\n\tuvec2 fontTiles = uvec2(textureSize(font, 0)) / tileSize;\n\n\tuint glyph = (fsStyle & uint(0xFF000000)) >> 24;\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tuvec2 fontPosition = uvec2(glyphX, glyphY);\n\n\tuvec2 fontPx = (tileSize * fontPosition) + uvec2(vec2(tileSize) * fsUv);\n\tvec3 texel = texelFetch(font, ivec2(fontPx), 0).rgb;\n\n\tfloat s = 15.0;\n\tuint fr = (fsStyle & uint(0xF00)) >> 8;\n\tuint fg = (fsStyle & uint(0x0F0)) >> 4;\n\tuint fb = (fsStyle & uint(0x00F)) >> 0;\n\tvec3 fgRgb = vec3(fr, fg, fb) / s;\n  \n\tuint br = (fsStyle & uint(0xF00000)) >> 20;\n\tuint bg = (fsStyle & uint(0x0F0000)) >> 26;\n\tuint bb = (fsStyle & uint(0x00F000)) >> 12;\n\tvec3 bgRgb = vec3(br, bg, bb) / s;\n  \n\tfragColor = vec4(mix(bgRgb, fgRgb, texel), 1.0);\n}`.trim();\n","export class Glyphs {\n    constructor(opts = {}) {\n        this._tileWidth = 12;\n        this._tileHeight = 16;\n        this.needsUpdate = true;\n        this._map = {};\n        opts.font = opts.font || 'monospace';\n        this._configure(opts);\n    }\n    static fromImage(src) {\n        if (typeof src === 'string') {\n            if (src.startsWith('data:'))\n                throw new Error('Glyph: You must load a data string into an image element and use that.');\n            const el = document.getElementById(src);\n            if (!el)\n                throw new Error('Glyph: Failed to find image element with id:' + src);\n            src = el;\n        }\n        const glyph = new this();\n        glyph.node.width = src.width;\n        glyph.node.height = src.height;\n        glyph._tileWidth = src.width / 16;\n        glyph._tileHeight = src.height / 16;\n        glyph._ctx.drawImage(src, 0, 0);\n        glyph.needsUpdate = true;\n        return glyph;\n    }\n    static fromFont(src) {\n        if (typeof src === 'string') {\n            src = { font: src };\n        }\n        const glyphs = new this(src);\n        const basicOnly = src.basicOnly || src.basic || false;\n        glyphs._initGlyphs(basicOnly);\n        return glyphs;\n    }\n    // get width() { return 16; }\n    // get height() { return 16; }\n    get tileWidth() { return this._tileWidth; }\n    get tileHeight() { return this._tileHeight; }\n    get pxWidth() { return this.node.width; }\n    get pxHeight() { return this.node.height; }\n    forChar(ch) { return this._map[ch] || 0; }\n    _configure(opts) {\n        this.node = document.createElement('canvas');\n        this._ctx = this.node.getContext('2d');\n        this._tileWidth = opts.tileWidth || this.tileWidth;\n        this._tileHeight = opts.tileHeight || this.tileHeight;\n        this.node.width = 16 * this.tileWidth;\n        this.node.height = 16 * this.tileHeight;\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(0, 0, this.pxWidth, this.pxHeight);\n        const size = opts.fontSize || opts.size || Math.max(this.tileWidth, this.tileHeight);\n        this._ctx.font = '' + size + 'px ' + opts.font;\n        this._ctx.textAlign = 'center';\n        this._ctx.textBaseline = 'middle';\n        this._ctx.fillStyle = 'white';\n    }\n    draw(n, ch) {\n        const x = (n % 16) * this.tileWidth;\n        const y = Math.floor(n / 16) * this.tileHeight;\n        const cx = x + Math.floor(this.tileWidth / 2);\n        const cy = y + Math.floor(this.tileHeight / 2);\n        this._ctx.save();\n        this._ctx.beginPath();\n        this._ctx.rect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.clip();\n        if (typeof ch === 'function') {\n            ch(this._ctx, x, y, this.tileWidth, this.tileHeight);\n        }\n        else {\n            this._map[ch] = n;\n            this._ctx.fillText(ch, cx, cy);\n        }\n        this._ctx.restore();\n        this.needsUpdate = true;\n    }\n    _initGlyphs(basicOnly = false) {\n        for (let i = 32; i < 127; ++i) {\n            this.draw(i, String.fromCharCode(i));\n        }\n        if (!basicOnly) {\n            [' ', '\\u263a', '\\u263b', '\\u2665', '\\u2666', '\\u2663', '\\u2660', '\\u263c',\n                '\\u2600', '\\u2605', '\\u2606', '\\u2642', '\\u2640', '\\u266a', '\\u266b', '\\u2638',\n                '\\u25b6', '\\u25c0', '\\u2195', '\\u203c', '\\u204b', '\\u262f', '\\u2318', '\\u2616',\n                '\\u2191', '\\u2193', '\\u2192', '\\u2190', '\\u2126', '\\u2194', '\\u25b2', '\\u25bc',\n            ].forEach((ch, i) => {\n                this.draw(i, ch);\n            });\n            [\n                '\\u2302',\n                '\\u2b09', '\\u272a', '\\u2718', '\\u2610', '\\u2611', '\\u25ef', '\\u25ce', '\\u2690',\n                '\\u2691', '\\u2598', '\\u2596', '\\u259d', '\\u2597', '\\u2744', '\\u272d', '\\u2727',\n                '\\u25e3', '\\u25e4', '\\u25e2', '\\u25e5', '\\u25a8', '\\u25a7', '\\u259a', '\\u265f',\n                '\\u265c', '\\u265e', '\\u265d', '\\u265b', '\\u265a', '\\u301c', '\\u2694', '\\u2692',\n                '\\u25b6', '\\u25bc', '\\u25c0', '\\u25b2', '\\u25a4', '\\u25a5', '\\u25a6', '\\u257a',\n                '\\u257b', '\\u2578', '\\u2579', '\\u2581', '\\u2594', '\\u258f', '\\u2595', '\\u272d',\n                '\\u2591', '\\u2592', '\\u2593', '\\u2503', '\\u252b', '\\u2561', '\\u2562', '\\u2556',\n                '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255d', '\\u255c', '\\u255b', '\\u2513',\n                '\\u2517', '\\u253b', '\\u2533', '\\u2523', '\\u2501', '\\u254b', '\\u255e', '\\u255f',\n                '\\u255a', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256c', '\\u2567',\n                '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256b',\n                '\\u256a', '\\u251b', '\\u250f', '\\u2588', '\\u2585', '\\u258c', '\\u2590', '\\u2580',\n                '\\u03b1', '\\u03b2', '\\u0393', '\\u03c0', '\\u03a3', '\\u03c3', '\\u03bc', '\\u03c4',\n                '\\u03a6', '\\u03b8', '\\u03a9', '\\u03b4', '\\u221e', '\\u03b8', '\\u03b5', '\\u03b7',\n                '\\u039e', '\\u00b1', '\\u2265', '\\u2264', '\\u2234', '\\u2237', '\\u00f7', '\\u2248',\n                '\\u22c4', '\\u22c5', '\\u2217', '\\u27b5', '\\u2620', '\\u2625', '\\u25fc', '\\u25fb'\n            ].forEach((ch, i) => {\n                this.draw(i + 127, ch);\n            });\n        }\n    }\n}\n","// Based on: https://github.com/ondras/fastiles/blob/master/ts/scene.ts (v2.1.0)\nimport { createProgram, createTexture, QUAD } from \"./utils\";\nimport * as shaders from \"./shaders\";\nimport { Glyphs } from './glyphs';\nconst VERTICES_PER_TILE = 6;\nexport class Canvas {\n    constructor(options) {\n        this._data = new Uint32Array();\n        this._buffers = {};\n        this._attribs = {};\n        this._uniforms = {};\n        this._renderRequested = false;\n        this._autoRender = true;\n        this._width = 50;\n        this._height = 25;\n        if (!options.glyphs)\n            throw new Error('You must supply glyphs for the canvas.');\n        this._gl = this._initGL(options.node);\n        this._configure(options);\n    }\n    get node() { return this._gl.canvas; }\n    get width() { return this._width; }\n    get height() { return this._height; }\n    get tileWidth() { return this._glyphs.tileWidth; }\n    get tileHeight() { return this._glyphs.tileHeight; }\n    get pxWidth() { return this.node.width; }\n    get pxHeight() { return this.node.height; }\n    get glyphs() { return this._glyphs; }\n    set glyphs(glyphs) {\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        if (!(glyphs instanceof Glyphs)) {\n            glyphs = Glyphs.fromImage(glyphs);\n        }\n        if (glyphs === this._glyphs && !glyphs.needsUpdate)\n            return;\n        if (glyphs !== this._glyphs) {\n            this._glyphs = glyphs;\n            this.resize(this._width, this._height);\n            gl.uniform2uiv(uniforms[\"tileSize\"], [this.tileWidth, this.tileHeight]);\n        }\n        this.uploadGlyphs();\n    }\n    _configure(options) {\n        this._width = options.width || this._width;\n        this._height = options.height || this._height;\n        this._autoRender = (options.render !== false);\n        this.glyphs = options.glyphs;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        const node = this.node;\n        node.width = this._width * this.tileWidth;\n        node.height = this._height * this.tileHeight;\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.viewport(0, 0, node.width, node.height);\n        gl.uniform2ui(uniforms[\"viewportSize\"], node.width, node.height);\n        this._createGeometry();\n        this._createData();\n    }\n    draw(x, y, glyph, fg, bg) {\n        let index = y * this._width + x;\n        index *= VERTICES_PER_TILE;\n        glyph = glyph & 0xFF;\n        bg = bg & 0xFFF;\n        fg = fg & 0xFFF;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data[index + 2] = style;\n        this._data[index + 5] = style;\n        this._requestRender();\n    }\n    copy(buffer) {\n        buffer.data.forEach((style, i) => {\n            const index = i * VERTICES_PER_TILE;\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n        });\n        this._requestRender();\n    }\n    copyTo(buffer) {\n        const n = this.width * this.height;\n        const dest = buffer.data;\n        for (let i = 0; i < n; ++i) {\n            const index = i * VERTICES_PER_TILE;\n            dest[i] = this._data[index + 2];\n        }\n    }\n    _initGL(node) {\n        if (typeof node === 'string') {\n            const el = document.getElementById(node);\n            if (!el)\n                throw new Error('Failed to find canvas with id:' + node);\n            if (!(el instanceof HTMLCanvasElement))\n                throw new Error('Canvas: node must be a canvas element.');\n            node = el;\n        }\n        else if (!node) {\n            node = document.createElement(\"canvas\");\n        }\n        let gl = node.getContext(\"webgl2\");\n        if (!gl) {\n            throw new Error(\"WebGL 2 not supported\");\n        }\n        const p = createProgram(gl, shaders.VS, shaders.FS);\n        gl.useProgram(p);\n        const attributeCount = gl.getProgramParameter(p, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            gl.enableVertexAttribArray(i);\n            let info = gl.getActiveAttrib(p, i);\n            this._attribs[info.name] = i;\n        }\n        const uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(p, i);\n            this._uniforms[info.name] = gl.getUniformLocation(p, info.name);\n        }\n        gl.uniform1i(this._uniforms[\"font\"], 0);\n        this._texture = createTexture(gl);\n        return gl;\n    }\n    _createGeometry() {\n        const gl = this._gl;\n        this._buffers.position && gl.deleteBuffer(this._buffers.position);\n        this._buffers.uv && gl.deleteBuffer(this._buffers.uv);\n        let buffers = createGeometry(gl, this._attribs, this._width, this._height);\n        Object.assign(this._buffers, buffers);\n    }\n    _createData() {\n        const gl = this._gl;\n        const attribs = this._attribs;\n        const tileCount = this._width * this._height;\n        this._buffers.style && gl.deleteBuffer(this._buffers.style);\n        this._data = new Uint32Array(tileCount * VERTICES_PER_TILE);\n        const style = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, style);\n        gl.vertexAttribIPointer(attribs[\"style\"], 1, gl.UNSIGNED_INT, 0, 0);\n        Object.assign(this._buffers, { style });\n    }\n    _requestRender() {\n        if (this._renderRequested || !this._autoRender) {\n            return;\n        }\n        this._renderRequested = true;\n        requestAnimationFrame(() => this._render());\n    }\n    _render() {\n        const gl = this._gl;\n        if (this._glyphs.needsUpdate) { // auto keep glyphs up to date\n            this.uploadGlyphs();\n        }\n        this._renderRequested = false;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.style);\n        gl.bufferData(gl.ARRAY_BUFFER, this._data, gl.DYNAMIC_DRAW);\n        gl.drawArrays(gl.TRIANGLES, 0, this._width * this._height * VERTICES_PER_TILE);\n    }\n    uploadGlyphs() {\n        if (!this._glyphs.needsUpdate)\n            return;\n        const gl = this._gl;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._glyphs.node);\n        this._requestRender();\n        this._glyphs.needsUpdate = false;\n    }\n}\nfunction createGeometry(gl, attribs, width, height) {\n    let tileCount = width * height;\n    let positionData = new Uint16Array(tileCount * QUAD.length);\n    let uvData = new Uint8Array(tileCount * QUAD.length);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            QUAD.forEach(value => {\n                positionData[i] = (i % 2 ? y : x) + value;\n                uvData[i] = value;\n                i++;\n            });\n        }\n    }\n    const position = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, position);\n    gl.vertexAttribIPointer(attribs[\"position\"], 2, gl.UNSIGNED_SHORT, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, positionData, gl.STATIC_DRAW);\n    const uv = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uv);\n    gl.vertexAttribIPointer(attribs[\"uv\"], 2, gl.UNSIGNED_BYTE, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, uvData, gl.STATIC_DRAW);\n    return { position, uv };\n}\n","export class Buffer {\n    constructor(canvas) {\n        this._canvas = canvas;\n        this._data = new Uint32Array(canvas.width * canvas.height);\n    }\n    get data() { return this._data; }\n    get width() { return this._canvas.width; }\n    get height() { return this._canvas.height; }\n    draw(x, y, glyph, fg, bg) {\n        let index = y * this.width + x;\n        glyph = glyph & 0xFF;\n        bg = bg & 0xFFF;\n        fg = fg & 0xFFF;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data[index] = style;\n    }\n    drawChar(x, y, ch, fg, bg) {\n        const glyphs = this._canvas.glyphs;\n        const glyph = glyphs.forChar(ch);\n        this.draw(x, y, glyph, fg, bg);\n    }\n    fill(glyph = 0, fg = 0xFFF, bg = 0) {\n        glyph = glyph & 0xFF;\n        bg = bg & 0xFFF;\n        fg = fg & 0xFFF;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data.fill(style);\n    }\n    copy(other) {\n        this._data.set(other._data);\n    }\n}\n","import { Canvas } from \"./canvas\";\nimport { Glyphs } from \"./glyphs\";\nimport { Buffer } from './buffer';\nfunction withImage(image) {\n    let opts = {};\n    if (typeof image === 'string') {\n        opts.glyphs = Glyphs.fromImage(image);\n    }\n    else if (image instanceof HTMLImageElement) {\n        opts.glyphs = Glyphs.fromImage(image);\n    }\n    else {\n        if (!image.image)\n            throw new Error('You must supply the image.');\n        Object.assign(opts, image);\n        opts.glyphs = Glyphs.fromImage(image.image);\n    }\n    return new Canvas(opts);\n}\nfunction withFont(src) {\n    if (typeof src === 'string') {\n        src = { font: src };\n    }\n    src.glyphs = Glyphs.fromFont(src);\n    return new Canvas(src);\n}\nexport { Canvas, Glyphs, Buffer, withImage, withFont, };\n"],"names":["QUAD","VS","trim","FS","Glyphs","[object Object]","opts","this","_tileWidth","_tileHeight","needsUpdate","_map","font","_configure","src","startsWith","Error","el","document","getElementById","glyph","node","width","height","_ctx","drawImage","glyphs","basicOnly","basic","_initGlyphs","tileWidth","tileHeight","pxWidth","pxHeight","ch","createElement","getContext","fillStyle","fillRect","size","fontSize","Math","max","textAlign","textBaseline","n","x","y","floor","cx","cy","save","beginPath","rect","clip","fillText","restore","i","draw","String","fromCharCode","forEach","Canvas","options","_data","Uint32Array","_buffers","_attribs","_uniforms","_renderRequested","_autoRender","_width","_height","_gl","_initGL","canvas","_glyphs","gl","uniforms","fromImage","resize","uniform2uiv","uploadGlyphs","render","viewport","uniform2ui","_createGeometry","_createData","fg","bg","index","style","_requestRender","buffer","data","dest","HTMLCanvasElement","p","sources","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","type","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaders.VS","shaders.FS","useProgram","attributeCount","ACTIVE_ATTRIBUTES","enableVertexAttribArray","info","getActiveAttrib","name","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","uniform1i","_texture","t","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","position","deleteBuffer","uv","buffers","attribs","tileCount","positionData","Uint16Array","length","uvData","Uint8Array","value","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribIPointer","UNSIGNED_SHORT","bufferData","STATIC_DRAW","UNSIGNED_BYTE","createGeometry","Object","assign","UNSIGNED_INT","requestAnimationFrame","_render","DYNAMIC_DRAW","drawArrays","TRIANGLES","activeTexture","TEXTURE0","texImage2D","RGBA","_canvas","forChar","fill","other","set","image","HTMLImageElement","fromFont"],"mappings":"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"}