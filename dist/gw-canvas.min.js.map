{"version":3,"file":"gw-canvas.min.js","sources":["../js/utils.js","../js/shaders.js","../js/canvas.js","../js/glyphs.js","../js/config.js","../js/color.js","../js/mixer.js","../js/buffer.js","../js/index.js"],"sourcesContent":["// Copy of: https://github.com/ondras/fastiles/blob/master/ts/utils.ts (v2.1.0)\nexport const QUAD = [\n    0, 0, 1, 0, 0, 1,\n    0, 1, 1, 0, 1, 1\n];\nexport function createProgram(gl, ...sources) {\n    const p = gl.createProgram();\n    [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER].forEach((type, index) => {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sources[index]);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(shader));\n        }\n        gl.attachShader(p, shader);\n    });\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p));\n    }\n    return p;\n}\nexport function createTexture(gl) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    return t;\n}\nexport function createGeometry(gl, attribs, width, height) {\n    let tileCount = width * height;\n    let positionData = new Uint16Array(tileCount * QUAD.length);\n    let uvData = new Uint8Array(tileCount * QUAD.length);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            QUAD.forEach(value => {\n                positionData[i] = (i % 2 ? y : x) + value;\n                uvData[i] = value;\n                i++;\n            });\n        }\n    }\n    const position = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, position);\n    gl.vertexAttribIPointer(attribs[\"position\"], 2, gl.UNSIGNED_SHORT, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, positionData, gl.STATIC_DRAW);\n    const uv = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uv);\n    gl.vertexAttribIPointer(attribs[\"uv\"], 2, gl.UNSIGNED_BYTE, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, uvData, gl.STATIC_DRAW);\n    return { position, uv };\n}\n","// Based on: https://github.com/ondras/fastiles/blob/master/ts/shaders.ts (v2.1.0)\nexport const VS = `\n#version 300 es\nin uvec2 position;\nin uvec2 uv;\nin uint style;\nout vec2 fsUv;\nflat out uint fsStyle;\nuniform highp uvec2 tileSize;\nuniform uvec2 viewportSize;\nvoid main() {\n\tivec2 positionPx = ivec2(position * tileSize);\n\tvec2 positionNdc = (vec2(positionPx * 2) / vec2(viewportSize))-1.0;\n\tpositionNdc.y *= -1.0;\n\tgl_Position = vec4(positionNdc, 0.0, 1.0);\n\tfsUv = vec2(uv);\n\tfsStyle = style;\n}`.trim();\nexport const FS = `\n#version 300 es\nprecision highp float;\nin vec2 fsUv;\nflat in uint fsStyle;\nout vec4 fragColor;\nuniform sampler2D font;\nuniform highp uvec2 tileSize;\nvoid main() {\n\tuvec2 fontTiles = uvec2(textureSize(font, 0)) / tileSize;\n\n\tuint glyph = (fsStyle & uint(0xFF000000)) >> 24;\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tuvec2 fontPosition = uvec2(glyphX, glyphY);\n\n\tuvec2 fontPx = (tileSize * fontPosition) + uvec2(vec2(tileSize) * fsUv);\n\tvec3 texel = texelFetch(font, ivec2(fontPx), 0).rgb;\n\n\tfloat s = 15.0;\n\tuint fr = (fsStyle & uint(0xF00)) >> 8;\n\tuint fg = (fsStyle & uint(0x0F0)) >> 4;\n\tuint fb = (fsStyle & uint(0x00F)) >> 0;\n\tvec3 fgRgb = vec3(fr, fg, fb) / s;\n  \n\tuint br = (fsStyle & uint(0xF00000)) >> 20;\n\tuint bg = (fsStyle & uint(0x0F0000)) >> 16;\n\tuint bb = (fsStyle & uint(0x00F000)) >> 12;\n\tvec3 bgRgb = vec3(br, bg, bb) / s;\n  \n\tfragColor = vec4(mix(bgRgb, fgRgb, texel), 1.0);\n}`.trim();\n","// Based on: https://github.com/ondras/fastiles/blob/master/ts/scene.ts (v2.1.0)\nimport { createProgram, createTexture, createGeometry } from \"./utils\";\nimport * as shaders from \"./shaders\";\nconst VERTICES_PER_TILE = 6;\nexport class Canvas {\n    constructor(options) {\n        this._data = new Uint32Array();\n        this._buffers = {};\n        this._attribs = {};\n        this._uniforms = {};\n        this._renderRequested = false;\n        this._autoRender = true;\n        this._width = 50;\n        this._height = 25;\n        if (!options.glyphs)\n            throw new Error('You must supply glyphs for the canvas.');\n        this._gl = this._initGL(options.node);\n        this._configure(options);\n    }\n    get node() { return this._gl.canvas; }\n    get width() { return this._width; }\n    get height() { return this._height; }\n    get tileWidth() { return this._glyphs.tileWidth; }\n    get tileHeight() { return this._glyphs.tileHeight; }\n    get pxWidth() { return this.node.width; }\n    get pxHeight() { return this.node.height; }\n    get glyphs() { return this._glyphs; }\n    set glyphs(glyphs) {\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        if (glyphs === this._glyphs && !glyphs.needsUpdate)\n            return;\n        if (glyphs !== this._glyphs) {\n            this._glyphs = glyphs;\n            this.resize(this._width, this._height);\n            gl.uniform2uiv(uniforms[\"tileSize\"], [this.tileWidth, this.tileHeight]);\n        }\n        this._uploadGlyphs();\n    }\n    _configure(options) {\n        this._width = options.width || this._width;\n        this._height = options.height || this._height;\n        this._autoRender = (options.render !== false);\n        this.glyphs = options.glyphs;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        const node = this.node;\n        node.width = this._width * this.tileWidth;\n        node.height = this._height * this.tileHeight;\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.viewport(0, 0, node.width, node.height);\n        gl.uniform2ui(uniforms[\"viewportSize\"], node.width, node.height);\n        this._createGeometry();\n        this._createData();\n    }\n    draw(x, y, glyph, fg, bg) {\n        let index = y * this._width + x;\n        index *= VERTICES_PER_TILE;\n        glyph = glyph & 0xFF;\n        bg = bg & 0xFFF;\n        fg = fg & 0xFFF;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data[index + 2] = style;\n        this._data[index + 5] = style;\n        this._requestRender();\n    }\n    copy(buffer) {\n        buffer.data.forEach((style, i) => {\n            const index = i * VERTICES_PER_TILE;\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n        });\n        this._requestRender();\n    }\n    copyTo(buffer) {\n        const n = this.width * this.height;\n        const dest = buffer.data;\n        for (let i = 0; i < n; ++i) {\n            const index = i * VERTICES_PER_TILE;\n            dest[i] = this._data[index + 2];\n        }\n    }\n    _initGL(node) {\n        if (typeof node === 'string') {\n            const el = document.getElementById(node);\n            if (!el)\n                throw new Error('Failed to find canvas with id:' + node);\n            if (!(el instanceof HTMLCanvasElement))\n                throw new Error('Canvas: node must be a canvas element.');\n            node = el;\n        }\n        else if (!node) {\n            node = document.createElement(\"canvas\");\n        }\n        let gl = node.getContext(\"webgl2\");\n        if (!gl) {\n            throw new Error(\"WebGL 2 not supported\");\n        }\n        const p = createProgram(gl, shaders.VS, shaders.FS);\n        gl.useProgram(p);\n        const attributeCount = gl.getProgramParameter(p, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            gl.enableVertexAttribArray(i);\n            let info = gl.getActiveAttrib(p, i);\n            this._attribs[info.name] = i;\n        }\n        const uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(p, i);\n            this._uniforms[info.name] = gl.getUniformLocation(p, info.name);\n        }\n        gl.uniform1i(this._uniforms[\"font\"], 0);\n        this._texture = createTexture(gl);\n        return gl;\n    }\n    _createGeometry() {\n        const gl = this._gl;\n        this._buffers.position && gl.deleteBuffer(this._buffers.position);\n        this._buffers.uv && gl.deleteBuffer(this._buffers.uv);\n        let buffers = createGeometry(gl, this._attribs, this._width, this._height);\n        Object.assign(this._buffers, buffers);\n    }\n    _createData() {\n        const gl = this._gl;\n        const attribs = this._attribs;\n        const tileCount = this._width * this._height;\n        this._buffers.style && gl.deleteBuffer(this._buffers.style);\n        this._data = new Uint32Array(tileCount * VERTICES_PER_TILE);\n        const style = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, style);\n        gl.vertexAttribIPointer(attribs[\"style\"], 1, gl.UNSIGNED_INT, 0, 0);\n        Object.assign(this._buffers, { style });\n    }\n    _requestRender() {\n        if (this._renderRequested || !this._autoRender) {\n            return;\n        }\n        this._renderRequested = true;\n        requestAnimationFrame(() => this.render());\n    }\n    render() {\n        const gl = this._gl;\n        if (this._glyphs.needsUpdate) { // auto keep glyphs up to date\n            this._uploadGlyphs();\n        }\n        this._renderRequested = false;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.style);\n        gl.bufferData(gl.ARRAY_BUFFER, this._data, gl.DYNAMIC_DRAW);\n        gl.drawArrays(gl.TRIANGLES, 0, this._width * this._height * VERTICES_PER_TILE);\n    }\n    _uploadGlyphs() {\n        if (!this._glyphs.needsUpdate)\n            return;\n        const gl = this._gl;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._glyphs.node);\n        this._requestRender();\n        this._glyphs.needsUpdate = false;\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    toX(x) {\n        return Math.floor(this.width * x / this.pxWidth);\n    }\n    toY(y) {\n        return Math.floor(this.height * y / this.pxHeight);\n    }\n}\n","export class Glyphs {\n    constructor(opts = {}) {\n        this._tileWidth = 12;\n        this._tileHeight = 16;\n        this.needsUpdate = true;\n        this._map = {};\n        opts.font = opts.font || 'monospace';\n        this._node = document.createElement('canvas');\n        this._ctx = this.node.getContext('2d');\n        this._configure(opts);\n    }\n    static fromImage(src) {\n        if (typeof src === 'string') {\n            if (src.startsWith('data:'))\n                throw new Error('Glyph: You must load a data string into an image element and use that.');\n            const el = document.getElementById(src);\n            if (!el)\n                throw new Error('Glyph: Failed to find image element with id:' + src);\n            src = el;\n        }\n        const glyph = new this({ tileWidth: src.width / 16, tileHeight: src.height / 16 });\n        glyph._ctx.drawImage(src, 0, 0);\n        return glyph;\n    }\n    static fromFont(src) {\n        if (typeof src === 'string') {\n            src = { font: src };\n        }\n        const glyphs = new this(src);\n        const basicOnly = src.basicOnly || src.basic || false;\n        glyphs._initGlyphs(basicOnly);\n        return glyphs;\n    }\n    get node() { return this._node; }\n    get tileWidth() { return this._tileWidth; }\n    get tileHeight() { return this._tileHeight; }\n    get pxWidth() { return this._node.width; }\n    get pxHeight() { return this._node.height; }\n    forChar(ch) { return this._map[ch] || (ch.charCodeAt(0) % 256); }\n    _configure(opts) {\n        this._tileWidth = opts.tileWidth || this.tileWidth;\n        this._tileHeight = opts.tileHeight || this.tileHeight;\n        this.node.width = 16 * this.tileWidth;\n        this.node.height = 16 * this.tileHeight;\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(0, 0, this.pxWidth, this.pxHeight);\n        const size = opts.fontSize || opts.size || Math.max(this.tileWidth, this.tileHeight);\n        this._ctx.font = '' + size + 'px ' + opts.font;\n        this._ctx.textAlign = 'center';\n        this._ctx.textBaseline = 'middle';\n        this._ctx.fillStyle = 'white';\n    }\n    draw(n, ch) {\n        const x = (n % 16) * this.tileWidth;\n        const y = Math.floor(n / 16) * this.tileHeight;\n        const cx = x + Math.floor(this.tileWidth / 2);\n        const cy = y + Math.floor(this.tileHeight / 2);\n        this._ctx.save();\n        this._ctx.beginPath();\n        this._ctx.rect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.clip();\n        if (typeof ch === 'function') {\n            ch(this._ctx, x, y, this.tileWidth, this.tileHeight);\n        }\n        else {\n            this._map[ch] = n;\n            this._ctx.fillText(ch, cx, cy);\n        }\n        this._ctx.restore();\n        this.needsUpdate = true;\n    }\n    _initGlyphs(basicOnly = false) {\n        for (let i = 32; i < 127; ++i) {\n            this.draw(i, String.fromCharCode(i));\n        }\n        if (!basicOnly) {\n            [' ', '\\u263a', '\\u263b', '\\u2665', '\\u2666', '\\u2663', '\\u2660', '\\u263c',\n                '\\u2600', '\\u2605', '\\u2606', '\\u2642', '\\u2640', '\\u266a', '\\u266b', '\\u2638',\n                '\\u25b6', '\\u25c0', '\\u2195', '\\u203c', '\\u204b', '\\u262f', '\\u2318', '\\u2616',\n                '\\u2191', '\\u2193', '\\u2192', '\\u2190', '\\u2126', '\\u2194', '\\u25b2', '\\u25bc',\n            ].forEach((ch, i) => {\n                this.draw(i, ch);\n            });\n            [\n                '\\u2302',\n                '\\u2b09', '\\u272a', '\\u2718', '\\u2610', '\\u2611', '\\u25ef', '\\u25ce', '\\u2690',\n                '\\u2691', '\\u2598', '\\u2596', '\\u259d', '\\u2597', '\\u2744', '\\u272d', '\\u2727',\n                '\\u25e3', '\\u25e4', '\\u25e2', '\\u25e5', '\\u25a8', '\\u25a7', '\\u259a', '\\u265f',\n                '\\u265c', '\\u265e', '\\u265d', '\\u265b', '\\u265a', '\\u301c', '\\u2694', '\\u2692',\n                '\\u25b6', '\\u25bc', '\\u25c0', '\\u25b2', '\\u25a4', '\\u25a5', '\\u25a6', '\\u257a',\n                '\\u257b', '\\u2578', '\\u2579', '\\u2581', '\\u2594', '\\u258f', '\\u2595', '\\u272d',\n                '\\u2591', '\\u2592', '\\u2593', '\\u2503', '\\u252b', '\\u2561', '\\u2562', '\\u2556',\n                '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255d', '\\u255c', '\\u255b', '\\u2513',\n                '\\u2517', '\\u253b', '\\u2533', '\\u2523', '\\u2501', '\\u254b', '\\u255e', '\\u255f',\n                '\\u255a', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256c', '\\u2567',\n                '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256b',\n                '\\u256a', '\\u251b', '\\u250f', '\\u2588', '\\u2585', '\\u258c', '\\u2590', '\\u2580',\n                '\\u03b1', '\\u03b2', '\\u0393', '\\u03c0', '\\u03a3', '\\u03c3', '\\u03bc', '\\u03c4',\n                '\\u03a6', '\\u03b8', '\\u03a9', '\\u03b4', '\\u221e', '\\u03b8', '\\u03b5', '\\u03b7',\n                '\\u039e', '\\u00b1', '\\u2265', '\\u2264', '\\u2234', '\\u2237', '\\u00f7', '\\u2248',\n                '\\u22c4', '\\u22c5', '\\u2217', '\\u27b5', '\\u2620', '\\u2625', '\\u25fc', '\\u25fb'\n            ].forEach((ch, i) => {\n                this.draw(i + 127, ch);\n            });\n        }\n    }\n}\n","export var options = {\n    random: Math.random.bind(Math),\n};\nexport function configure(opts = {}) {\n    Object.assign(options, opts);\n}\n","import { options } from './config';\nfunction toColorInt(r = 0, g = 0, b = 0, base256 = false) {\n    if (base256) {\n        r = Math.max(0, Math.min(255, Math.round(r * 2.550001)));\n        g = Math.max(0, Math.min(255, Math.round(g * 2.550001)));\n        b = Math.max(0, Math.min(255, Math.round(b * 2.550001)));\n        return (r << 16) + (g << 8) + b;\n    }\n    r = Math.max(0, Math.min(15, Math.round(r / 100 * 15)));\n    g = Math.max(0, Math.min(15, Math.round(g / 100 * 15)));\n    b = Math.max(0, Math.min(15, Math.round(b / 100 * 15)));\n    return (r << 8) + (g << 4) + b;\n}\nexport class Color extends Int16Array {\n    static fromArray(vals, base256 = false) {\n        while (vals.length < 3)\n            vals.push(0);\n        if (base256) {\n            for (let i = 0; i < 7; ++i) {\n                vals[i] = Math.round((vals[i] || 0) * 100 / 255);\n            }\n        }\n        return new this(...vals);\n    }\n    static fromString(css) {\n        if (!css.startsWith('#'))\n            throw new Error('Color strings must be of form \"#abc\" or \"#abcdef\" - received: [' + css + ']');\n        const c = Number.parseInt(css.substring(1), 16);\n        let r, g, b;\n        if (css.length == 4) {\n            r = Math.round((c >> 8) / 15 * 100);\n            g = Math.round(((c & 0xF0) >> 4) / 15 * 100);\n            b = Math.round((c & 0xF) / 15 * 100);\n        }\n        else {\n            r = Math.round((c >> 16) / 255 * 100);\n            g = Math.round(((c & 0xFF00) >> 8) / 255 * 100);\n            b = Math.round((c & 0xFF) / 255 * 100);\n        }\n        return new this(r, g, b);\n    }\n    static fromNumber(val, base256 = false) {\n        const c = new this();\n        for (let i = 0; i < c.length; ++i) {\n            c[i] = 0;\n        }\n        if (val < 0) {\n            c._r = -1;\n        }\n        else if (base256 || (val > 0xFFF)) {\n            c._r = Math.round(((val & 0xFF0000) >> 16) * 100 / 255);\n            c._g = Math.round(((val & 0xFF00) >> 8) * 100 / 255);\n            c._b = Math.round((val & 0xFF) * 100 / 255);\n        }\n        else {\n            c._r = Math.round(((val & 0xF00) >> 8) * 100 / 15);\n            c._g = Math.round(((val & 0xF0) >> 4) * 100 / 15);\n            c._b = Math.round((val & 0xF) * 100 / 15);\n        }\n        return c;\n    }\n    static make(arg, base256 = false) {\n        if ((arg === undefined) || (arg === null))\n            return new this(-1);\n        if (arg instanceof Color) {\n            return arg.clone();\n        }\n        if (typeof arg === 'string') {\n            return this.fromString(arg);\n        }\n        else if (Array.isArray(arg)) {\n            return this.fromArray(arg, base256);\n        }\n        else if (typeof arg === 'number') {\n            if (arg < 0)\n                return new this(-1);\n            return this.fromNumber(arg, base256);\n        }\n        throw new Error('Failed to make color - unknown argument: ' + JSON.stringify(arg));\n    }\n    static from(...args) {\n        const arg = args[0];\n        if (arg instanceof this)\n            return arg;\n        if (arg < 0)\n            return new this(-1);\n        return this.make(arg, args[1]);\n    }\n    constructor(r = -1, g = 0, b = 0, rand = 0, redRand = 0, greenRand = 0, blueRand = 0) {\n        super(7);\n        this.set([r, g, b, rand, redRand, greenRand, blueRand]);\n    }\n    get r() { return Math.round(this[0] * 2.550001); }\n    get _r() { return this[0]; }\n    set _r(v) { this[0] = v; }\n    get g() { return Math.round(this[1] * 2.550001); }\n    get _g() { return this[1]; }\n    set _g(v) { this[1] = v; }\n    get b() { return Math.round(this[2] * 2.550001); }\n    get _b() { return this[2]; }\n    set _b(v) { this[2] = v; }\n    get _rand() { return this[3]; }\n    get _redRand() { return this[4]; }\n    get _greenRand() { return this[5]; }\n    get _blueRand() { return this[6]; }\n    // luminosity (0-100)\n    get l() {\n        return Math.round(0.5 * (Math.min(this._r, this._g, this._b) + Math.max(this._r, this._g, this._b)));\n    }\n    // saturation (0-100)\n    get s() {\n        if (this.l >= 100)\n            return 0;\n        return Math.round((Math.max(this._r, this._g, this._b) - Math.min(this._r, this._g, this._b)) * (100 - Math.abs(this.l * 2 - 100)) / 100);\n    }\n    // hue (0-360)\n    get h() {\n        let H = 0;\n        let R = this.r;\n        let G = this.g;\n        let B = this.b;\n        if (R >= G && G >= B) {\n            H = 60 * ((G - B) / (R - B));\n        }\n        else if (G > R && R >= B) {\n            H = 60 * (2 - (R - B) / (G - B));\n        }\n        else if (G >= B && B > R) {\n            H = 60 * (2 + (B - R) / (G - R));\n        }\n        else if (B > G && G > R) {\n            H = 60 * (4 - (G - R) / (B - R));\n        }\n        else if (B > R && R >= G) {\n            H = 60 * (4 + (R - G) / (B - G));\n        }\n        else {\n            H = 60 * (6 - (B - G) / (R - G));\n        }\n        return Math.round(H);\n    }\n    isNull() { return this._r < 0; }\n    equals(other) {\n        if (typeof other === 'string') {\n            return (other.length > 4) ? (this.toString(true) == other) : (this.toString() == other);\n        }\n        const O = Color.from(other);\n        if (this.isNull())\n            return O.isNull();\n        return this.every((v, i) => {\n            return v == (O[i] || 0);\n        });\n    }\n    copy(other) {\n        if (Array.isArray(other)) {\n            this.set(other);\n        }\n        else {\n            const O = Color.from(other);\n            this.set(O);\n        }\n        return this;\n    }\n    _changed() {\n        return this;\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor();\n        other.copy(this);\n        return other;\n    }\n    assign(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = (arguments[i] || 0);\n        }\n        return this;\n    }\n    assignRGB(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((arguments[i] || 0) / 2.55);\n        }\n        return this;\n    }\n    nullify() {\n        this[0] = -1;\n        return this;\n    }\n    blackOut() {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = 0;\n        }\n        return this;\n    }\n    toInt(base256 = false) {\n        if (this.isNull())\n            return -1;\n        return toColorInt(this._r, this._g, this._b, base256);\n    }\n    clamp() {\n        if (this.isNull())\n            return this;\n        this._r = Math.min(100, Math.max(0, this._r));\n        this._g = Math.min(100, Math.max(0, this._g));\n        this._b = Math.min(100, Math.max(0, this._b));\n        return this._changed();\n    }\n    mix(other, percent) {\n        const O = Color.from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        percent = Math.min(100, Math.max(0, percent));\n        const keepPct = 100 - percent;\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round(((this[i] * keepPct) + (O[i] * percent)) / 100);\n        }\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    lighten(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round(((this[i] * keepPct) + (100 * percent)) / 100);\n        }\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    darken(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round(((this[i] * keepPct) + (0 * percent)) / 100);\n        }\n        return this._changed();\n    }\n    bake() {\n        if (this.isNull())\n            return this;\n        const d = this;\n        if (d[3] + d[4] + d[5] + d[6]) {\n            const rand = this._rand ? Math.floor(options.random() * this._rand) : 0;\n            const redRand = this._redRand ? Math.floor(options.random() * this._redRand) : 0;\n            const greenRand = this._greenRand ? Math.floor(options.random() * this._greenRand) : 0;\n            const blueRand = this._blueRand ? Math.floor(options.random() * this._blueRand) : 0;\n            this._r += (rand + redRand);\n            this._g += (rand + greenRand);\n            this._b += (rand + blueRand);\n            for (let i = 3; i < this.length; ++i) {\n                this[i] = 0;\n            }\n            return this._changed();\n        }\n        return this;\n    }\n    // Adds a color to this one\n    add(other, percent = 100) {\n        const O = Color.from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] += Math.round(O[i] * percent / 100);\n        }\n        return this._changed();\n    }\n    scale(percent) {\n        if (this.isNull() || percent == 100)\n            return this;\n        percent = Math.max(0, percent);\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round(this[i] * percent / 100);\n        }\n        return this._changed();\n    }\n    multiply(other) {\n        if (this.isNull())\n            return this;\n        let data = other;\n        if (!Array.isArray(other)) {\n            if (other.isNull())\n                return this;\n            data = other;\n        }\n        const len = Math.max(3, Math.min(this.length, data.length));\n        for (let i = 0; i < len; ++i) {\n            this[i] = Math.round(this[i] * (data[i] || 0) / 100);\n        }\n        return this._changed();\n    }\n    // scales rgb down to a max of 100\n    normalize() {\n        if (this.isNull())\n            return this;\n        const max = Math.max(this._r, this._g, this._b);\n        if (max <= 100)\n            return this;\n        this._r = Math.round(100 * this._r / max);\n        this._g = Math.round(100 * this._g / max);\n        this._b = Math.round(100 * this._b / max);\n        return this._changed();\n    }\n    css(base256 = false) {\n        const d = this;\n        let v = 0;\n        if (d[3] + d[4] + d[5] + d[6]) {\n            const rand = this._rand ? Math.floor(options.random() * this._rand) : 0;\n            const redRand = this._redRand ? Math.floor(options.random() * this._redRand) : 0;\n            const greenRand = this._greenRand ? Math.floor(options.random() * this._greenRand) : 0;\n            const blueRand = this._blueRand ? Math.floor(options.random() * this._blueRand) : 0;\n            const red = (this._r + rand + redRand);\n            const green = (this._g + rand + greenRand);\n            const blue = (this._b + rand + blueRand);\n            v = toColorInt(red, green, blue, base256);\n        }\n        else {\n            v = this.toInt(base256);\n        }\n        return '#' + v.toString(16).padStart(base256 ? 6 : 3, '0');\n    }\n    toString(base256 = false) {\n        if (this.isNull())\n            return 'null color';\n        return '#' + this.toInt(base256).toString(16).padStart(base256 ? 6 : 3, '0');\n    }\n    // adjusts the luminosity of 2 colors to ensure there is enough separation between them\n    static separate(a, b) {\n        if (a.isNull() || b.isNull())\n            return;\n        const A = a.clone().clamp();\n        const B = b.clone().clamp();\n        // console.log('separate');\n        // console.log('- a=%s, h=%d, s=%d, l=%d', A.toString(), A.h, A.s, A.l);\n        // console.log('- b=%s, h=%d, s=%d, l=%d', B.toString(), B.h, B.s, B.l);\n        let hDiff = Math.abs(A.h - B.h);\n        if (hDiff > 180) {\n            hDiff = 360 - hDiff;\n        }\n        if (hDiff > 45)\n            return; // colors are far enough apart in hue to be distinct\n        const dist = 40;\n        if (Math.abs(A.l - B.l) >= dist)\n            return;\n        // Get them sorted by saturation ( we will darken the more saturated color and lighten the other)\n        const [lo, hi] = [A, B].sort((a, b) => a.s - b.s);\n        // console.log('- lo=%s, hi=%s', lo.toString(), hi.toString());\n        while ((hi.l - lo.l) < dist) {\n            hi.mix(WHITE, 5);\n            lo.mix(BLACK, 5);\n        }\n        a.copy(A);\n        b.copy(B);\n        // console.log('=>', a.toString(), b.toString());\n    }\n}\nconst BLACK = new Color(0, 0, 0);\nconst WHITE = new Color(100, 100, 100);\n","import { Color } from './color';\nexport class Mixer {\n    constructor() {\n        this.ch = -1;\n        this.fg = new Color();\n        this.bg = new Color();\n    }\n    copy(other) {\n        this.ch = other.ch;\n        this.fg.copy(other.fg);\n        this.bg.copy(other.bg);\n        return this;\n    }\n    clone() {\n        const other = new Mixer();\n        other.copy(this);\n        return other;\n    }\n    nullify() {\n        this.ch = -1;\n        this.fg.nullify();\n        this.bg.nullify();\n        return this;\n    }\n    blackOut() {\n        this.ch = 0;\n        this.fg.blackOut();\n        this.bg.blackOut();\n        return this;\n    }\n    draw(ch = -1, fg = -1, bg = -1) {\n        if (ch !== -1) {\n            this.ch = ch;\n        }\n        if (fg != -1) {\n            fg = Color.from(fg);\n            this.fg.copy(fg);\n        }\n        if (bg != -1) {\n            bg = Color.from(bg);\n            this.bg.copy(bg);\n        }\n        return this;\n    }\n    drawSprite(info, opacity = 100) {\n        if (opacity <= 0)\n            return;\n        if (info.ch)\n            this.ch = info.ch;\n        else if (info.glyph !== undefined)\n            this.ch = info.glyph;\n        if (info.fg)\n            this.fg.mix(info.fg, opacity);\n        if (info.bg)\n            this.bg.mix(info.bg, opacity);\n        return this;\n    }\n    invert() {\n        [this.bg, this.fg] = [this.fg, this.bg];\n        return this;\n    }\n    multiply(color, fg = true, bg = true) {\n        color = Color.from(color);\n        if (fg) {\n            this.fg.multiply(color);\n        }\n        if (bg) {\n            this.bg.multiply(color);\n        }\n        return this;\n    }\n    mix(color, fg = 50, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.mix(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.mix(color, bg);\n        }\n        return this;\n    }\n    add(color, fg = 100, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.add(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.add(color, bg);\n        }\n        return this;\n    }\n    separate() {\n        Color.separate(this.fg, this.bg);\n        return this;\n    }\n    bake() {\n        this.fg.bake();\n        this.bg.bake();\n        return {\n            ch: this.ch,\n            fg: this.fg.toInt(),\n            bg: this.bg.toInt(),\n        };\n    }\n}\n","import { Color } from './color';\n;\nexport class Buffer {\n    constructor(canvas) {\n        this._canvas = canvas;\n        this._data = new Uint32Array(canvas.width * canvas.height);\n        canvas.copyTo(this);\n    }\n    get data() { return this._data; }\n    get width() { return this._canvas.width; }\n    get height() { return this._canvas.height; }\n    get(x, y) {\n        let index = y * this.width + x;\n        const style = this._data[index] || 0;\n        const glyph = (style >> 24);\n        const bg = (style >> 12) & 0xFFF;\n        const fg = (style & 0xFFF);\n        return { glyph, fg, bg };\n    }\n    draw(x, y, glyph = -1, fg = -1, bg = -1) {\n        let index = y * this.width + x;\n        const current = this._data[index] || 0;\n        if (typeof glyph == 'string') {\n            glyph = this._canvas.glyphs.forChar(glyph);\n        }\n        if (fg instanceof Color) {\n            fg = fg.toInt();\n        }\n        if (bg instanceof Color) {\n            bg = bg.toInt();\n        }\n        glyph = (glyph >= 0) ? (glyph & 0xFF) : (current >> 24);\n        bg = (bg >= 0) ? (bg & 0xFFF) : ((current >> 12) & 0xFFF);\n        fg = (fg >= 0) ? (fg & 0xFFF) : (current & 0xFFF);\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data[index] = style;\n        return this;\n    }\n    // This is without opacity - opacity is more work...\n    drawSprite(x, y, sprite) {\n        const glyph = sprite.ch ? sprite.ch : sprite.glyph;\n        // const fg = sprite.fg ? sprite.fg.toInt() : -1;\n        // const bg = sprite.bg ? sprite.bg.toInt() : -1;\n        return this.draw(x, y, glyph, sprite.fg, sprite.bg);\n    }\n    blackOut(x, y) {\n        return this.draw(x, y, 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xFFF, bg = 0) {\n        if (typeof glyph == 'string') {\n            glyph = this._canvas.glyphs.forChar(glyph);\n        }\n        glyph = glyph & 0xFF;\n        fg = fg & 0xFFF;\n        bg = bg & 0xFFF;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data.fill(style);\n        return this;\n    }\n    copy(other) {\n        this._data.set(other._data);\n        return this;\n    }\n    render() {\n        this._canvas.copy(this);\n        return this;\n    }\n    copyFromCanvas() {\n        this._canvas.copyTo(this);\n        return this;\n    }\n}\n","import { Canvas } from \"./canvas\";\nimport { Glyphs } from \"./glyphs\";\nimport { Buffer } from './buffer';\nimport { Color } from './color';\nimport { Mixer } from './mixer';\nimport { configure } from './config';\nfunction withImage(image) {\n    let opts = {};\n    if (typeof image === 'string') {\n        opts.glyphs = Glyphs.fromImage(image);\n    }\n    else if (image instanceof HTMLImageElement) {\n        opts.glyphs = Glyphs.fromImage(image);\n    }\n    else {\n        if (!image.image)\n            throw new Error('You must supply the image.');\n        Object.assign(opts, image);\n        opts.glyphs = Glyphs.fromImage(image.image);\n    }\n    return new Canvas(opts);\n}\nfunction withFont(src) {\n    if (typeof src === 'string') {\n        src = { font: src };\n    }\n    src.glyphs = Glyphs.fromFont(src);\n    return new Canvas(src);\n}\nexport { Canvas, Glyphs, Buffer, Color, Mixer, withImage, withFont, configure, };\n"],"names":["QUAD","VS","trim","FS","Canvas","[object Object]","options","this","_data","Uint32Array","_buffers","_attribs","_uniforms","_renderRequested","_autoRender","_width","_height","glyphs","Error","_gl","_initGL","node","_configure","canvas","width","height","tileWidth","_glyphs","tileHeight","pxWidth","pxHeight","gl","uniforms","needsUpdate","resize","uniform2uiv","_uploadGlyphs","render","viewport","uniform2ui","_createGeometry","_createData","x","y","glyph","fg","bg","index","style","_requestRender","buffer","data","forEach","i","n","dest","el","document","getElementById","HTMLCanvasElement","createElement","getContext","p","sources","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","type","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaders.VS","shaders.FS","useProgram","attributeCount","ACTIVE_ATTRIBUTES","enableVertexAttribArray","info","getActiveAttrib","name","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","uniform1i","_texture","t","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","position","deleteBuffer","uv","buffers","attribs","tileCount","positionData","Uint16Array","length","uvData","Uint8Array","value","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribIPointer","UNSIGNED_SHORT","bufferData","STATIC_DRAW","UNSIGNED_BYTE","createGeometry","Object","assign","UNSIGNED_INT","requestAnimationFrame","DYNAMIC_DRAW","drawArrays","TRIANGLES","activeTexture","TEXTURE0","texImage2D","RGBA","Math","floor","Glyphs","opts","_tileWidth","_tileHeight","_map","font","_node","_ctx","src","startsWith","drawImage","basicOnly","basic","_initGlyphs","ch","charCodeAt","fillStyle","fillRect","size","fontSize","max","textAlign","textBaseline","cx","cy","save","beginPath","rect","clip","fillText","restore","draw","String","fromCharCode","random","bind","toColorInt","r","g","b","base256","min","round","Color","Int16Array","vals","push","css","c","Number","parseInt","substring","val","_r","_g","_b","arg","clone","fromString","Array","isArray","fromArray","fromNumber","JSON","stringify","args","make","rand","redRand","greenRand","blueRand","super","set","v","_rand","_redRand","_greenRand","_blueRand","l","s","abs","h","H","R","G","B","other","toString","O","from","isNull","every","constructor","copy","arguments","_changed","percent","blackOut","keepPct","d","len","toInt","padStart","a","A","clamp","hDiff","lo","hi","sort","mix","WHITE","BLACK","Mixer","nullify","opacity","undefined","color","multiply","add","separate","bake","_canvas","copyTo","current","forChar","sprite","fill","image","fromImage","HTMLImageElement","fromFont"],"mappings":"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"}