{"version":3,"file":"gw-canvas.min.js","sources":["../js/shaders.js","../js/glyphs.js","../js/canvas.js","../js/config.js","../js/color.js","../js/buffer.js","../js/mixer.js","../js/sprite.js"],"sourcesContent":["// Based on: https://github.com/ondras/fastiles/blob/master/ts/shaders.ts (v2.1.0)\nexport const VS = `\n#version 300 es\n\nin vec2 position;\nin uvec2 offset;\nin uint fg;\nin uint bg;\nin uint glyph;\n\nout vec2 fsOffset;\nout vec3 fgRgb;\nout vec3 bgRgb;\nflat out uvec2 fontPos;\n\nvoid main() {\n\tgl_Position = vec4(position, 0.0, 1.0);\n\n\tfloat fgr = float((fg & uint(0xF00)) >> 8);\n\tfloat fgg = float((fg & uint(0x0F0)) >> 4);\n\tfloat fgb = float(fg & uint(0x00F));\n\tfgRgb = vec3(fgr, fgg, fgb) / 15.0;\n  \n\tfloat bgr = float((bg & uint(0xF00)) >> 8);\n\tfloat bgg = float((bg & uint(0x0F0)) >> 4);\n\tfloat bgb = float((bg & uint(0x00F)));\n\tbgRgb = vec3(bgr, bgg, bgb) / 15.0;\n\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tfontPos = uvec2(glyphX, glyphY);\n\n\tfsOffset = vec2(offset);\n}`.trim();\nexport const FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 fsOffset;\nin vec3 fgRgb;\nin vec3 bgRgb;\nflat in uvec2 fontPos;\n\nout vec4 fragColor;\n\nuniform sampler2D font;\nuniform uvec2 tileSize;\n\nvoid main() {\n\tuvec2 fontPx = (tileSize * fontPos) + uvec2(vec2(tileSize) * fsOffset);\n\tvec3 texel = texelFetch(font, ivec2(fontPx), 0).rgb;\n\n\tfragColor = vec4(mix(bgRgb, fgRgb, texel), 1.0);\n}`.trim();\n","export class Glyphs {\n    constructor(opts = {}) {\n        this._tileWidth = 12;\n        this._tileHeight = 16;\n        this.needsUpdate = true;\n        this._map = {};\n        opts.font = opts.font || 'monospace';\n        this._node = document.createElement('canvas');\n        this._ctx = this.node.getContext('2d');\n        this._configure(opts);\n    }\n    static fromImage(src) {\n        if (typeof src === 'string') {\n            if (src.startsWith('data:'))\n                throw new Error('Glyph: You must load a data string into an image element and use that.');\n            const el = document.getElementById(src);\n            if (!el)\n                throw new Error('Glyph: Failed to find image element with id:' + src);\n            src = el;\n        }\n        const glyph = new this({ tileWidth: src.width / 16, tileHeight: src.height / 16 });\n        glyph._ctx.drawImage(src, 0, 0);\n        return glyph;\n    }\n    static fromFont(src) {\n        if (typeof src === 'string') {\n            src = { font: src };\n        }\n        const glyphs = new this(src);\n        const basicOnly = src.basicOnly || src.basic || false;\n        glyphs._initGlyphs(basicOnly);\n        return glyphs;\n    }\n    get node() { return this._node; }\n    get ctx() { return this._ctx; }\n    get tileWidth() { return this._tileWidth; }\n    get tileHeight() { return this._tileHeight; }\n    get pxWidth() { return this._node.width; }\n    get pxHeight() { return this._node.height; }\n    forChar(ch) {\n        if (ch === null || ch === undefined)\n            return -1;\n        return this._map[ch] || -1;\n    }\n    _configure(opts) {\n        this._tileWidth = opts.tileWidth || this.tileWidth;\n        this._tileHeight = opts.tileHeight || this.tileHeight;\n        this.node.width = 16 * this.tileWidth;\n        this.node.height = 16 * this.tileHeight;\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(0, 0, this.pxWidth, this.pxHeight);\n        const size = opts.fontSize || opts.size || Math.max(this.tileWidth, this.tileHeight);\n        this._ctx.font = '' + size + 'px ' + opts.font;\n        this._ctx.textAlign = 'center';\n        this._ctx.textBaseline = 'middle';\n        this._ctx.fillStyle = 'white';\n    }\n    draw(n, ch) {\n        if (n > 256)\n            throw new Error('Cannot draw more than 256 glyphs.');\n        const x = (n % 16) * this.tileWidth;\n        const y = Math.floor(n / 16) * this.tileHeight;\n        const cx = x + Math.floor(this.tileWidth / 2);\n        const cy = y + Math.floor(this.tileHeight / 2);\n        this._ctx.save();\n        this._ctx.beginPath();\n        this._ctx.rect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.clip();\n        if (typeof ch === 'function') {\n            ch(this._ctx, x, y, this.tileWidth, this.tileHeight);\n        }\n        else {\n            if (this._map[ch] === undefined)\n                this._map[ch] = n;\n            this._ctx.fillText(ch, cx, cy);\n        }\n        this._ctx.restore();\n        this.needsUpdate = true;\n    }\n    _initGlyphs(basicOnly = false) {\n        for (let i = 32; i < 127; ++i) {\n            this.draw(i, String.fromCharCode(i));\n        }\n        if (!basicOnly) {\n            [' ', '\\u263a', '\\u263b', '\\u2665', '\\u2666', '\\u2663', '\\u2660', '\\u263c',\n                '\\u2600', '\\u2605', '\\u2606', '\\u2642', '\\u2640', '\\u266a', '\\u266b', '\\u2638',\n                '\\u25b6', '\\u25c0', '\\u2195', '\\u203c', '\\u204b', '\\u262f', '\\u2318', '\\u2616',\n                '\\u2191', '\\u2193', '\\u2192', '\\u2190', '\\u2126', '\\u2194', '\\u25b2', '\\u25bc',\n            ].forEach((ch, i) => {\n                this.draw(i, ch);\n            });\n            // [\n            // '\\u2302',\n            // '\\u2b09', '\\u272a', '\\u2718', '\\u2610', '\\u2611', '\\u25ef', '\\u25ce', '\\u2690',\n            // '\\u2691', '\\u2598', '\\u2596', '\\u259d', '\\u2597', '\\u2744', '\\u272d', '\\u2727',\n            // '\\u25e3', '\\u25e4', '\\u25e2', '\\u25e5', '\\u25a8', '\\u25a7', '\\u259a', '\\u265f',\n            // '\\u265c', '\\u265e', '\\u265d', '\\u265b', '\\u265a', '\\u301c', '\\u2694', '\\u2692',\n            // '\\u25b6', '\\u25bc', '\\u25c0', '\\u25b2', '\\u25a4', '\\u25a5', '\\u25a6', '\\u257a',\n            // '\\u257b', '\\u2578', '\\u2579', '\\u2581', '\\u2594', '\\u258f', '\\u2595', '\\u272d',\n            // '\\u2591', '\\u2592', '\\u2593', '\\u2503', '\\u252b', '\\u2561', '\\u2562', '\\u2556',\n            // '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255d', '\\u255c', '\\u255b', '\\u2513',\n            // '\\u2517', '\\u253b', '\\u2533', '\\u2523', '\\u2501', '\\u254b', '\\u255e', '\\u255f',\n            // '\\u255a', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256c', '\\u2567',\n            // '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256b',\n            // '\\u256a', '\\u251b', '\\u250f', '\\u2588', '\\u2585', '\\u258c', '\\u2590', '\\u2580',\n            // '\\u03b1', '\\u03b2', '\\u0393', '\\u03c0', '\\u03a3', '\\u03c3', '\\u03bc', '\\u03c4',\n            // '\\u03a6', '\\u03b8', '\\u03a9', '\\u03b4', '\\u221e', '\\u03b8', '\\u03b5', '\\u03b7',\n            // '\\u039e', '\\u00b1', '\\u2265', '\\u2264', '\\u2234', '\\u2237', '\\u00f7', '\\u2248',\n            // '\\u22c4', '\\u22c5', '\\u2217', '\\u27b5', '\\u2620', '\\u2625', '\\u25fc', '\\u25fb'\n            // ].forEach( (ch, i) => {\n            //   this.draw(i + 127, ch); \n            // });\n            ['\\u2302',\n                '\\u00C7', '\\u00FC', '\\u00E9', '\\u00E2', '\\u00E4', '\\u00E0', '\\u00E5', '\\u00E7',\n                '\\u00EA', '\\u00EB', '\\u00E8', '\\u00EF', '\\u00EE', '\\u00EC', '\\u00C4', '\\u00C5',\n                '\\u00C9', '\\u00E6', '\\u00C6', '\\u00F4', '\\u00F6', '\\u00F2', '\\u00FB', '\\u00F9',\n                '\\u00FF', '\\u00D6', '\\u00DC', '\\u00A2', '\\u00A3', '\\u00A5', '\\u20A7', '\\u0192',\n                '\\u00E1', '\\u00ED', '\\u00F3', '\\u00FA', '\\u00F1', '\\u00D1', '\\u00AA', '\\u00BA',\n                '\\u00BF', '\\u2310', '\\u00AC', '\\u00BD', '\\u00BC', '\\u00A1', '\\u00AB', '\\u00BB',\n                '\\u2591', '\\u2592', '\\u2593', '\\u2502', '\\u2524', '\\u2561', '\\u2562', '\\u2556',\n                '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255D', '\\u255C', '\\u255B', '\\u2510',\n                '\\u2514', '\\u2534', '\\u252C', '\\u251C', '\\u2500', '\\u253C', '\\u255E', '\\u255F',\n                '\\u255A', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256C', '\\u2567',\n                '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256B',\n                '\\u256A', '\\u2518', '\\u250C', '\\u2588', '\\u2584', '\\u258C', '\\u2590', '\\u2580',\n                '\\u03B1', '\\u00DF', '\\u0393', '\\u03C0', '\\u03A3', '\\u03C3', '\\u00B5', '\\u03C4',\n                '\\u03A6', '\\u0398', '\\u03A9', '\\u03B4', '\\u221E', '\\u03C6', '\\u03B5', '\\u2229',\n                '\\u2261', '\\u00B1', '\\u2265', '\\u2264', '\\u2320', '\\u2321', '\\u00F7', '\\u2248',\n                '\\u00B0', '\\u2219', '\\u00B7', '\\u221A', '\\u207F', '\\u00B2', '\\u25A0', '\\u00A0'\n            ].forEach((ch, i) => {\n                this.draw(i + 127, ch);\n            });\n        }\n    }\n}\n","// Based on: https://github.com/ondras/fastiles/blob/master/ts/scene.ts (v2.1.0)\nimport * as shaders from \"./shaders\";\nimport { Glyphs } from \"./glyphs\";\nconst VERTICES_PER_TILE = 6;\nexport class NotSupportedError extends Error {\n    constructor(...params) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(...params);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        // @ts-ignore\n        if (Error.captureStackTrace) {\n            // @ts-ignore\n            Error.captureStackTrace(this, NotSupportedError);\n        }\n        this.name = \"NotSupportedError\";\n    }\n}\nexport class BaseCanvas {\n    constructor(options) {\n        this._renderRequested = false;\n        this._autoRender = true;\n        this._width = 50;\n        this._height = 25;\n        if (!options.glyphs)\n            throw new Error(\"You must supply glyphs for the canvas.\");\n        this._node = this._createNode();\n        this._createContext();\n        this._configure(options);\n    }\n    get node() {\n        return this._node;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get tileWidth() {\n        return this._glyphs.tileWidth;\n    }\n    get tileHeight() {\n        return this._glyphs.tileHeight;\n    }\n    get pxWidth() {\n        return this.node.clientWidth;\n    }\n    get pxHeight() {\n        return this.node.clientHeight;\n    }\n    get glyphs() {\n        return this._glyphs;\n    }\n    set glyphs(glyphs) {\n        this._setGlyphs(glyphs);\n    }\n    _createNode() {\n        return document.createElement(\"canvas\");\n    }\n    _configure(options) {\n        this._width = options.width || this._width;\n        this._height = options.height || this._height;\n        this._autoRender = options.render !== false;\n        this._setGlyphs(options.glyphs);\n        if (options.div) {\n            let el;\n            if (typeof options.div === \"string\") {\n                el = document.getElementById(options.div);\n                if (!el) {\n                    console.warn(\"Failed to find parent element by ID: \" + options.div);\n                }\n            }\n            else {\n                el = options.div;\n            }\n            if (el && el.appendChild) {\n                el.appendChild(this.node);\n            }\n        }\n    }\n    _setGlyphs(glyphs) {\n        if (glyphs === this._glyphs)\n            return false;\n        this._glyphs = glyphs;\n        this.resize(this._width, this._height);\n        return true;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        const node = this.node;\n        node.width = this._width * this.tileWidth;\n        node.height = this._height * this.tileHeight;\n    }\n    _requestRender() {\n        if (this._renderRequested)\n            return;\n        this._renderRequested = true;\n        if (!this._autoRender)\n            return;\n        requestAnimationFrame(() => this.render());\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    toX(x) {\n        return Math.floor((this.width * x) / this.node.clientWidth);\n    }\n    toY(y) {\n        return Math.floor((this.height * y) / this.node.clientHeight);\n    }\n}\nexport class Canvas extends BaseCanvas {\n    constructor(options) {\n        super(options);\n    }\n    _createContext() {\n        let gl = this.node.getContext(\"webgl2\");\n        if (!gl) {\n            throw new NotSupportedError(\"WebGL 2 not supported\");\n        }\n        this._gl = gl;\n        this._buffers = {};\n        this._attribs = {};\n        this._uniforms = {};\n        const p = createProgram(gl, shaders.VS, shaders.FS);\n        gl.useProgram(p);\n        const attributeCount = gl.getProgramParameter(p, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            gl.enableVertexAttribArray(i);\n            let info = gl.getActiveAttrib(p, i);\n            this._attribs[info.name] = i;\n        }\n        const uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(p, i);\n            this._uniforms[info.name] = gl.getUniformLocation(p, info.name);\n        }\n        gl.uniform1i(this._uniforms[\"font\"], 0);\n        this._texture = createTexture(gl);\n    }\n    _createGeometry() {\n        const gl = this._gl;\n        this._buffers.position && gl.deleteBuffer(this._buffers.position);\n        this._buffers.uv && gl.deleteBuffer(this._buffers.uv);\n        let buffers = createGeometry(gl, this._attribs, this.width, this.height);\n        Object.assign(this._buffers, buffers);\n    }\n    _createData() {\n        const gl = this._gl;\n        const attribs = this._attribs;\n        const tileCount = this.width * this.height;\n        this._buffers.fg && gl.deleteBuffer(this._buffers.fg);\n        this._buffers.bg && gl.deleteBuffer(this._buffers.bg);\n        this._buffers.glyph && gl.deleteBuffer(this._buffers.glyph);\n        this._data = {\n            fg: new Uint16Array(tileCount * VERTICES_PER_TILE),\n            bg: new Uint16Array(tileCount * VERTICES_PER_TILE),\n            glyph: new Uint8Array(tileCount * VERTICES_PER_TILE),\n        };\n        const fg = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, fg);\n        gl.vertexAttribIPointer(attribs[\"fg\"], 1, gl.UNSIGNED_SHORT, 0, 0);\n        const bg = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, bg);\n        gl.vertexAttribIPointer(attribs[\"bg\"], 1, gl.UNSIGNED_SHORT, 0, 0);\n        const glyph = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, glyph);\n        gl.vertexAttribIPointer(attribs[\"glyph\"], 1, gl.UNSIGNED_BYTE, 0, 0);\n        Object.assign(this._buffers, { fg, bg, glyph });\n    }\n    _setGlyphs(glyphs) {\n        if (!super._setGlyphs(glyphs))\n            return false;\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.uniform2uiv(uniforms[\"tileSize\"], [this.tileWidth, this.tileHeight]);\n        this._uploadGlyphs();\n        return true;\n    }\n    _uploadGlyphs() {\n        if (!this._glyphs.needsUpdate)\n            return;\n        const gl = this._gl;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._glyphs.node);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        this._requestRender();\n        this._glyphs.needsUpdate = false;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        const gl = this._gl;\n        // const uniforms = this._uniforms;\n        gl.viewport(0, 0, this.node.width, this.node.height);\n        // gl.uniform2ui(uniforms[\"viewportSize\"], this.node.width, this.node.height);\n        this._createGeometry();\n        this._createData();\n    }\n    draw(x, y, glyph, fg, bg) {\n        glyph = glyph & 0xff;\n        bg = bg & 0xfff;\n        fg = fg & 0xfff;\n        let index = y * this.width + x;\n        index *= VERTICES_PER_TILE;\n        const fd = this._data.fg;\n        const bd = this._data.bg;\n        const gd = this._data.glyph;\n        fd[index + 0] = fg;\n        fd[index + 1] = fg;\n        fd[index + 2] = fg;\n        fd[index + 3] = fg;\n        fd[index + 4] = fg;\n        fd[index + 5] = fg;\n        bd[index + 0] = bg;\n        bd[index + 1] = bg;\n        bd[index + 2] = bg;\n        bd[index + 3] = bg;\n        bd[index + 4] = bg;\n        bd[index + 5] = bg;\n        gd[index + 0] = glyph;\n        gd[index + 1] = glyph;\n        gd[index + 2] = glyph;\n        gd[index + 3] = glyph;\n        gd[index + 4] = glyph;\n        gd[index + 5] = glyph;\n        this._requestRender();\n        return true;\n    }\n    copy(buffer) {\n        const fd = this._data.fg;\n        const bd = this._data.bg;\n        const gd = this._data.glyph;\n        buffer.data.forEach((style, i) => {\n            const index = i * VERTICES_PER_TILE;\n            const fg = style & 0xfff;\n            const bg = (style & 0xfff000) >> 12;\n            const gl = (style & 0xff000000) >> 24;\n            fd[index + 0] = fg;\n            fd[index + 1] = fg;\n            fd[index + 2] = fg;\n            fd[index + 3] = fg;\n            fd[index + 4] = fg;\n            fd[index + 5] = fg;\n            bd[index + 0] = bg;\n            bd[index + 1] = bg;\n            bd[index + 2] = bg;\n            bd[index + 3] = bg;\n            bd[index + 4] = bg;\n            bd[index + 5] = bg;\n            gd[index + 0] = gl;\n            gd[index + 1] = gl;\n            gd[index + 2] = gl;\n            gd[index + 3] = gl;\n            gd[index + 4] = gl;\n            gd[index + 5] = gl;\n        });\n        this._requestRender();\n    }\n    copyTo(buffer) {\n        const n = this.width * this.height;\n        const dest = buffer.data;\n        for (let i = 0; i < n; ++i) {\n            const index = i * VERTICES_PER_TILE;\n            const fg = this._data.fg[index];\n            const bg = this._data.bg[index];\n            const gl = this._data.glyph[index];\n            const style = (gl << 24) + (bg << 12) + fg;\n            dest[i] = style;\n        }\n    }\n    render() {\n        const gl = this._gl;\n        if (this._glyphs.needsUpdate) {\n            // auto keep glyphs up to date\n            this._uploadGlyphs();\n        }\n        else if (!this._renderRequested) {\n            return;\n        }\n        this._renderRequested = false;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.fg);\n        gl.bufferData(gl.ARRAY_BUFFER, this._data.fg, gl.DYNAMIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.bg);\n        gl.bufferData(gl.ARRAY_BUFFER, this._data.bg, gl.DYNAMIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.glyph);\n        gl.bufferData(gl.ARRAY_BUFFER, this._data.glyph, gl.DYNAMIC_DRAW);\n        gl.drawArrays(gl.TRIANGLES, 0, this._width * this._height * VERTICES_PER_TILE);\n    }\n}\nexport class Canvas2D extends BaseCanvas {\n    constructor(options) {\n        super(options);\n    }\n    _createContext() {\n        const ctx = this.node.getContext(\"2d\");\n        if (!ctx) {\n            throw new NotSupportedError(\"2d context not supported!\");\n        }\n        this._ctx = ctx;\n    }\n    draw(x, y, glyph, fg, bg) {\n        const style = (glyph << 24) + (bg << 12) + fg;\n        let index = y * this.width + x;\n        const current = this._data[index];\n        if (current !== style) {\n            this._data[index] = style;\n            this._changed[y * this.width + x] = 1;\n            this._requestRender();\n            return true;\n        }\n        return false;\n    }\n    copyTo(buffer) {\n        buffer.data.set(this._data);\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        this._data = new Uint32Array(width * height);\n        this._changed = new Int8Array(width * height);\n    }\n    copy(buffer) {\n        for (let i = 0; i < this._data.length; ++i) {\n            if (this._data[i] !== buffer.data[i]) {\n                this._data[i] = buffer.data[i];\n                this._changed[i] = 1;\n            }\n        }\n        this._requestRender();\n    }\n    render() {\n        this._renderRequested = false;\n        for (let i = 0; i < this._changed.length; ++i) {\n            if (this._changed[i])\n                this._renderCell(i);\n            this._changed[i] = 0;\n        }\n    }\n    _renderCell(index) {\n        const x = index % this.width;\n        const y = Math.floor(index / this.width);\n        const style = this._data[index];\n        const glyph = (style / (1 << 24)) >> 0;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        const px = x * this.tileWidth;\n        const py = y * this.tileHeight;\n        const gx = (glyph % 16) * this.tileWidth;\n        const gy = Math.floor(glyph / 16) * this.tileHeight;\n        const d = this.glyphs.ctx.getImageData(gx, gy, this.tileWidth, this.tileHeight);\n        for (let di = 0; di < d.width * d.height; ++di) {\n            const pct = d.data[di * 4] / 255;\n            const inv = 1.0 - pct;\n            d.data[di * 4 + 0] =\n                pct * (((fg & 0xf00) >> 8) * 17) + inv * (((bg & 0xf00) >> 8) * 17);\n            d.data[di * 4 + 1] =\n                pct * (((fg & 0xf0) >> 4) * 17) + inv * (((bg & 0xf0) >> 4) * 17);\n            d.data[di * 4 + 2] = pct * ((fg & 0xf) * 17) + inv * ((bg & 0xf) * 17);\n            d.data[di * 4 + 3] = 255; // not transparent anymore\n        }\n        this._ctx.putImageData(d, px, py);\n    }\n}\nexport function withImage(image) {\n    let opts = {};\n    if (typeof image === \"string\") {\n        opts.glyphs = Glyphs.fromImage(image);\n    }\n    else if (image instanceof HTMLImageElement) {\n        opts.glyphs = Glyphs.fromImage(image);\n    }\n    else {\n        if (!image.image)\n            throw new Error(\"You must supply the image.\");\n        Object.assign(opts, image);\n        opts.glyphs = Glyphs.fromImage(image.image);\n    }\n    let canvas;\n    try {\n        canvas = new Canvas(opts);\n    }\n    catch (e) {\n        if (!(e instanceof NotSupportedError))\n            throw e;\n    }\n    if (!canvas) {\n        canvas = new Canvas2D(opts);\n    }\n    return canvas;\n}\nexport function withFont(src) {\n    if (typeof src === \"string\") {\n        src = { font: src };\n    }\n    src.glyphs = Glyphs.fromFont(src);\n    let canvas;\n    try {\n        canvas = new Canvas(src);\n    }\n    catch (e) {\n        if (!(e instanceof NotSupportedError))\n            throw e;\n    }\n    if (!canvas) {\n        canvas = new Canvas2D(src);\n    }\n    return canvas;\n}\n// Copy of: https://github.com/ondras/fastiles/blob/master/ts/utils.ts (v2.1.0)\nexport function createProgram(gl, ...sources) {\n    const p = gl.createProgram();\n    [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER].forEach((type, index) => {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sources[index]);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(shader));\n        }\n        gl.attachShader(p, shader);\n    });\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p));\n    }\n    return p;\n}\nexport function createTexture(gl) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    return t;\n}\n// x, y offsets for 6 verticies (2 triangles) in square\nexport const QUAD = [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1];\nexport function createGeometry(gl, attribs, width, height) {\n    let tileCount = width * height;\n    let positionData = new Float32Array(tileCount * QUAD.length);\n    let offsetData = new Uint8Array(tileCount * QUAD.length);\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            const index = (x + y * width) * QUAD.length;\n            positionData.set(QUAD.map((v, i) => {\n                if (i % 2) {\n                    // y\n                    return 1 - (2 * (y + v)) / height;\n                }\n                else {\n                    return (2 * (x + v)) / width - 1;\n                }\n            }), index);\n            offsetData.set(QUAD, index);\n        }\n    }\n    const position = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, position);\n    gl.vertexAttribPointer(attribs[\"position\"], 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, positionData, gl.STATIC_DRAW);\n    const uv = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uv);\n    gl.vertexAttribIPointer(attribs[\"offset\"], 2, gl.UNSIGNED_BYTE, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, offsetData, gl.STATIC_DRAW);\n    return { position, uv };\n}\n","export var options = {\n    random: Math.random.bind(Math),\n};\nexport function configure(opts = {}) {\n    Object.assign(options, opts);\n}\n","import { options } from \"./config\";\nfunction toColorInt(r = 0, g = 0, b = 0, base256 = false) {\n    if (base256) {\n        r = Math.max(0, Math.min(255, Math.round(r * 2.550001)));\n        g = Math.max(0, Math.min(255, Math.round(g * 2.550001)));\n        b = Math.max(0, Math.min(255, Math.round(b * 2.550001)));\n        return (r << 16) + (g << 8) + b;\n    }\n    r = Math.max(0, Math.min(15, Math.round((r / 100) * 15)));\n    g = Math.max(0, Math.min(15, Math.round((g / 100) * 15)));\n    b = Math.max(0, Math.min(15, Math.round((b / 100) * 15)));\n    return (r << 8) + (g << 4) + b;\n}\nexport const colors = {};\nexport class Color extends Int16Array {\n    constructor(r = -1, g = 0, b = 0, rand = 0, redRand = 0, greenRand = 0, blueRand = 0, dances = false) {\n        super(7);\n        this.dances = false;\n        this.set([r, g, b, rand, redRand, greenRand, blueRand]);\n        this.dances = dances;\n    }\n    static fromArray(vals, base256 = false) {\n        while (vals.length < 3)\n            vals.push(0);\n        if (base256) {\n            for (let i = 0; i < 7; ++i) {\n                vals[i] = Math.round(((vals[i] || 0) * 100) / 255);\n            }\n        }\n        return new this(...vals);\n    }\n    static fromCss(css) {\n        if (!css.startsWith(\"#\")) {\n            throw new Error('Color CSS strings must be of form \"#abc\" or \"#abcdef\" - received: [' +\n                css +\n                \"]\");\n        }\n        const c = Number.parseInt(css.substring(1), 16);\n        let r, g, b;\n        if (css.length == 4) {\n            r = Math.round(((c >> 8) / 15) * 100);\n            g = Math.round((((c & 0xf0) >> 4) / 15) * 100);\n            b = Math.round(((c & 0xf) / 15) * 100);\n        }\n        else {\n            r = Math.round(((c >> 16) / 255) * 100);\n            g = Math.round((((c & 0xff00) >> 8) / 255) * 100);\n            b = Math.round(((c & 0xff) / 255) * 100);\n        }\n        return new this(r, g, b);\n    }\n    static fromName(name) {\n        const c = colors[name];\n        if (!c) {\n            throw new Error(\"Unknown color name: \" + name);\n        }\n        return c;\n    }\n    static fromNumber(val, base256 = false) {\n        const c = new this();\n        for (let i = 0; i < c.length; ++i) {\n            c[i] = 0;\n        }\n        if (val < 0) {\n            c._r = -1;\n        }\n        else if (base256 || val > 0xfff) {\n            c._r = Math.round((((val & 0xff0000) >> 16) * 100) / 255);\n            c._g = Math.round((((val & 0xff00) >> 8) * 100) / 255);\n            c._b = Math.round(((val & 0xff) * 100) / 255);\n        }\n        else {\n            c._r = Math.round((((val & 0xf00) >> 8) * 100) / 15);\n            c._g = Math.round((((val & 0xf0) >> 4) * 100) / 15);\n            c._b = Math.round(((val & 0xf) * 100) / 15);\n        }\n        return c;\n    }\n    static make(arg, base256 = false) {\n        if (arg === undefined || arg === null)\n            return new this(-1);\n        if (arg instanceof Color) {\n            return arg.clone();\n        }\n        if (typeof arg === \"string\") {\n            if (arg.startsWith(\"#\")) {\n                return this.fromCss(arg);\n            }\n            return this.fromName(arg).clone();\n        }\n        else if (Array.isArray(arg)) {\n            return this.fromArray(arg, base256);\n        }\n        else if (typeof arg === \"number\") {\n            if (arg < 0)\n                return new this(-1);\n            return this.fromNumber(arg, base256);\n        }\n        throw new Error(\"Failed to make color - unknown argument: \" + JSON.stringify(arg));\n    }\n    static from(...args) {\n        const arg = args[0];\n        if (arg instanceof Color)\n            return arg;\n        if (arg < 0 || arg === undefined)\n            return new this(-1);\n        if (typeof arg === \"string\") {\n            if (!arg.startsWith(\"#\")) {\n                return this.fromName(arg);\n            }\n        }\n        return this.make(arg, args[1]);\n    }\n    static install(name, info) {\n        const c = info instanceof Color ? info : this.make(info);\n        colors[name] = c;\n        c.name = name;\n        return c;\n    }\n    static installSpread(name, base) {\n        const c = this.install(name, base);\n        this.install(\"light_\" + name, c.clone().lighten(25));\n        this.install(\"lighter_\" + name, c.clone().lighten(50));\n        this.install(\"lightest_\" + name, c.clone().lighten(75));\n        this.install(\"dark_\" + name, c.clone().darken(25));\n        this.install(\"darker_\" + name, c.clone().darken(50));\n        this.install(\"darkest_\" + name, c.clone().darken(75));\n        return c;\n    }\n    get r() {\n        return Math.round(this[0] * 2.550001);\n    }\n    get _r() {\n        return this[0];\n    }\n    set _r(v) {\n        this[0] = v;\n    }\n    get g() {\n        return Math.round(this[1] * 2.550001);\n    }\n    get _g() {\n        return this[1];\n    }\n    set _g(v) {\n        this[1] = v;\n    }\n    get b() {\n        return Math.round(this[2] * 2.550001);\n    }\n    get _b() {\n        return this[2];\n    }\n    set _b(v) {\n        this[2] = v;\n    }\n    get _rand() {\n        return this[3];\n    }\n    get _redRand() {\n        return this[4];\n    }\n    get _greenRand() {\n        return this[5];\n    }\n    get _blueRand() {\n        return this[6];\n    }\n    // luminosity (0-100)\n    get l() {\n        return Math.round(0.5 *\n            (Math.min(this._r, this._g, this._b) +\n                Math.max(this._r, this._g, this._b)));\n    }\n    // saturation (0-100)\n    get s() {\n        if (this.l >= 100)\n            return 0;\n        return Math.round(((Math.max(this._r, this._g, this._b) -\n            Math.min(this._r, this._g, this._b)) *\n            (100 - Math.abs(this.l * 2 - 100))) /\n            100);\n    }\n    // hue (0-360)\n    get h() {\n        let H = 0;\n        let R = this.r;\n        let G = this.g;\n        let B = this.b;\n        if (R >= G && G >= B) {\n            H = 60 * ((G - B) / (R - B));\n        }\n        else if (G > R && R >= B) {\n            H = 60 * (2 - (R - B) / (G - B));\n        }\n        else if (G >= B && B > R) {\n            H = 60 * (2 + (B - R) / (G - R));\n        }\n        else if (B > G && G > R) {\n            H = 60 * (4 - (G - R) / (B - R));\n        }\n        else if (B > R && R >= G) {\n            H = 60 * (4 + (R - G) / (B - G));\n        }\n        else {\n            H = 60 * (6 - (B - G) / (R - G));\n        }\n        return Math.round(H);\n    }\n    isNull() {\n        return this._r < 0;\n    }\n    equals(other) {\n        if (typeof other === \"string\") {\n            return other.length > 4\n                ? this.toString(true) == other\n                : this.toString() == other;\n        }\n        else if (typeof other === \"number\") {\n            return this.toInt() == other || this.toInt(true) == other;\n        }\n        const O = Color.from(other);\n        if (this.isNull())\n            return O.isNull();\n        return this.every((v, i) => {\n            return v == (O[i] || 0);\n        });\n    }\n    copy(other) {\n        if (Array.isArray(other)) {\n            this.set(other);\n        }\n        else {\n            const O = Color.from(other);\n            this.set(O);\n        }\n        if (other instanceof Color) {\n            this.dances = other.dances;\n            this.name = other.name;\n        }\n        else {\n            this._changed();\n        }\n        return this;\n    }\n    _changed() {\n        this.name = undefined;\n        return this;\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor();\n        other.copy(this);\n        return other;\n    }\n    assign(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = arguments[i] || 0;\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    assignRGB(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((arguments[i] || 0) / 2.55);\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    nullify() {\n        this[0] = -1;\n        this.dances = false;\n        return this._changed();\n    }\n    blackOut() {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = 0;\n        }\n        this.dances = false;\n        return this._changed();\n    }\n    toInt(base256 = false) {\n        if (this.isNull())\n            return -1;\n        return toColorInt(this._r, this._g, this._b, base256);\n    }\n    clamp() {\n        if (this.isNull())\n            return this;\n        this._r = Math.min(100, Math.max(0, this._r));\n        this._g = Math.min(100, Math.max(0, this._g));\n        this._b = Math.min(100, Math.max(0, this._b));\n        return this._changed();\n    }\n    mix(other, percent) {\n        const O = Color.from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        percent = Math.min(100, Math.max(0, percent));\n        const keepPct = 100 - percent;\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * keepPct + O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    lighten(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 100 * percent) / 100);\n        }\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    darken(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 0 * percent) / 100);\n        }\n        return this._changed();\n    }\n    bake() {\n        if (this.isNull())\n            return this;\n        const d = this;\n        if (d[3] + d[4] + d[5] + d[6]) {\n            const rand = this._rand ? Math.floor(options.random() * this._rand) : 0;\n            const redRand = this._redRand\n                ? Math.floor(options.random() * this._redRand)\n                : 0;\n            const greenRand = this._greenRand\n                ? Math.floor(options.random() * this._greenRand)\n                : 0;\n            const blueRand = this._blueRand\n                ? Math.floor(options.random() * this._blueRand)\n                : 0;\n            this._r += rand + redRand;\n            this._g += rand + greenRand;\n            this._b += rand + blueRand;\n            for (let i = 3; i < this.length; ++i) {\n                this[i] = 0;\n            }\n            return this._changed();\n        }\n        return this;\n    }\n    // Adds a color to this one\n    add(other, percent = 100) {\n        const O = Color.from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] += Math.round((O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    scale(percent) {\n        if (this.isNull() || percent == 100)\n            return this;\n        percent = Math.max(0, percent);\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * percent) / 100);\n        }\n        return this._changed();\n    }\n    multiply(other) {\n        if (this.isNull())\n            return this;\n        let data = other;\n        if (!Array.isArray(other)) {\n            if (other.isNull())\n                return this;\n            data = other;\n        }\n        const len = Math.max(3, Math.min(this.length, data.length));\n        for (let i = 0; i < len; ++i) {\n            this[i] = Math.round((this[i] * (data[i] || 0)) / 100);\n        }\n        return this._changed();\n    }\n    // scales rgb down to a max of 100\n    normalize() {\n        if (this.isNull())\n            return this;\n        const max = Math.max(this._r, this._g, this._b);\n        if (max <= 100)\n            return this;\n        this._r = Math.round((100 * this._r) / max);\n        this._g = Math.round((100 * this._g) / max);\n        this._b = Math.round((100 * this._b) / max);\n        return this._changed();\n    }\n    /**\n     * Returns the css code for the current RGB values of the color.\n     * @param base256 - Show in base 256 (#abcdef) instead of base 16 (#abc)\n     */\n    css(base256 = false) {\n        const v = this.toInt(base256);\n        return \"#\" + v.toString(16).padStart(base256 ? 6 : 3, \"0\");\n    }\n    toString(base256 = false) {\n        if (this.name)\n            return this.name;\n        if (this.isNull())\n            return \"null color\";\n        return this.css(base256);\n    }\n    // adjusts the luminosity of 2 colors to ensure there is enough separation between them\n    static separate(a, b) {\n        if (a.isNull() || b.isNull())\n            return;\n        const A = a.clone().clamp();\n        const B = b.clone().clamp();\n        // console.log('separate');\n        // console.log('- a=%s, h=%d, s=%d, l=%d', A.toString(), A.h, A.s, A.l);\n        // console.log('- b=%s, h=%d, s=%d, l=%d', B.toString(), B.h, B.s, B.l);\n        let hDiff = Math.abs(A.h - B.h);\n        if (hDiff > 180) {\n            hDiff = 360 - hDiff;\n        }\n        if (hDiff > 45)\n            return; // colors are far enough apart in hue to be distinct\n        const dist = 40;\n        if (Math.abs(A.l - B.l) >= dist)\n            return;\n        // Get them sorted by saturation ( we will darken the more saturated color and lighten the other)\n        const [lo, hi] = [A, B].sort((a, b) => a.s - b.s);\n        // console.log('- lo=%s, hi=%s', lo.toString(), hi.toString());\n        while (hi.l - lo.l < dist) {\n            hi.mix(WHITE, 5);\n            lo.mix(BLACK, 5);\n        }\n        a.copy(A);\n        b.copy(B);\n        // console.log('=>', a.toString(), b.toString());\n    }\n    static swap(a, b) {\n        const temp = a.clone();\n        a.copy(b);\n        b.copy(temp);\n    }\n    static diff(a, b) {\n        return Math.round((a._r - b._r) * (a._r - b._r) * 0.2126 +\n            (a._g - b._g) * (a._g - b._g) * 0.7152 +\n            (a._b - b._b) * (a._b - b._b) * 0.0722);\n    }\n}\nconst BLACK = Color.install(\"black\", 0x000);\nconst WHITE = Color.install(\"white\", 0xfff);\nColor.installSpread(\"teal\", [30, 100, 100]);\nColor.installSpread(\"brown\", [60, 40, 0]);\nColor.installSpread(\"tan\", [80, 70, 55]); // 80, 67,\t\t15);\nColor.installSpread(\"pink\", [100, 60, 66]);\nColor.installSpread(\"gray\", [50, 50, 50]);\nColor.installSpread(\"yellow\", [100, 100, 0]);\nColor.installSpread(\"purple\", [100, 0, 100]);\nColor.installSpread(\"green\", [0, 100, 0]);\nColor.installSpread(\"orange\", [100, 50, 0]);\nColor.installSpread(\"blue\", [0, 0, 100]);\nColor.installSpread(\"red\", [100, 0, 0]);\nColor.installSpread(\"amber\", [100, 75, 0]);\nColor.installSpread(\"flame\", [100, 25, 0]);\nColor.installSpread(\"fuchsia\", [100, 0, 100]);\nColor.installSpread(\"magenta\", [100, 0, 75]);\nColor.installSpread(\"crimson\", [100, 0, 25]);\nColor.installSpread(\"lime\", [75, 100, 0]);\nColor.installSpread(\"chartreuse\", [50, 100, 0]);\nColor.installSpread(\"sepia\", [50, 40, 25]);\nColor.installSpread(\"violet\", [50, 0, 100]);\nColor.installSpread(\"han\", [25, 0, 100]);\nColor.installSpread(\"cyan\", [0, 100, 100]);\nColor.installSpread(\"turquoise\", [0, 100, 75]);\nColor.installSpread(\"sea\", [0, 100, 50]);\nColor.installSpread(\"sky\", [0, 75, 100]);\nColor.installSpread(\"azure\", [0, 50, 100]);\nColor.installSpread(\"silver\", [75, 75, 75]);\nColor.installSpread(\"gold\", [100, 85, 0]);\n","import { Color } from \"./color\";\nexport class DataBuffer {\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n        this._data = new Uint32Array(width * height);\n    }\n    get data() {\n        return this._data;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get(x, y) {\n        let index = y * this.width + x;\n        const style = this._data[index] || 0;\n        const glyph = style >> 24;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        return { glyph, fg, bg };\n    }\n    _toGlyph(ch) {\n        if (ch === null || ch === undefined)\n            return -1;\n        return ch.charCodeAt(0);\n    }\n    draw(x, y, glyph = -1, fg = -1, bg = -1) {\n        let index = y * this.width + x;\n        const current = this._data[index] || 0;\n        if (typeof glyph !== \"number\") {\n            glyph = this._toGlyph(glyph);\n        }\n        if (typeof fg !== \"number\") {\n            fg = Color.from(fg).toInt();\n        }\n        if (typeof bg !== \"number\") {\n            bg = Color.from(bg).toInt();\n        }\n        glyph = glyph >= 0 ? glyph & 0xff : current >> 24;\n        bg = bg >= 0 ? bg & 0xfff : (current >> 12) & 0xfff;\n        fg = fg >= 0 ? fg & 0xfff : current & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data[index] = style;\n        return this;\n    }\n    // This is without opacity - opacity must be done in Mixer\n    drawSprite(x, y, sprite) {\n        let glyph = sprite.ch\n            ? sprite.ch\n            : sprite.glyph !== undefined\n                ? sprite.glyph\n                : -1;\n        // const fg = sprite.fg ? sprite.fg.toInt() : -1;\n        // const bg = sprite.bg ? sprite.bg.toInt() : -1;\n        return this.draw(x, y, glyph, sprite.fg, sprite.bg);\n    }\n    blackOut(x, y) {\n        if (arguments.length == 0) {\n            return this.fill(0, 0, 0);\n        }\n        return this.draw(x, y, 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xfff, bg = 0) {\n        if (typeof glyph == \"string\") {\n            glyph = this._toGlyph(glyph);\n        }\n        glyph = glyph & 0xff;\n        fg = fg & 0xfff;\n        bg = bg & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data.fill(style);\n        return this;\n    }\n    copy(other) {\n        this._data.set(other._data);\n        return this;\n    }\n}\nexport class Buffer extends DataBuffer {\n    constructor(canvas) {\n        super(canvas.width, canvas.height);\n        this._canvas = canvas;\n        canvas.copyTo(this);\n    }\n    // get canvas() { return this._canvas; }\n    _toGlyph(ch) {\n        return this._canvas.glyphs.forChar(ch);\n    }\n    render() {\n        this._canvas.copy(this);\n        return this;\n    }\n    copyFromCanvas() {\n        this._canvas.copyTo(this);\n        return this;\n    }\n}\n","import { Color } from \"./color\";\nexport class Mixer {\n    constructor() {\n        this.ch = -1;\n        this.fg = new Color();\n        this.bg = new Color();\n    }\n    _changed() {\n        return this;\n    }\n    copy(other) {\n        this.ch = other.ch;\n        this.fg.copy(other.fg);\n        this.bg.copy(other.bg);\n        return this._changed();\n    }\n    clone() {\n        const other = new Mixer();\n        other.copy(this);\n        return other;\n    }\n    nullify() {\n        this.ch = -1;\n        this.fg.nullify();\n        this.bg.nullify();\n        return this._changed();\n    }\n    blackOut() {\n        this.ch = 0;\n        this.fg.blackOut();\n        this.bg.blackOut();\n        return this._changed();\n    }\n    draw(ch = -1, fg = -1, bg = -1) {\n        if (ch && ch !== -1) {\n            this.ch = ch;\n        }\n        if (fg !== -1 && fg !== null) {\n            fg = Color.from(fg);\n            this.fg.copy(fg);\n        }\n        if (bg !== -1 && bg !== null) {\n            bg = Color.from(bg);\n            this.bg.copy(bg);\n        }\n        return this._changed();\n    }\n    drawSprite(info, opacity) {\n        if (opacity === undefined)\n            opacity = info.opacity;\n        if (opacity === undefined)\n            opacity = 100;\n        if (opacity <= 0)\n            return;\n        if (info.ch)\n            this.ch = info.ch;\n        else if (info.glyph !== undefined)\n            this.ch = info.glyph;\n        if (info.fg)\n            this.fg.mix(info.fg, opacity);\n        if (info.bg)\n            this.bg.mix(info.bg, opacity);\n        return this._changed();\n    }\n    invert() {\n        [this.bg, this.fg] = [this.fg, this.bg];\n        return this._changed();\n    }\n    multiply(color, fg = true, bg = true) {\n        color = Color.from(color);\n        if (fg) {\n            this.fg.multiply(color);\n        }\n        if (bg) {\n            this.bg.multiply(color);\n        }\n        return this._changed();\n    }\n    mix(color, fg = 50, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.mix(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.mix(color, bg);\n        }\n        return this._changed();\n    }\n    add(color, fg = 100, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.add(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.add(color, bg);\n        }\n        return this._changed();\n    }\n    separate() {\n        Color.separate(this.fg, this.bg);\n        return this._changed();\n    }\n    bake() {\n        this.fg.bake();\n        this.bg.bake();\n        this._changed();\n        return {\n            ch: this.ch,\n            fg: this.fg.toInt(),\n            bg: this.bg.toInt(),\n        };\n    }\n}\n","import { Color } from \"./color\";\nexport class Sprite {\n    constructor(ch, fg, bg, opacity) {\n        this.ch = ch;\n        this.fg = fg;\n        this.bg = bg;\n        this.opacity = opacity;\n    }\n    static make(...args) {\n        let ch = null, fg = -1, bg = -1, opacity;\n        if (args.length == 0) {\n            return new Sprite(null, -1, -1);\n        }\n        else if (args.length == 1 && Array.isArray(args[0])) {\n            args = args[0];\n        }\n        if (args.length > 1) {\n            ch = args[0] || null;\n            fg = args[1];\n            bg = args[2];\n            opacity = args[3];\n        }\n        else if (args.length == 1) {\n            if (typeof args[0] === \"string\") {\n                bg = args[0];\n            }\n            else {\n                const sprite = args[0];\n                ch = sprite.ch || null;\n                fg = sprite.fg || -1;\n                bg = sprite.bg || -1;\n                opacity = sprite.opacity;\n            }\n        }\n        if (typeof fg === \"string\")\n            fg = Color.from(fg);\n        else if (Array.isArray(fg))\n            fg = Color.make(fg);\n        else if (fg === undefined || fg === null)\n            fg = -1;\n        if (typeof bg === \"string\")\n            bg = Color.from(bg);\n        else if (Array.isArray(bg))\n            bg = Color.make(bg);\n        else if (bg === undefined || bg === null)\n            bg = -1;\n        return new this(ch, fg, bg, opacity);\n    }\n    static install(name, ...args) {\n        let sprite;\n        // @ts-ignore\n        sprite = this.make(...args);\n        sprite.name = name;\n        sprites[name] = sprite;\n        return sprite;\n    }\n}\nexport const sprites = {};\n"],"names":["VS","trim","FS","Glyphs","[object Object]","opts","this","_tileWidth","_tileHeight","needsUpdate","_map","font","_node","document","createElement","_ctx","node","getContext","_configure","src","startsWith","Error","el","getElementById","glyph","tileWidth","width","tileHeight","height","drawImage","glyphs","basicOnly","basic","_initGlyphs","ctx","pxWidth","pxHeight","ch","fillStyle","fillRect","size","fontSize","Math","max","textAlign","textBaseline","n","x","y","floor","cx","cy","save","beginPath","rect","clip","undefined","fillText","restore","i","draw","String","fromCharCode","forEach","NotSupportedError","params","super","captureStackTrace","name","BaseCanvas","options","_renderRequested","_autoRender","_width","_height","_createNode","_createContext","_glyphs","clientWidth","clientHeight","_setGlyphs","render","div","console","warn","appendChild","resize","requestAnimationFrame","Canvas","gl","_gl","_buffers","_attribs","_uniforms","p","sources","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","type","index","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaders.VS","shaders.FS","useProgram","attributeCount","ACTIVE_ATTRIBUTES","enableVertexAttribArray","info","getActiveAttrib","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","uniform1i","_texture","t","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","position","deleteBuffer","uv","buffers","attribs","tileCount","positionData","Float32Array","QUAD","length","offsetData","Uint8Array","set","map","v","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","vertexAttribIPointer","UNSIGNED_BYTE","createGeometry","Object","assign","fg","bg","_data","Uint16Array","UNSIGNED_SHORT","uniforms","uniform2uiv","_uploadGlyphs","activeTexture","TEXTURE0","texImage2D","RGBA","_requestRender","viewport","_createGeometry","_createData","fd","bd","gd","buffer","data","style","dest","DYNAMIC_DRAW","drawArrays","TRIANGLES","Canvas2D","_changed","Uint32Array","Int8Array","_renderCell","px","py","gx","gy","d","getImageData","di","pct","inv","putImageData","random","bind","colors","Color","Int16Array","r","g","b","rand","redRand","greenRand","blueRand","dances","vals","base256","push","round","css","c","Number","parseInt","substring","val","_r","_g","_b","arg","clone","fromCss","fromName","Array","isArray","fromArray","fromNumber","JSON","stringify","args","make","base","install","lighten","darken","_rand","_redRand","_greenRand","_blueRand","l","min","s","abs","h","H","R","G","B","other","toString","toInt","O","from","isNull","every","constructor","copy","arguments","toColorInt","percent","blackOut","keepPct","len","padStart","a","A","clamp","hDiff","lo","hi","sort","mix","WHITE","BLACK","temp","installSpread","DataBuffer","charCodeAt","current","_toGlyph","sprite","fill","Mixer","nullify","opacity","color","multiply","add","separate","bake","Sprite","sprites","canvas","_canvas","copyTo","forChar","image","fromImage","HTMLImageElement","e","fromFont"],"mappings":"gPACO,MAAMA,EAAK,guBAgCfC,OACUC,EAAK,iZAmBfD,OCrDI,MAAME,EACTC,YAAYC,EAAO,IACfC,KAAKC,WAAa,GAClBD,KAAKE,YAAc,GACnBF,KAAKG,aAAc,EACnBH,KAAKI,KAAO,GACZL,EAAKM,KAAON,EAAKM,MAAQ,YACzBL,KAAKM,MAAQC,SAASC,cAAc,UACpCR,KAAKS,KAAOT,KAAKU,KAAKC,WAAW,MACjCX,KAAKY,WAAWb,GAEpBD,iBAAiBe,GACb,GAAmB,iBAARA,EAAkB,CACzB,GAAIA,EAAIC,WAAW,SACf,MAAM,IAAIC,MAAM,0EACpB,MAAMC,EAAKT,SAASU,eAAeJ,GACnC,IAAKG,EACD,MAAM,IAAID,MAAM,+CAAiDF,GACrEA,EAAMG,EAEV,MAAME,EAAQ,IAAIlB,KAAK,CAAEmB,UAAWN,EAAIO,MAAQ,GAAIC,WAAYR,EAAIS,OAAS,KAE7E,OADAJ,EAAMT,KAAKc,UAAUV,EAAK,EAAG,GACtBK,EAEXpB,gBAAgBe,GACO,iBAARA,IACPA,EAAM,CAAER,KAAMQ,IAElB,MAAMW,EAAS,IAAIxB,KAAKa,GAClBY,EAAYZ,EAAIY,WAAaZ,EAAIa,QAAS,EAEhD,OADAF,EAAOG,YAAYF,GACZD,EAEXd,WAAa,OAAOV,KAAKM,MACzBsB,UAAY,OAAO5B,KAAKS,KACxBU,gBAAkB,OAAOnB,KAAKC,WAC9BoB,iBAAmB,OAAOrB,KAAKE,YAC/B2B,cAAgB,OAAO7B,KAAKM,MAAMc,MAClCU,eAAiB,OAAO9B,KAAKM,MAAMgB,OACnCxB,QAAQiC,GACJ,OAAIA,MAAAA,GACQ,EACL/B,KAAKI,KAAK2B,KAAQ,EAE7BjC,WAAWC,GACPC,KAAKC,WAAaF,EAAKoB,WAAanB,KAAKmB,UACzCnB,KAAKE,YAAcH,EAAKsB,YAAcrB,KAAKqB,WAC3CrB,KAAKU,KAAKU,MAAQ,GAAKpB,KAAKmB,UAC5BnB,KAAKU,KAAKY,OAAS,GAAKtB,KAAKqB,WAC7BrB,KAAKS,KAAKuB,UAAY,QACtBhC,KAAKS,KAAKwB,SAAS,EAAG,EAAGjC,KAAK6B,QAAS7B,KAAK8B,UAC5C,MAAMI,EAAOnC,EAAKoC,UAAYpC,EAAKmC,MAAQE,KAAKC,IAAIrC,KAAKmB,UAAWnB,KAAKqB,YACzErB,KAAKS,KAAKJ,KAAY6B,EAAO,MAAQnC,EAAKM,KAC1CL,KAAKS,KAAK6B,UAAY,SACtBtC,KAAKS,KAAK8B,aAAe,SACzBvC,KAAKS,KAAKuB,UAAY,QAE1BlC,KAAK0C,EAAGT,GACJ,GAAIS,EAAI,IACJ,MAAM,IAAIzB,MAAM,qCACpB,MAAM0B,EAAKD,EAAI,GAAMxC,KAAKmB,UACpBuB,EAAIN,KAAKO,MAAMH,EAAI,IAAMxC,KAAKqB,WAC9BuB,EAAKH,EAAIL,KAAKO,MAAM3C,KAAKmB,UAAY,GACrC0B,EAAKH,EAAIN,KAAKO,MAAM3C,KAAKqB,WAAa,GAC5CrB,KAAKS,KAAKqC,OACV9C,KAAKS,KAAKsC,YACV/C,KAAKS,KAAKuC,KAAKP,EAAGC,EAAG1C,KAAKmB,UAAWnB,KAAKqB,YAC1CrB,KAAKS,KAAKwC,OACQ,mBAAPlB,EACPA,EAAG/B,KAAKS,KAAMgC,EAAGC,EAAG1C,KAAKmB,UAAWnB,KAAKqB,kBAGnB6B,IAAlBlD,KAAKI,KAAK2B,KACV/B,KAAKI,KAAK2B,GAAMS,GACpBxC,KAAKS,KAAK0C,SAASpB,EAAIa,EAAIC,IAE/B7C,KAAKS,KAAK2C,UACVpD,KAAKG,aAAc,EAEvBL,YAAY2B,GAAY,GACpB,IAAK,IAAI4B,EAAI,GAAIA,EAAI,MAAOA,EACxBrD,KAAKsD,KAAKD,EAAGE,OAAOC,aAAaH,IAEhC5B,IACD,CAAC,IAAK,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAC9D,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACtE,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACtE,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,KACxEgC,SAAQ,CAAC1B,EAAIsB,KACXrD,KAAKsD,KAAKD,EAAGtB,MAuBjB,CAAC,IACG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACtE,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACtE,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACtE,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACtE,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACtE,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACtE,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACtE,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACtE,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACtE,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACtE,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACtE,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACtE,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACtE,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACtE,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACtE,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,KACxE0B,SAAQ,CAAC1B,EAAIsB,KACXrD,KAAKsD,KAAKD,EAAI,IAAKtB,QC9H5B,MAAM2B,UAA0B3C,MACnCjB,eAAe6D,GAEXC,SAASD,GAGL5C,MAAM8C,mBAEN9C,MAAM8C,kBAAkB7D,KAAM0D,GAElC1D,KAAK8D,KAAO,qBAGb,MAAMC,EACTjE,YAAYkE,GAKR,GAJAhE,KAAKiE,kBAAmB,EACxBjE,KAAKkE,aAAc,EACnBlE,KAAKmE,OAAS,GACdnE,KAAKoE,QAAU,IACVJ,EAAQxC,OACT,MAAM,IAAIT,MAAM,0CACpBf,KAAKM,MAAQN,KAAKqE,cAClBrE,KAAKsE,iBACLtE,KAAKY,WAAWoD,GAEpBtD,WACI,OAAOV,KAAKM,MAEhBc,YACI,OAAOpB,KAAKmE,OAEhB7C,aACI,OAAOtB,KAAKoE,QAEhBjD,gBACI,OAAOnB,KAAKuE,QAAQpD,UAExBE,iBACI,OAAOrB,KAAKuE,QAAQlD,WAExBQ,cACI,OAAO7B,KAAKU,KAAK8D,YAErB1C,eACI,OAAO9B,KAAKU,KAAK+D,aAErBjD,aACI,OAAOxB,KAAKuE,QAEhB/C,WAAWA,GACPxB,KAAK0E,WAAWlD,GAEpB1B,cACI,OAAOS,SAASC,cAAc,UAElCV,WAAWkE,GAKP,GAJAhE,KAAKmE,OAASH,EAAQ5C,OAASpB,KAAKmE,OACpCnE,KAAKoE,QAAUJ,EAAQ1C,QAAUtB,KAAKoE,QACtCpE,KAAKkE,aAAiC,IAAnBF,EAAQW,OAC3B3E,KAAK0E,WAAWV,EAAQxC,QACpBwC,EAAQY,IAAK,CACb,IAAI5D,EACuB,iBAAhBgD,EAAQY,KACf5D,EAAKT,SAASU,eAAe+C,EAAQY,KAChC5D,GACD6D,QAAQC,KAAK,wCAA0Cd,EAAQY,MAInE5D,EAAKgD,EAAQY,IAEb5D,GAAMA,EAAG+D,aACT/D,EAAG+D,YAAY/E,KAAKU,OAIhCZ,WAAW0B,GACP,OAAIA,IAAWxB,KAAKuE,UAEpBvE,KAAKuE,QAAU/C,EACfxB,KAAKgF,OAAOhF,KAAKmE,OAAQnE,KAAKoE,UACvB,GAEXtE,OAAOsB,EAAOE,GACVtB,KAAKmE,OAAS/C,EACdpB,KAAKoE,QAAU9C,EACf,MAAMZ,EAAOV,KAAKU,KAClBA,EAAKU,MAAQpB,KAAKmE,OAASnE,KAAKmB,UAChCT,EAAKY,OAAStB,KAAKoE,QAAUpE,KAAKqB,WAEtCvB,iBACQE,KAAKiE,mBAETjE,KAAKiE,kBAAmB,EACnBjE,KAAKkE,aAEVe,uBAAsB,IAAMjF,KAAK2E,YAErC7E,MAAM2C,EAAGC,GACL,OAAOD,GAAK,GAAKC,GAAK,GAAKD,EAAIzC,KAAKoB,OAASsB,EAAI1C,KAAKsB,OAE1DxB,IAAI2C,GACA,OAAOL,KAAKO,MAAO3C,KAAKoB,MAAQqB,EAAKzC,KAAKU,KAAK8D,aAEnD1E,IAAI4C,GACA,OAAON,KAAKO,MAAO3C,KAAKsB,OAASoB,EAAK1C,KAAKU,KAAK+D,eAGjD,MAAMS,UAAenB,EACxBjE,YAAYkE,GACRJ,MAAMI,GAEVlE,iBACI,IAAIqF,EAAKnF,KAAKU,KAAKC,WAAW,UAC9B,IAAKwE,EACD,MAAM,IAAIzB,EAAkB,yBAEhC1D,KAAKoF,IAAMD,EACXnF,KAAKqF,SAAW,GAChBrF,KAAKsF,SAAW,GAChBtF,KAAKuF,UAAY,GACjB,MAAMC,EA8RP,SAAuBL,KAAOM,GACjC,MAAMD,EAAIL,EAAGO,gBAWb,GAVA,CAACP,EAAGQ,cAAeR,EAAGS,iBAAiBnC,SAAQ,CAACoC,EAAMC,KAClD,MAAMC,EAASZ,EAAGa,aAAaH,GAG/B,GAFAV,EAAGc,aAAaF,EAAQN,EAAQK,IAChCX,EAAGe,cAAcH,IACZZ,EAAGgB,mBAAmBJ,EAAQZ,EAAGiB,gBAClC,MAAM,IAAIrF,MAAMoE,EAAGkB,iBAAiBN,IAExCZ,EAAGmB,aAAad,EAAGO,MAEvBZ,EAAGoB,YAAYf,IACVL,EAAGqB,oBAAoBhB,EAAGL,EAAGsB,aAC9B,MAAM,IAAI1F,MAAMoE,EAAGuB,kBAAkBlB,IAEzC,OAAOA,EA7SOE,CAAcP,EAAIwB,EAAYC,GACxCzB,EAAG0B,WAAWrB,GACd,MAAMsB,EAAiB3B,EAAGqB,oBAAoBhB,EAAGL,EAAG4B,mBACpD,IAAK,IAAI1D,EAAI,EAAGA,EAAIyD,EAAgBzD,IAAK,CACrC8B,EAAG6B,wBAAwB3D,GAC3B,IAAI4D,EAAO9B,EAAG+B,gBAAgB1B,EAAGnC,GACjCrD,KAAKsF,SAAS2B,EAAKnD,MAAQT,EAE/B,MAAM8D,EAAehC,EAAGqB,oBAAoBhB,EAAGL,EAAGiC,iBAClD,IAAK,IAAI/D,EAAI,EAAGA,EAAI8D,EAAc9D,IAAK,CACnC,IAAI4D,EAAO9B,EAAGkC,iBAAiB7B,EAAGnC,GAClCrD,KAAKuF,UAAU0B,EAAKnD,MAAQqB,EAAGmC,mBAAmB9B,EAAGyB,EAAKnD,MAE9DqB,EAAGoC,UAAUvH,KAAKuF,UAAgB,KAAG,GACrCvF,KAAKwH,SAiSN,SAAuBrC,GAC1B,IAAIsC,EAAItC,EAAGuC,gBAIX,OAHAvC,EAAGwC,YAAYxC,EAAGyC,WAAYH,GAC9BtC,EAAG0C,cAAc1C,EAAGyC,WAAYzC,EAAG2C,mBAAoB3C,EAAG4C,SAC1D5C,EAAG0C,cAAc1C,EAAGyC,WAAYzC,EAAG6C,mBAAoB7C,EAAG4C,SACnDN,EAtSaC,CAAcvC,GAElCrF,kBACI,MAAMqF,EAAKnF,KAAKoF,IAChBpF,KAAKqF,SAAS4C,UAAY9C,EAAG+C,aAAalI,KAAKqF,SAAS4C,UACxDjI,KAAKqF,SAAS8C,IAAMhD,EAAG+C,aAAalI,KAAKqF,SAAS8C,IAClD,IAAIC,EAoSL,SAAwBjD,EAAIkD,EAASjH,EAAOE,GAC/C,IAAIgH,EAAYlH,EAAQE,EACpBiH,EAAe,IAAIC,aAAaF,EAAYG,EAAKC,QACjDC,EAAa,IAAIC,WAAWN,EAAYG,EAAKC,QACjD,IAAK,IAAIhG,EAAI,EAAGA,EAAIpB,EAAQoB,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAIrB,EAAOqB,IAAK,CAC5B,MAAMqD,GAASrD,EAAIC,EAAItB,GAASqH,EAAKC,OACrCH,EAAaM,IAAIJ,EAAKK,KAAI,CAACC,EAAG1F,IACtBA,EAAI,EAEG,EAAK,GAAKX,EAAIqG,GAAMzH,EAGnB,GAAKmB,EAAIsG,GAAM3H,EAAQ,IAEnC0E,GACJ6C,EAAWE,IAAIJ,EAAM3C,GAG7B,MAAMmC,EAAW9C,EAAG6D,eACpB7D,EAAG8D,WAAW9D,EAAG+D,aAAcjB,GAC/B9C,EAAGgE,oBAAoBd,EAAkB,SAAG,EAAGlD,EAAGiE,OAAO,EAAO,EAAG,GACnEjE,EAAGkE,WAAWlE,EAAG+D,aAAcX,EAAcpD,EAAGmE,aAChD,MAAMnB,EAAKhD,EAAG6D,eAId,OAHA7D,EAAG8D,WAAW9D,EAAG+D,aAAcf,GAC/BhD,EAAGoE,qBAAqBlB,EAAgB,OAAG,EAAGlD,EAAGqE,cAAe,EAAG,GACnErE,EAAGkE,WAAWlE,EAAG+D,aAAcP,EAAYxD,EAAGmE,aACvC,CAAErB,SAAAA,EAAUE,GAAAA,GA/TDsB,CAAetE,EAAInF,KAAKsF,SAAUtF,KAAKoB,MAAOpB,KAAKsB,QACjEoI,OAAOC,OAAO3J,KAAKqF,SAAU+C,GAEjCtI,cACI,MAAMqF,EAAKnF,KAAKoF,IACViD,EAAUrI,KAAKsF,SACfgD,EAAYtI,KAAKoB,MAAQpB,KAAKsB,OACpCtB,KAAKqF,SAASuE,IAAMzE,EAAG+C,aAAalI,KAAKqF,SAASuE,IAClD5J,KAAKqF,SAASwE,IAAM1E,EAAG+C,aAAalI,KAAKqF,SAASwE,IAClD7J,KAAKqF,SAASnE,OAASiE,EAAG+C,aAAalI,KAAKqF,SAASnE,OACrDlB,KAAK8J,MAAQ,CACTF,GAAI,IAAIG,YAzJM,EAyJMzB,GACpBuB,GAAI,IAAIE,YA1JM,EA0JMzB,GACpBpH,MAAO,IAAI0H,WA3JG,EA2JQN,IAE1B,MAAMsB,EAAKzE,EAAG6D,eACd7D,EAAG8D,WAAW9D,EAAG+D,aAAcU,GAC/BzE,EAAGoE,qBAAqBlB,EAAY,GAAG,EAAGlD,EAAG6E,eAAgB,EAAG,GAChE,MAAMH,EAAK1E,EAAG6D,eACd7D,EAAG8D,WAAW9D,EAAG+D,aAAcW,GAC/B1E,EAAGoE,qBAAqBlB,EAAY,GAAG,EAAGlD,EAAG6E,eAAgB,EAAG,GAChE,MAAM9I,EAAQiE,EAAG6D,eACjB7D,EAAG8D,WAAW9D,EAAG+D,aAAchI,GAC/BiE,EAAGoE,qBAAqBlB,EAAe,MAAG,EAAGlD,EAAGqE,cAAe,EAAG,GAClEE,OAAOC,OAAO3J,KAAKqF,SAAU,CAAEuE,GAAAA,EAAIC,GAAAA,EAAI3I,MAAAA,IAE3CpB,WAAW0B,GACP,IAAKoC,MAAMc,WAAWlD,GAClB,OAAO,EACX,MAAM2D,EAAKnF,KAAKoF,IACV6E,EAAWjK,KAAKuF,UAGtB,OAFAJ,EAAG+E,YAAYD,EAAmB,SAAG,CAACjK,KAAKmB,UAAWnB,KAAKqB,aAC3DrB,KAAKmK,iBACE,EAEXrK,gBACI,IAAKE,KAAKuE,QAAQpE,YACd,OACJ,MAAMgF,EAAKnF,KAAKoF,IAChBD,EAAGiF,cAAcjF,EAAGkF,UACpBlF,EAAGwC,YAAYxC,EAAGyC,WAAY5H,KAAKwH,UACnCrC,EAAGmF,WAAWnF,EAAGyC,WAAY,EAAGzC,EAAGoF,KAAMpF,EAAGoF,KAAMpF,EAAGqE,cAAexJ,KAAKuE,QAAQ7D,MACjFyE,EAAG0C,cAAc1C,EAAGyC,WAAYzC,EAAG2C,mBAAoB3C,EAAG4C,SAC1D5C,EAAG0C,cAAc1C,EAAGyC,WAAYzC,EAAG6C,mBAAoB7C,EAAG4C,SAC1D/H,KAAKwK,iBACLxK,KAAKuE,QAAQpE,aAAc,EAE/BL,OAAOsB,EAAOE,GACVsC,MAAMoB,OAAO5D,EAAOE,GACTtB,KAAKoF,IAEbqF,SAAS,EAAG,EAAGzK,KAAKU,KAAKU,MAAOpB,KAAKU,KAAKY,QAE7CtB,KAAK0K,kBACL1K,KAAK2K,cAET7K,KAAK2C,EAAGC,EAAGxB,EAAO0I,EAAIC,GAClB3I,GAAgB,IAChB2I,GAAU,KACVD,GAAU,KACV,IAAI9D,EAAQpD,EAAI1C,KAAKoB,MAAQqB,EAC7BqD,GA3MkB,EA4MlB,MAAM8E,EAAK5K,KAAK8J,MAAMF,GAChBiB,EAAK7K,KAAK8J,MAAMD,GAChBiB,EAAK9K,KAAK8J,MAAM5I,MAoBtB,OAnBA0J,EAAG9E,EAAQ,GAAK8D,EAChBgB,EAAG9E,EAAQ,GAAK8D,EAChBgB,EAAG9E,EAAQ,GAAK8D,EAChBgB,EAAG9E,EAAQ,GAAK8D,EAChBgB,EAAG9E,EAAQ,GAAK8D,EAChBgB,EAAG9E,EAAQ,GAAK8D,EAChBiB,EAAG/E,EAAQ,GAAK+D,EAChBgB,EAAG/E,EAAQ,GAAK+D,EAChBgB,EAAG/E,EAAQ,GAAK+D,EAChBgB,EAAG/E,EAAQ,GAAK+D,EAChBgB,EAAG/E,EAAQ,GAAK+D,EAChBgB,EAAG/E,EAAQ,GAAK+D,EAChBiB,EAAGhF,EAAQ,GAAK5E,EAChB4J,EAAGhF,EAAQ,GAAK5E,EAChB4J,EAAGhF,EAAQ,GAAK5E,EAChB4J,EAAGhF,EAAQ,GAAK5E,EAChB4J,EAAGhF,EAAQ,GAAK5E,EAChB4J,EAAGhF,EAAQ,GAAK5E,EAChBlB,KAAKwK,kBACE,EAEX1K,KAAKiL,GACD,MAAMH,EAAK5K,KAAK8J,MAAMF,GAChBiB,EAAK7K,KAAK8J,MAAMD,GAChBiB,EAAK9K,KAAK8J,MAAM5I,MACtB6J,EAAOC,KAAKvH,SAAQ,CAACwH,EAAO5H,KACxB,MAAMyC,EAzOQ,EAyOAzC,EACRuG,EAAa,KAARqB,EACLpB,GAAc,SAARoB,IAAqB,GAC3B9F,GAAc,WAAR8F,IAAuB,GACnCL,EAAG9E,EAAQ,GAAK8D,EAChBgB,EAAG9E,EAAQ,GAAK8D,EAChBgB,EAAG9E,EAAQ,GAAK8D,EAChBgB,EAAG9E,EAAQ,GAAK8D,EAChBgB,EAAG9E,EAAQ,GAAK8D,EAChBgB,EAAG9E,EAAQ,GAAK8D,EAChBiB,EAAG/E,EAAQ,GAAK+D,EAChBgB,EAAG/E,EAAQ,GAAK+D,EAChBgB,EAAG/E,EAAQ,GAAK+D,EAChBgB,EAAG/E,EAAQ,GAAK+D,EAChBgB,EAAG/E,EAAQ,GAAK+D,EAChBgB,EAAG/E,EAAQ,GAAK+D,EAChBiB,EAAGhF,EAAQ,GAAKX,EAChB2F,EAAGhF,EAAQ,GAAKX,EAChB2F,EAAGhF,EAAQ,GAAKX,EAChB2F,EAAGhF,EAAQ,GAAKX,EAChB2F,EAAGhF,EAAQ,GAAKX,EAChB2F,EAAGhF,EAAQ,GAAKX,KAEpBnF,KAAKwK,iBAET1K,OAAOiL,GACH,MAAMvI,EAAIxC,KAAKoB,MAAQpB,KAAKsB,OACtB4J,EAAOH,EAAOC,KACpB,IAAK,IAAI3H,EAAI,EAAGA,EAAIb,IAAKa,EAAG,CACxB,MAAMyC,EAtQQ,EAsQAzC,EACRuG,EAAK5J,KAAK8J,MAAMF,GAAG9D,GACnB+D,EAAK7J,KAAK8J,MAAMD,GAAG/D,GAEnBmF,GADKjL,KAAK8J,MAAM5I,MAAM4E,IACP,KAAO+D,GAAM,IAAMD,EACxCsB,EAAK7H,GAAK4H,GAGlBnL,SACI,MAAMqF,EAAKnF,KAAKoF,IAChB,GAAIpF,KAAKuE,QAAQpE,YAEbH,KAAKmK,qBAEJ,IAAKnK,KAAKiE,iBACX,OAEJjE,KAAKiE,kBAAmB,EACxBkB,EAAG8D,WAAW9D,EAAG+D,aAAclJ,KAAKqF,SAASuE,IAC7CzE,EAAGkE,WAAWlE,EAAG+D,aAAclJ,KAAK8J,MAAMF,GAAIzE,EAAGgG,cACjDhG,EAAG8D,WAAW9D,EAAG+D,aAAclJ,KAAKqF,SAASwE,IAC7C1E,EAAGkE,WAAWlE,EAAG+D,aAAclJ,KAAK8J,MAAMD,GAAI1E,EAAGgG,cACjDhG,EAAG8D,WAAW9D,EAAG+D,aAAclJ,KAAKqF,SAASnE,OAC7CiE,EAAGkE,WAAWlE,EAAG+D,aAAclJ,KAAK8J,MAAM5I,MAAOiE,EAAGgG,cACpDhG,EAAGiG,WAAWjG,EAAGkG,UAAW,EAAGrL,KAAKmE,OAASnE,KAAKoE,QA9RhC,IAiSnB,MAAMkH,UAAiBvH,EAC1BjE,YAAYkE,GACRJ,MAAMI,GAEVlE,iBACI,MAAM8B,EAAM5B,KAAKU,KAAKC,WAAW,MACjC,IAAKiB,EACD,MAAM,IAAI8B,EAAkB,6BAEhC1D,KAAKS,KAAOmB,EAEhB9B,KAAK2C,EAAGC,EAAGxB,EAAO0I,EAAIC,GAClB,MAAMoB,GAAS/J,GAAS,KAAO2I,GAAM,IAAMD,EAC3C,IAAI9D,EAAQpD,EAAI1C,KAAKoB,MAAQqB,EAE7B,OADgBzC,KAAK8J,MAAMhE,KACXmF,IACZjL,KAAK8J,MAAMhE,GAASmF,EACpBjL,KAAKuL,SAAS7I,EAAI1C,KAAKoB,MAAQqB,GAAK,EACpCzC,KAAKwK,kBACE,GAIf1K,OAAOiL,GACHA,EAAOC,KAAKnC,IAAI7I,KAAK8J,OAEzBhK,OAAOsB,EAAOE,GACVsC,MAAMoB,OAAO5D,EAAOE,GACpBtB,KAAK8J,MAAQ,IAAI0B,YAAYpK,EAAQE,GACrCtB,KAAKuL,SAAW,IAAIE,UAAUrK,EAAQE,GAE1CxB,KAAKiL,GACD,IAAK,IAAI1H,EAAI,EAAGA,EAAIrD,KAAK8J,MAAMpB,SAAUrF,EACjCrD,KAAK8J,MAAMzG,KAAO0H,EAAOC,KAAK3H,KAC9BrD,KAAK8J,MAAMzG,GAAK0H,EAAOC,KAAK3H,GAC5BrD,KAAKuL,SAASlI,GAAK,GAG3BrD,KAAKwK,iBAET1K,SACIE,KAAKiE,kBAAmB,EACxB,IAAK,IAAIZ,EAAI,EAAGA,EAAIrD,KAAKuL,SAAS7C,SAAUrF,EACpCrD,KAAKuL,SAASlI,IACdrD,KAAK0L,YAAYrI,GACrBrD,KAAKuL,SAASlI,GAAK,EAG3BvD,YAAYgG,GACR,MAAMrD,EAAIqD,EAAQ9F,KAAKoB,MACjBsB,EAAIN,KAAKO,MAAMmD,EAAQ9F,KAAKoB,OAC5B6J,EAAQjL,KAAK8J,MAAMhE,GACnB5E,EAAS+J,GAAS,GAAK,KAAQ,EAC/BpB,EAAMoB,GAAS,GAAM,KACrBrB,EAAa,KAARqB,EACLU,EAAKlJ,EAAIzC,KAAKmB,UACdyK,EAAKlJ,EAAI1C,KAAKqB,WACdwK,EAAM3K,EAAQ,GAAMlB,KAAKmB,UACzB2K,EAAK1J,KAAKO,MAAMzB,EAAQ,IAAMlB,KAAKqB,WACnC0K,EAAI/L,KAAKwB,OAAOI,IAAIoK,aAAaH,EAAIC,EAAI9L,KAAKmB,UAAWnB,KAAKqB,YACpE,IAAK,IAAI4K,EAAK,EAAGA,EAAKF,EAAE3K,MAAQ2K,EAAEzK,SAAU2K,EAAI,CAC5C,MAAMC,EAAMH,EAAEf,KAAU,EAALiB,GAAU,IACvBE,EAAM,EAAMD,EAClBH,EAAEf,KAAU,EAALiB,EAAS,GACZC,GAA6B,KAAf,KAALtC,IAAe,IAAWuC,GAA6B,KAAf,KAALtC,IAAe,IAC/DkC,EAAEf,KAAU,EAALiB,EAAS,GACZC,GAA4B,KAAd,IAALtC,IAAc,IAAWuC,GAA4B,KAAd,IAALtC,IAAc,IAC7DkC,EAAEf,KAAU,EAALiB,EAAS,GAAKC,GAAoB,IAAP,GAALtC,IAAkBuC,GAAoB,IAAP,GAALtC,IACvDkC,EAAEf,KAAU,EAALiB,EAAS,GAAK,IAEzBjM,KAAKS,KAAK2L,aAAaL,EAAGJ,EAAIC,IA0E/B,MAAMnD,EAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GCpb/C,IAAIzE,EAAU,CACjBqI,OAAQjK,KAAKiK,OAAOC,KAAKlK,OCYtB,MAAMmK,EAAS,GACf,MAAMC,UAAcC,WACvB3M,YAAY4M,GAAI,EAAIC,EAAI,EAAGC,EAAI,EAAGC,EAAO,EAAGC,EAAU,EAAGC,EAAY,EAAGC,EAAW,EAAGC,GAAS,GAC3FrJ,MAAM,GACN5D,KAAKiN,QAAS,EACdjN,KAAK6I,IAAI,CAAC6D,EAAGC,EAAGC,EAAGC,EAAMC,EAASC,EAAWC,IAC7ChN,KAAKiN,OAASA,EAElBnN,iBAAiBoN,EAAMC,GAAU,GAC7B,KAAOD,EAAKxE,OAAS,GACjBwE,EAAKE,KAAK,GACd,GAAID,EACA,IAAK,IAAI9J,EAAI,EAAGA,EAAI,IAAKA,EACrB6J,EAAK7J,GAAKjB,KAAKiL,MAAwB,KAAhBH,EAAK7J,IAAM,GAAY,KAGtD,OAAO,IAAIrD,QAAQkN,GAEvBpN,eAAewN,GACX,IAAKA,EAAIxM,WAAW,KAChB,MAAM,IAAIC,MAAM,sEACZuM,EACA,KAER,MAAMC,EAAIC,OAAOC,SAASH,EAAII,UAAU,GAAI,IAC5C,IAAIhB,EAAGC,EAAGC,EAWV,OAVkB,GAAdU,EAAI5E,QACJgE,EAAItK,KAAKiL,OAAQE,GAAK,GAAK,GAAM,KACjCZ,EAAIvK,KAAKiL,QAAa,IAAJE,IAAa,GAAK,GAAM,KAC1CX,EAAIxK,KAAKiL,OAAY,GAAJE,GAAW,GAAM,OAGlCb,EAAItK,KAAKiL,OAAQE,GAAK,IAAM,IAAO,KACnCZ,EAAIvK,KAAKiL,QAAa,MAAJE,IAAe,GAAK,IAAO,KAC7CX,EAAIxK,KAAKiL,OAAY,IAAJE,GAAY,IAAO,MAEjC,IAAIvN,KAAK0M,EAAGC,EAAGC,GAE1B9M,gBAAgBgE,GACZ,MAAMyJ,EAAIhB,EAAOzI,GACjB,IAAKyJ,EACD,MAAM,IAAIxM,MAAM,uBAAyB+C,GAE7C,OAAOyJ,EAEXzN,kBAAkB6N,EAAKR,GAAU,GAC7B,MAAMI,EAAI,IAAIvN,KACd,IAAK,IAAIqD,EAAI,EAAGA,EAAIkK,EAAE7E,SAAUrF,EAC5BkK,EAAElK,GAAK,EAeX,OAbIsK,EAAM,EACNJ,EAAEK,IAAM,EAEHT,GAAWQ,EAAM,MACtBJ,EAAEK,GAAKxL,KAAKiL,MAAkC,MAAnB,SAANM,IAAmB,IAAa,KACrDJ,EAAEM,GAAKzL,KAAKiL,MAA+B,MAAhB,MAANM,IAAiB,GAAY,KAClDJ,EAAEO,GAAK1L,KAAKiL,MAAsB,KAAR,IAANM,GAAqB,OAGzCJ,EAAEK,GAAKxL,KAAKiL,MAA8B,MAAf,KAANM,IAAgB,GAAY,IACjDJ,EAAEM,GAAKzL,KAAKiL,MAA6B,MAAd,IAANM,IAAe,GAAY,IAChDJ,EAAEO,GAAK1L,KAAKiL,MAAqB,KAAP,GAANM,GAAoB,KAErCJ,EAEXzN,YAAYiO,EAAKZ,GAAU,GACvB,GAAIY,MAAAA,EACA,OAAO,IAAI/N,MAAM,GACrB,GAAI+N,aAAevB,EACf,OAAOuB,EAAIC,QAEf,GAAmB,iBAARD,EACP,OAAIA,EAAIjN,WAAW,KACRd,KAAKiO,QAAQF,GAEjB/N,KAAKkO,SAASH,GAAKC,QAEzB,GAAIG,MAAMC,QAAQL,GACnB,OAAO/N,KAAKqO,UAAUN,EAAKZ,GAE1B,GAAmB,iBAARY,EACZ,OAAIA,EAAM,EACC,IAAI/N,MAAM,GACdA,KAAKsO,WAAWP,EAAKZ,GAEhC,MAAM,IAAIpM,MAAM,4CAA8CwN,KAAKC,UAAUT,IAEjFjO,eAAe2O,GACX,MAAMV,EAAMU,EAAK,GACjB,OAAIV,aAAevB,EACRuB,EACPA,EAAM,QAAa7K,IAAR6K,EACJ,IAAI/N,MAAM,GACF,iBAAR+N,GACFA,EAAIjN,WAAW,KAIjBd,KAAK0O,KAAKX,EAAKU,EAAK,IAHZzO,KAAKkO,SAASH,GAKjCjO,eAAegE,EAAMmD,GACjB,MAAMsG,EAAItG,aAAgBuF,EAAQvF,EAAOjH,KAAK0O,KAAKzH,GAGnD,OAFAsF,EAAOzI,GAAQyJ,EACfA,EAAEzJ,KAAOA,EACFyJ,EAEXzN,qBAAqBgE,EAAM6K,GACvB,MAAMpB,EAAIvN,KAAK4O,QAAQ9K,EAAM6K,GAO7B,OANA3O,KAAK4O,QAAQ,SAAW9K,EAAMyJ,EAAES,QAAQa,QAAQ,KAChD7O,KAAK4O,QAAQ,WAAa9K,EAAMyJ,EAAES,QAAQa,QAAQ,KAClD7O,KAAK4O,QAAQ,YAAc9K,EAAMyJ,EAAES,QAAQa,QAAQ,KACnD7O,KAAK4O,QAAQ,QAAU9K,EAAMyJ,EAAES,QAAQc,OAAO,KAC9C9O,KAAK4O,QAAQ,UAAY9K,EAAMyJ,EAAES,QAAQc,OAAO,KAChD9O,KAAK4O,QAAQ,WAAa9K,EAAMyJ,EAAES,QAAQc,OAAO,KAC1CvB,EAEXb,QACI,OAAOtK,KAAKiL,MAAgB,SAAVrN,KAAK,IAE3B4N,SACI,OAAO5N,KAAK,GAEhB4N,OAAO7E,GACH/I,KAAK,GAAK+I,EAEd4D,QACI,OAAOvK,KAAKiL,MAAgB,SAAVrN,KAAK,IAE3B6N,SACI,OAAO7N,KAAK,GAEhB6N,OAAO9E,GACH/I,KAAK,GAAK+I,EAEd6D,QACI,OAAOxK,KAAKiL,MAAgB,SAAVrN,KAAK,IAE3B8N,SACI,OAAO9N,KAAK,GAEhB8N,OAAO/E,GACH/I,KAAK,GAAK+I,EAEdgG,YACI,OAAO/O,KAAK,GAEhBgP,eACI,OAAOhP,KAAK,GAEhBiP,iBACI,OAAOjP,KAAK,GAEhBkP,gBACI,OAAOlP,KAAK,GAGhBmP,QACI,OAAO/M,KAAKiL,MAAM,IACbjL,KAAKgN,IAAIpP,KAAK4N,GAAI5N,KAAK6N,GAAI7N,KAAK8N,IAC7B1L,KAAKC,IAAIrC,KAAK4N,GAAI5N,KAAK6N,GAAI7N,KAAK8N,MAG5CuB,QACI,OAAIrP,KAAKmP,GAAK,IACH,EACJ/M,KAAKiL,OAAQjL,KAAKC,IAAIrC,KAAK4N,GAAI5N,KAAK6N,GAAI7N,KAAK8N,IAChD1L,KAAKgN,IAAIpP,KAAK4N,GAAI5N,KAAK6N,GAAI7N,KAAK8N,MAC/B,IAAM1L,KAAKkN,IAAa,EAATtP,KAAKmP,EAAQ,MAC7B,KAGRI,QACI,IAAIC,EAAI,EACJC,EAAIzP,KAAK0M,EACTgD,EAAI1P,KAAK2M,EACTgD,EAAI3P,KAAK4M,EAmBb,OAjBI4C,EADAC,GAAKC,GAAKA,GAAKC,GACJD,EAAIC,IAAMF,EAAIE,GAArB,GAECD,EAAID,GAAKA,GAAKE,EACf,IAAM,GAAKF,EAAIE,IAAMD,EAAIC,IAExBD,GAAKC,GAAKA,EAAIF,EACf,IAAM,GAAKE,EAAIF,IAAMC,EAAID,IAExBE,EAAID,GAAKA,EAAID,EACd,IAAM,GAAKC,EAAID,IAAME,EAAIF,IAExBE,EAAIF,GAAKA,GAAKC,EACf,IAAM,GAAKD,EAAIC,IAAMC,EAAID,IAGzB,IAAM,GAAKC,EAAID,IAAMD,EAAIC,IAE1BtN,KAAKiL,MAAMmC,GAEtB1P,SACI,OAAOE,KAAK4N,GAAK,EAErB9N,OAAO8P,GACH,GAAqB,iBAAVA,EACP,OAAOA,EAAMlH,OAAS,EAChB1I,KAAK6P,UAAS,IAASD,EACvB5P,KAAK6P,YAAcD,EAExB,GAAqB,iBAAVA,EACZ,OAAO5P,KAAK8P,SAAWF,GAAS5P,KAAK8P,OAAM,IAASF,EAExD,MAAMG,EAAIvD,EAAMwD,KAAKJ,GACrB,OAAI5P,KAAKiQ,SACEF,EAAEE,SACNjQ,KAAKkQ,OAAM,CAACnH,EAAG1F,IACX0F,IAAMgH,EAAE1M,IAAM,KAG7BvD,KAAK8P,GACD,GAAIzB,MAAMC,QAAQwB,GACd5P,KAAK6I,IAAI+G,OAER,CACD,MAAMG,EAAIvD,EAAMwD,KAAKJ,GACrB5P,KAAK6I,IAAIkH,GASb,OAPIH,aAAiBpD,GACjBxM,KAAKiN,OAAS2C,EAAM3C,OACpBjN,KAAK8D,KAAO8L,EAAM9L,MAGlB9D,KAAKuL,WAEFvL,KAEXF,WAEI,OADAE,KAAK8D,UAAOZ,EACLlD,KAEXF,QAEI,MAAM8P,EAAQ,IAAI5P,KAAKmQ,YAEvB,OADAP,EAAMQ,KAAKpQ,MACJ4P,EAEX9P,OAAO8N,GAAK,EAAIC,EAAK,EAAGC,EAAK,EAAGiB,EAAQ,EAAGC,EAAW,EAAGC,EAAa,EAAGC,EAAY,EAAGjC,GACpF,IAAK,IAAI5J,EAAI,EAAGA,EAAIrD,KAAK0I,SAAUrF,EAC/BrD,KAAKqD,GAAKgN,UAAUhN,IAAM,EAK9B,YAHeH,IAAX+J,IACAjN,KAAKiN,OAASA,GAEXjN,KAAKuL,WAEhBzL,UAAU8N,GAAK,EAAIC,EAAK,EAAGC,EAAK,EAAGiB,EAAQ,EAAGC,EAAW,EAAGC,EAAa,EAAGC,EAAY,EAAGjC,GACvF,IAAK,IAAI5J,EAAI,EAAGA,EAAIrD,KAAK0I,SAAUrF,EAC/BrD,KAAKqD,GAAKjB,KAAKiL,OAAOgD,UAAUhN,IAAM,GAAK,MAK/C,YAHeH,IAAX+J,IACAjN,KAAKiN,OAASA,GAEXjN,KAAKuL,WAEhBzL,UAGI,OAFAE,KAAK,IAAM,EACXA,KAAKiN,QAAS,EACPjN,KAAKuL,WAEhBzL,WACI,IAAK,IAAIuD,EAAI,EAAGA,EAAIrD,KAAK0I,SAAUrF,EAC/BrD,KAAKqD,GAAK,EAGd,OADArD,KAAKiN,QAAS,EACPjN,KAAKuL,WAEhBzL,MAAMqN,GAAU,GACZ,OAAInN,KAAKiQ,UACG,EA9RpB,SAAoBvD,EAAI,EAAGC,EAAI,EAAGC,EAAI,EAAGO,GAAU,GAC/C,OAAIA,IACAT,EAAItK,KAAKC,IAAI,EAAGD,KAAKgN,IAAI,IAAKhN,KAAKiL,MAAU,SAAJX,OAG5B,MAFbC,EAAIvK,KAAKC,IAAI,EAAGD,KAAKgN,IAAI,IAAKhN,KAAKiL,MAAU,SAAJV,OAEhB,IADzBC,EAAIxK,KAAKC,IAAI,EAAGD,KAAKgN,IAAI,IAAKhN,KAAKiL,MAAU,SAAJT,QAG7CF,EAAItK,KAAKC,IAAI,EAAGD,KAAKgN,IAAI,GAAIhN,KAAKiL,MAAOX,EAAI,IAAO,QAGvC,KAFbC,EAAIvK,KAAKC,IAAI,EAAGD,KAAKgN,IAAI,GAAIhN,KAAKiL,MAAOV,EAAI,IAAO,QAE5B,IADxBC,EAAIxK,KAAKC,IAAI,EAAGD,KAAKgN,IAAI,GAAIhN,KAAKiL,MAAOT,EAAI,IAAO,OAsRzC0D,CAAWtQ,KAAK4N,GAAI5N,KAAK6N,GAAI7N,KAAK8N,GAAIX,GAEjDrN,QACI,OAAIE,KAAKiQ,SACEjQ,MACXA,KAAK4N,GAAKxL,KAAKgN,IAAI,IAAKhN,KAAKC,IAAI,EAAGrC,KAAK4N,KACzC5N,KAAK6N,GAAKzL,KAAKgN,IAAI,IAAKhN,KAAKC,IAAI,EAAGrC,KAAK6N,KACzC7N,KAAK8N,GAAK1L,KAAKgN,IAAI,IAAKhN,KAAKC,IAAI,EAAGrC,KAAK8N,KAClC9N,KAAKuL,YAEhBzL,IAAI8P,EAAOW,GACP,MAAMR,EAAIvD,EAAMwD,KAAKJ,GACrB,GAAIG,EAAEE,SACF,OAAOjQ,KACPA,KAAKiQ,UACLjQ,KAAKwQ,WAGT,MAAMC,EAAU,KADhBF,EAAUnO,KAAKgN,IAAI,IAAKhN,KAAKC,IAAI,EAAGkO,KAEpC,IAAK,IAAIlN,EAAI,EAAGA,EAAIrD,KAAK0I,SAAUrF,EAC/BrD,KAAKqD,GAAKjB,KAAKiL,OAAOrN,KAAKqD,GAAKoN,EAAUV,EAAE1M,GAAKkN,GAAW,KAGhE,OADAvQ,KAAKiN,OAASjN,KAAKiN,QAAU8C,EAAE9C,OACxBjN,KAAKuL,WAGhBzL,QAAQyQ,GACJ,GAAIvQ,KAAKiQ,SACL,OAAOjQ,KAEX,IADAuQ,EAAUnO,KAAKgN,IAAI,IAAKhN,KAAKC,IAAI,EAAGkO,MACrB,EACX,OACJ,MAAME,EAAU,IAAMF,EACtB,IAAK,IAAIlN,EAAI,EAAGA,EAAI,IAAKA,EACrBrD,KAAKqD,GAAKjB,KAAKiL,OAAOrN,KAAKqD,GAAKoN,EAAU,IAAMF,GAAW,KAE/D,OAAOvQ,KAAKuL,WAGhBzL,OAAOyQ,GACH,GAAIvQ,KAAKiQ,SACL,OAAOjQ,KAEX,IADAuQ,EAAUnO,KAAKgN,IAAI,IAAKhN,KAAKC,IAAI,EAAGkO,MACrB,EACX,OACJ,MAAME,EAAU,IAAMF,EACtB,IAAK,IAAIlN,EAAI,EAAGA,EAAI,IAAKA,EACrBrD,KAAKqD,GAAKjB,KAAKiL,OAAOrN,KAAKqD,GAAKoN,EAAU,EAAIF,GAAW,KAE7D,OAAOvQ,KAAKuL,WAEhBzL,OACI,GAAIE,KAAKiQ,SACL,OAAOjQ,KACX,MAAM+L,EAAI/L,KACV,GAAI+L,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAI,CAC3B,MAAMc,EAAO7M,KAAK+O,MAAQ3M,KAAKO,MAAMqB,EAAQqI,SAAWrM,KAAK+O,OAAS,EAChEjC,EAAU9M,KAAKgP,SACf5M,KAAKO,MAAMqB,EAAQqI,SAAWrM,KAAKgP,UACnC,EACAjC,EAAY/M,KAAKiP,WACjB7M,KAAKO,MAAMqB,EAAQqI,SAAWrM,KAAKiP,YACnC,EACAjC,EAAWhN,KAAKkP,UAChB9M,KAAKO,MAAMqB,EAAQqI,SAAWrM,KAAKkP,WACnC,EACNlP,KAAK4N,IAAMf,EAAOC,EAClB9M,KAAK6N,IAAMhB,EAAOE,EAClB/M,KAAK8N,IAAMjB,EAAOG,EAClB,IAAK,IAAI3J,EAAI,EAAGA,EAAIrD,KAAK0I,SAAUrF,EAC/BrD,KAAKqD,GAAK,EAEd,OAAOrD,KAAKuL,WAEhB,OAAOvL,KAGXF,IAAI8P,EAAOW,EAAU,KACjB,MAAMR,EAAIvD,EAAMwD,KAAKJ,GACrB,GAAIG,EAAEE,SACF,OAAOjQ,KACPA,KAAKiQ,UACLjQ,KAAKwQ,WAET,IAAK,IAAInN,EAAI,EAAGA,EAAIrD,KAAK0I,SAAUrF,EAC/BrD,KAAKqD,IAAMjB,KAAKiL,MAAO0C,EAAE1M,GAAKkN,EAAW,KAG7C,OADAvQ,KAAKiN,OAASjN,KAAKiN,QAAU8C,EAAE9C,OACxBjN,KAAKuL,WAEhBzL,MAAMyQ,GACF,GAAIvQ,KAAKiQ,UAAuB,KAAXM,EACjB,OAAOvQ,KACXuQ,EAAUnO,KAAKC,IAAI,EAAGkO,GACtB,IAAK,IAAIlN,EAAI,EAAGA,EAAIrD,KAAK0I,SAAUrF,EAC/BrD,KAAKqD,GAAKjB,KAAKiL,MAAOrN,KAAKqD,GAAKkN,EAAW,KAE/C,OAAOvQ,KAAKuL,WAEhBzL,SAAS8P,GACL,GAAI5P,KAAKiQ,SACL,OAAOjQ,KACX,IAAIgL,EAAO4E,EACX,IAAKzB,MAAMC,QAAQwB,GAAQ,CACvB,GAAIA,EAAMK,SACN,OAAOjQ,KACXgL,EAAO4E,EAEX,MAAMc,EAAMtO,KAAKC,IAAI,EAAGD,KAAKgN,IAAIpP,KAAK0I,OAAQsC,EAAKtC,SACnD,IAAK,IAAIrF,EAAI,EAAGA,EAAIqN,IAAOrN,EACvBrD,KAAKqD,GAAKjB,KAAKiL,MAAOrN,KAAKqD,IAAM2H,EAAK3H,IAAM,GAAM,KAEtD,OAAOrD,KAAKuL,WAGhBzL,YACI,GAAIE,KAAKiQ,SACL,OAAOjQ,KACX,MAAMqC,EAAMD,KAAKC,IAAIrC,KAAK4N,GAAI5N,KAAK6N,GAAI7N,KAAK8N,IAC5C,OAAIzL,GAAO,IACArC,MACXA,KAAK4N,GAAKxL,KAAKiL,MAAO,IAAMrN,KAAK4N,GAAMvL,GACvCrC,KAAK6N,GAAKzL,KAAKiL,MAAO,IAAMrN,KAAK6N,GAAMxL,GACvCrC,KAAK8N,GAAK1L,KAAKiL,MAAO,IAAMrN,KAAK8N,GAAMzL,GAChCrC,KAAKuL,YAMhBzL,IAAIqN,GAAU,GAEV,MAAO,IADGnN,KAAK8P,MAAM3C,GACN0C,SAAS,IAAIc,SAASxD,EAAU,EAAI,EAAG,KAE1DrN,SAASqN,GAAU,GACf,OAAInN,KAAK8D,KACE9D,KAAK8D,KACZ9D,KAAKiQ,SACE,aACJjQ,KAAKsN,IAAIH,GAGpBrN,gBAAgB8Q,EAAGhE,GACf,GAAIgE,EAAEX,UAAYrD,EAAEqD,SAChB,OACJ,MAAMY,EAAID,EAAE5C,QAAQ8C,QACdnB,EAAI/C,EAAEoB,QAAQ8C,QAIpB,IAAIC,EAAQ3O,KAAKkN,IAAIuB,EAAEtB,EAAII,EAAEJ,GAI7B,GAHIwB,EAAQ,MACRA,EAAQ,IAAMA,GAEdA,EAAQ,GACR,OAEJ,GAAI3O,KAAKkN,IAAIuB,EAAE1B,EAAIQ,EAAER,IADR,GAET,OAEJ,MAAO6B,EAAIC,GAAM,CAACJ,EAAGlB,GAAGuB,MAAK,CAACN,EAAGhE,IAAMgE,EAAEvB,EAAIzC,EAAEyC,IAE/C,KAAO4B,EAAG9B,EAAI6B,EAAG7B,EANJ,IAOT8B,EAAGE,IAAIC,EAAO,GACdJ,EAAGG,IAAIE,EAAO,GAElBT,EAAER,KAAKS,GACPjE,EAAEwD,KAAKT,GAGX7P,YAAY8Q,EAAGhE,GACX,MAAM0E,EAAOV,EAAE5C,QACf4C,EAAER,KAAKxD,GACPA,EAAEwD,KAAKkB,GAEXxR,YAAY8Q,EAAGhE,GACX,OAAOxK,KAAKiL,OAAOuD,EAAEhD,GAAKhB,EAAEgB,KAAOgD,EAAEhD,GAAKhB,EAAEgB,IAAM,OAC7CgD,EAAE/C,GAAKjB,EAAEiB,KAAO+C,EAAE/C,GAAKjB,EAAEiB,IAAM,OAC/B+C,EAAE9C,GAAKlB,EAAEkB,KAAO8C,EAAE9C,GAAKlB,EAAEkB,IAAM,QAG5C,MAAMuD,EAAQ7E,EAAMoC,QAAQ,QAAS,GAC/BwC,EAAQ5E,EAAMoC,QAAQ,QAAS,MACrCpC,EAAM+E,cAAc,OAAQ,CAAC,GAAI,IAAK,MACtC/E,EAAM+E,cAAc,QAAS,CAAC,GAAI,GAAI,IACtC/E,EAAM+E,cAAc,MAAO,CAAC,GAAI,GAAI,KACpC/E,EAAM+E,cAAc,OAAQ,CAAC,IAAK,GAAI,KACtC/E,EAAM+E,cAAc,OAAQ,CAAC,GAAI,GAAI,KACrC/E,EAAM+E,cAAc,SAAU,CAAC,IAAK,IAAK,IACzC/E,EAAM+E,cAAc,SAAU,CAAC,IAAK,EAAG,MACvC/E,EAAM+E,cAAc,QAAS,CAAC,EAAG,IAAK,IACtC/E,EAAM+E,cAAc,SAAU,CAAC,IAAK,GAAI,IACxC/E,EAAM+E,cAAc,OAAQ,CAAC,EAAG,EAAG,MACnC/E,EAAM+E,cAAc,MAAO,CAAC,IAAK,EAAG,IACpC/E,EAAM+E,cAAc,QAAS,CAAC,IAAK,GAAI,IACvC/E,EAAM+E,cAAc,QAAS,CAAC,IAAK,GAAI,IACvC/E,EAAM+E,cAAc,UAAW,CAAC,IAAK,EAAG,MACxC/E,EAAM+E,cAAc,UAAW,CAAC,IAAK,EAAG,KACxC/E,EAAM+E,cAAc,UAAW,CAAC,IAAK,EAAG,KACxC/E,EAAM+E,cAAc,OAAQ,CAAC,GAAI,IAAK,IACtC/E,EAAM+E,cAAc,aAAc,CAAC,GAAI,IAAK,IAC5C/E,EAAM+E,cAAc,QAAS,CAAC,GAAI,GAAI,KACtC/E,EAAM+E,cAAc,SAAU,CAAC,GAAI,EAAG,MACtC/E,EAAM+E,cAAc,MAAO,CAAC,GAAI,EAAG,MACnC/E,EAAM+E,cAAc,OAAQ,CAAC,EAAG,IAAK,MACrC/E,EAAM+E,cAAc,YAAa,CAAC,EAAG,IAAK,KAC1C/E,EAAM+E,cAAc,MAAO,CAAC,EAAG,IAAK,KACpC/E,EAAM+E,cAAc,MAAO,CAAC,EAAG,GAAI,MACnC/E,EAAM+E,cAAc,QAAS,CAAC,EAAG,GAAI,MACrC/E,EAAM+E,cAAc,SAAU,CAAC,GAAI,GAAI,KACvC/E,EAAM+E,cAAc,OAAQ,CAAC,IAAK,GAAI,ICjf/B,MAAMC,EACT1R,YAAYsB,EAAOE,GACftB,KAAKmE,OAAS/C,EACdpB,KAAKoE,QAAU9C,EACftB,KAAK8J,MAAQ,IAAI0B,YAAYpK,EAAQE,GAEzC0J,WACI,OAAOhL,KAAK8J,MAEhB1I,YACI,OAAOpB,KAAKmE,OAEhB7C,aACI,OAAOtB,KAAKoE,QAEhBtE,IAAI2C,EAAGC,GACH,IAAIoD,EAAQpD,EAAI1C,KAAKoB,MAAQqB,EAC7B,MAAMwI,EAAQjL,KAAK8J,MAAMhE,IAAU,EAInC,MAAO,CAAE5E,MAHK+J,GAAS,GAGPrB,GADG,KAARqB,EACSpB,GAFRoB,GAAS,GAAM,MAI/BnL,SAASiC,GACL,OAAIA,MAAAA,GACQ,EACLA,EAAG0P,WAAW,GAEzB3R,KAAK2C,EAAGC,EAAGxB,GAAQ,EAAI0I,GAAK,EAAIC,GAAK,GACjC,IAAI/D,EAAQpD,EAAI1C,KAAKoB,MAAQqB,EAC7B,MAAMiP,EAAU1R,KAAK8J,MAAMhE,IAAU,EAChB,iBAAV5E,IACPA,EAAQlB,KAAK2R,SAASzQ,IAER,iBAAP0I,IACPA,EAAK4C,EAAMwD,KAAKpG,GAAIkG,SAEN,iBAAPjG,IACPA,EAAK2C,EAAMwD,KAAKnG,GAAIiG,SAKxB,MAAM7E,IAHN/J,EAAQA,GAAS,EAAY,IAARA,EAAewQ,GAAW,KAGvB,MAFxB7H,EAAKA,GAAM,EAAS,KAALA,EAAc6H,GAAW,GAAM,OAET,KADrC9H,EAAKA,GAAM,EAAS,KAALA,EAAuB,KAAV8H,GAG5B,OADA1R,KAAK8J,MAAMhE,GAASmF,EACbjL,KAGXF,WAAW2C,EAAGC,EAAGkP,GACb,IAAI1Q,EAAQ0Q,EAAO7P,GACb6P,EAAO7P,QACUmB,IAAjB0O,EAAO1Q,MACH0Q,EAAO1Q,OACN,EAGX,OAAOlB,KAAKsD,KAAKb,EAAGC,EAAGxB,EAAO0Q,EAAOhI,GAAIgI,EAAO/H,IAEpD/J,SAAS2C,EAAGC,GACR,OAAwB,GAApB2N,UAAU3H,OACH1I,KAAK6R,KAAK,EAAG,EAAG,GAEpB7R,KAAKsD,KAAKb,EAAGC,EAAG,EAAG,EAAG,GAEjC5C,KAAKoB,EAAQ,EAAG0I,EAAK,KAAOC,EAAK,GACT,iBAAT3I,IACPA,EAAQlB,KAAK2R,SAASzQ,IAK1B,MAAM+J,IAHN/J,GAAgB,MAGQ,MADxB2I,GAAU,OAC2B,KAFrCD,GAAU,MAIV,OADA5J,KAAK8J,MAAM+H,KAAK5G,GACTjL,KAEXF,KAAK8P,GAED,OADA5P,KAAK8J,MAAMjB,IAAI+G,EAAM9F,OACd9J,MC7ER,MAAM8R,EACThS,cACIE,KAAK+B,IAAM,EACX/B,KAAK4J,GAAK,IAAI4C,EACdxM,KAAK6J,GAAK,IAAI2C,EAElB1M,WACI,OAAOE,KAEXF,KAAK8P,GAID,OAHA5P,KAAK+B,GAAK6N,EAAM7N,GAChB/B,KAAK4J,GAAGwG,KAAKR,EAAMhG,IACnB5J,KAAK6J,GAAGuG,KAAKR,EAAM/F,IACZ7J,KAAKuL,WAEhBzL,QACI,MAAM8P,EAAQ,IAAIkC,EAElB,OADAlC,EAAMQ,KAAKpQ,MACJ4P,EAEX9P,UAII,OAHAE,KAAK+B,IAAM,EACX/B,KAAK4J,GAAGmI,UACR/R,KAAK6J,GAAGkI,UACD/R,KAAKuL,WAEhBzL,WAII,OAHAE,KAAK+B,GAAK,EACV/B,KAAK4J,GAAG4G,WACRxQ,KAAK6J,GAAG2G,WACDxQ,KAAKuL,WAEhBzL,KAAKiC,GAAK,EAAI6H,GAAK,EAAIC,GAAK,GAYxB,OAXI9H,IAAc,IAARA,IACN/B,KAAK+B,GAAKA,IAEF,IAAR6H,GAAoB,OAAPA,IACbA,EAAK4C,EAAMwD,KAAKpG,GAChB5J,KAAK4J,GAAGwG,KAAKxG,KAEL,IAARC,GAAoB,OAAPA,IACbA,EAAK2C,EAAMwD,KAAKnG,GAChB7J,KAAK6J,GAAGuG,KAAKvG,IAEV7J,KAAKuL,WAEhBzL,WAAWmH,EAAM+K,GAKb,QAJgB9O,IAAZ8O,IACAA,EAAU/K,EAAK+K,cACH9O,IAAZ8O,IACAA,EAAU,OACVA,GAAW,GAUf,OARI/K,EAAKlF,GACL/B,KAAK+B,GAAKkF,EAAKlF,QACKmB,IAAf+D,EAAK/F,QACVlB,KAAK+B,GAAKkF,EAAK/F,OACf+F,EAAK2C,IACL5J,KAAK4J,GAAGuH,IAAIlK,EAAK2C,GAAIoI,GACrB/K,EAAK4C,IACL7J,KAAK6J,GAAGsH,IAAIlK,EAAK4C,GAAImI,GAClBhS,KAAKuL,WAEhBzL,SAEI,OADCE,KAAK6J,GAAI7J,KAAK4J,IAAM,CAAC5J,KAAK4J,GAAI5J,KAAK6J,IAC7B7J,KAAKuL,WAEhBzL,SAASmS,EAAOrI,GAAK,EAAMC,GAAK,GAQ5B,OAPAoI,EAAQzF,EAAMwD,KAAKiC,GACfrI,GACA5J,KAAK4J,GAAGsI,SAASD,GAEjBpI,GACA7J,KAAK6J,GAAGqI,SAASD,GAEdjS,KAAKuL,WAEhBzL,IAAImS,EAAOrI,EAAK,GAAIC,EAAKD,GAQrB,OAPAqI,EAAQzF,EAAMwD,KAAKiC,GACfrI,EAAK,GACL5J,KAAK4J,GAAGuH,IAAIc,EAAOrI,GAEnBC,EAAK,GACL7J,KAAK6J,GAAGsH,IAAIc,EAAOpI,GAEhB7J,KAAKuL,WAEhBzL,IAAImS,EAAOrI,EAAK,IAAKC,EAAKD,GAQtB,OAPAqI,EAAQzF,EAAMwD,KAAKiC,GACfrI,EAAK,GACL5J,KAAK4J,GAAGuI,IAAIF,EAAOrI,GAEnBC,EAAK,GACL7J,KAAK6J,GAAGsI,IAAIF,EAAOpI,GAEhB7J,KAAKuL,WAEhBzL,WAEI,OADA0M,EAAM4F,SAASpS,KAAK4J,GAAI5J,KAAK6J,IACtB7J,KAAKuL,WAEhBzL,OAII,OAHAE,KAAK4J,GAAGyI,OACRrS,KAAK6J,GAAGwI,OACRrS,KAAKuL,WACE,CACHxJ,GAAI/B,KAAK+B,GACT6H,GAAI5J,KAAK4J,GAAGkG,QACZjG,GAAI7J,KAAK6J,GAAGiG,UC5GjB,MAAMwC,EACTxS,YAAYiC,EAAI6H,EAAIC,EAAImI,GACpBhS,KAAK+B,GAAKA,EACV/B,KAAK4J,GAAKA,EACV5J,KAAK6J,GAAKA,EACV7J,KAAKgS,QAAUA,EAEnBlS,eAAe2O,GACX,IAAiCuD,EAA7BjQ,EAAK,KAAM6H,GAAM,EAAGC,GAAM,EAC9B,GAAmB,GAAf4E,EAAK/F,OACL,OAAO,IAAI4J,EAAO,MAAO,GAAI,GAKjC,GAHwB,GAAf7D,EAAK/F,QAAeyF,MAAMC,QAAQK,EAAK,MAC5CA,EAAOA,EAAK,IAEZA,EAAK/F,OAAS,EACd3G,EAAK0M,EAAK,IAAM,KAChB7E,EAAK6E,EAAK,GACV5E,EAAK4E,EAAK,GACVuD,EAAUvD,EAAK,QAEd,GAAmB,GAAfA,EAAK/F,OACV,GAAuB,iBAAZ+F,EAAK,GACZ5E,EAAK4E,EAAK,OAET,CACD,MAAMmD,EAASnD,EAAK,GACpB1M,EAAK6P,EAAO7P,IAAM,KAClB6H,EAAKgI,EAAOhI,KAAO,EACnBC,EAAK+H,EAAO/H,KAAO,EACnBmI,EAAUJ,EAAOI,QAezB,MAZkB,iBAAPpI,EACPA,EAAK4C,EAAMwD,KAAKpG,GACXuE,MAAMC,QAAQxE,GACnBA,EAAK4C,EAAMkC,KAAK9E,GACXA,MAAAA,IACLA,GAAM,GACQ,iBAAPC,EACPA,EAAK2C,EAAMwD,KAAKnG,GACXsE,MAAMC,QAAQvE,GACnBA,EAAK2C,EAAMkC,KAAK7E,GACXA,MAAAA,IACLA,GAAM,GACH,IAAI7J,KAAK+B,EAAI6H,EAAIC,EAAImI,GAEhClS,eAAegE,KAAS2K,GACpB,IAAImD,EAKJ,OAHAA,EAAS5R,KAAK0O,QAAQD,GACtBmD,EAAO9N,KAAOA,EACdyO,EAAQzO,GAAQ8N,EACTA,GAGR,MAAMW,EAAU,6DFwBhB,cAAqBf,EACxB1R,YAAY0S,GACR5O,MAAM4O,EAAOpR,MAAOoR,EAAOlR,QAC3BtB,KAAKyS,QAAUD,EACfA,EAAOE,OAAO1S,MAGlBF,SAASiC,GACL,OAAO/B,KAAKyS,QAAQjR,OAAOmR,QAAQ5Q,GAEvCjC,SAEI,OADAE,KAAKyS,QAAQrC,KAAKpQ,MACXA,KAEXF,iBAEI,OADAE,KAAKyS,QAAQC,OAAO1S,MACbA,gEH4QR,SAAmB4S,GACtB,IAaIJ,EAbAzS,EAAO,GACX,GAAqB,iBAAV6S,EACP7S,EAAKyB,OAAS3B,EAAOgT,UAAUD,QAE9B,GAAIA,aAAiBE,iBACtB/S,EAAKyB,OAAS3B,EAAOgT,UAAUD,OAE9B,CACD,IAAKA,EAAMA,MACP,MAAM,IAAI7R,MAAM,8BACpB2I,OAAOC,OAAO5J,EAAM6S,GACpB7S,EAAKyB,OAAS3B,EAAOgT,UAAUD,EAAMA,OAGzC,IACIJ,EAAS,IAAItN,EAAOnF,GAExB,MAAOgT,GACH,KAAMA,aAAarP,GACf,MAAMqP,EAKd,OAHKP,IACDA,EAAS,IAAIlH,EAASvL,IAEnByS,YAEJ,SAAkB3R,GAKrB,IAAI2R,EAJe,iBAAR3R,IACPA,EAAM,CAAER,KAAMQ,IAElBA,EAAIW,OAAS3B,EAAOmT,SAASnS,GAE7B,IACI2R,EAAS,IAAItN,EAAOrE,GAExB,MAAOkS,GACH,KAAMA,aAAarP,GACf,MAAMqP,EAKd,OAHKP,IACDA,EAAS,IAAIlH,EAASzK,IAEnB2R,aCrZJ,SAAmBzS,EAAO,IAC7B2J,OAAOC,OAAO3F,EAASjE"}