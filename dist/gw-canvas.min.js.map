{"version":3,"file":"gw-canvas.min.js","sources":["../js/utils.js","../js/shaders.js","../js/canvas.js","../js/glyphs.js","../js/config.js","../js/color.js","../js/buffer.js","../js/mixer.js","../js/index.js"],"sourcesContent":["// Copy of: https://github.com/ondras/fastiles/blob/master/ts/utils.ts (v2.1.0)\nexport const QUAD = [\n    0, 0, 1, 0, 0, 1,\n    0, 1, 1, 0, 1, 1\n];\nexport function createProgram(gl, ...sources) {\n    const p = gl.createProgram();\n    [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER].forEach((type, index) => {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sources[index]);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(shader));\n        }\n        gl.attachShader(p, shader);\n    });\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p));\n    }\n    return p;\n}\nexport function createTexture(gl) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    return t;\n}\nexport function createGeometry(gl, attribs, width, height) {\n    let tileCount = width * height;\n    let positionData = new Uint16Array(tileCount * QUAD.length);\n    let uvData = new Uint8Array(tileCount * QUAD.length);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            QUAD.forEach(value => {\n                positionData[i] = (i % 2 ? y : x) + value;\n                uvData[i] = value;\n                i++;\n            });\n        }\n    }\n    const position = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, position);\n    gl.vertexAttribIPointer(attribs[\"position\"], 2, gl.UNSIGNED_SHORT, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, positionData, gl.STATIC_DRAW);\n    const uv = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uv);\n    gl.vertexAttribIPointer(attribs[\"uv\"], 2, gl.UNSIGNED_BYTE, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, uvData, gl.STATIC_DRAW);\n    return { position, uv };\n}\n","// Based on: https://github.com/ondras/fastiles/blob/master/ts/shaders.ts (v2.1.0)\nexport const VS = `\n#version 300 es\nin uvec2 position;\nin uvec2 uv;\nin uint style;\nout vec2 fsUv;\nflat out uint fsStyle;\nuniform highp uvec2 tileSize;\nuniform uvec2 viewportSize;\nvoid main() {\n\tivec2 positionPx = ivec2(position * tileSize);\n\tvec2 positionNdc = (vec2(positionPx * 2) / vec2(viewportSize))-1.0;\n\tpositionNdc.y *= -1.0;\n\tgl_Position = vec4(positionNdc, 0.0, 1.0);\n\tfsUv = vec2(uv);\n\tfsStyle = style;\n}`.trim();\nexport const FS = `\n#version 300 es\nprecision highp float;\nin vec2 fsUv;\nflat in uint fsStyle;\nout vec4 fragColor;\nuniform sampler2D font;\nuniform highp uvec2 tileSize;\nvoid main() {\n\tuvec2 fontTiles = uvec2(textureSize(font, 0)) / tileSize;\n\n\tuint glyph = (fsStyle & uint(0xFF000000)) >> 24;\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tuvec2 fontPosition = uvec2(glyphX, glyphY);\n\n\tuvec2 fontPx = (tileSize * fontPosition) + uvec2(vec2(tileSize) * fsUv);\n\tvec3 texel = texelFetch(font, ivec2(fontPx), 0).rgb;\n\n\tfloat s = 15.0;\n\tuint fr = (fsStyle & uint(0xF00)) >> 8;\n\tuint fg = (fsStyle & uint(0x0F0)) >> 4;\n\tuint fb = (fsStyle & uint(0x00F)) >> 0;\n\tvec3 fgRgb = vec3(fr, fg, fb) / s;\n  \n\tuint br = (fsStyle & uint(0xF00000)) >> 20;\n\tuint bg = (fsStyle & uint(0x0F0000)) >> 16;\n\tuint bb = (fsStyle & uint(0x00F000)) >> 12;\n\tvec3 bgRgb = vec3(br, bg, bb) / s;\n  \n\tfragColor = vec4(mix(bgRgb, fgRgb, texel), 1.0);\n}`.trim();\n","// Based on: https://github.com/ondras/fastiles/blob/master/ts/scene.ts (v2.1.0)\nimport { createProgram, createTexture, createGeometry } from \"./utils\";\nimport * as shaders from \"./shaders\";\nconst VERTICES_PER_TILE = 6;\nexport class NotSupportedError extends Error {\n    constructor(...params) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(...params);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        // @ts-ignore\n        if (Error.captureStackTrace) {\n            // @ts-ignore\n            Error.captureStackTrace(this, NotSupportedError);\n        }\n        this.name = 'NotSupportedError';\n    }\n}\nexport class BaseCanvas {\n    constructor(options) {\n        this._data = new Uint32Array();\n        this._renderRequested = false;\n        this._autoRender = true;\n        this._width = 50;\n        this._height = 25;\n        if (!options.glyphs)\n            throw new Error('You must supply glyphs for the canvas.');\n        this._node = this._createNode();\n        this._createContext();\n        this._configure(options);\n    }\n    get node() { return this._node; }\n    get width() { return this._width; }\n    get height() { return this._height; }\n    get tileWidth() { return this._glyphs.tileWidth; }\n    get tileHeight() { return this._glyphs.tileHeight; }\n    get pxWidth() { return this.node.clientWidth; }\n    get pxHeight() { return this.node.clientHeight; }\n    get glyphs() { return this._glyphs; }\n    set glyphs(glyphs) {\n        this._setGlyphs(glyphs);\n    }\n    _createNode() {\n        return document.createElement(\"canvas\");\n    }\n    _configure(options) {\n        this._width = options.width || this._width;\n        this._height = options.height || this._height;\n        this._autoRender = (options.render !== false);\n        this._setGlyphs(options.glyphs);\n        if (options.div) {\n            let el;\n            if (typeof options.div === 'string') {\n                el = document.getElementById(options.div);\n                if (!el) {\n                    console.warn('Failed to find parent element by ID: ' + options.div);\n                }\n            }\n            else {\n                el = options.div;\n            }\n            if (el && el.appendChild) {\n                el.appendChild(this.node);\n            }\n        }\n    }\n    _setGlyphs(glyphs) {\n        if (glyphs === this._glyphs)\n            return false;\n        this._glyphs = glyphs;\n        this.resize(this._width, this._height);\n        return true;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        const node = this.node;\n        node.width = this._width * this.tileWidth;\n        node.height = this._height * this.tileHeight;\n    }\n    draw(x, y, glyph, fg, bg) {\n        glyph = glyph & 0xFF;\n        bg = bg & 0xFFF;\n        fg = fg & 0xFFF;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._set(x, y, style);\n    }\n    _requestRender() {\n        if (this._renderRequested)\n            return;\n        this._renderRequested = true;\n        if (!this._autoRender)\n            return;\n        requestAnimationFrame(() => this.render());\n    }\n    _set(x, y, style) {\n        let index = y * this.width + x;\n        const current = this._data[index];\n        if (current !== style) {\n            this._data[index] = style;\n            this._requestRender();\n        }\n    }\n    copy(buffer) {\n        this._data.set(buffer.data);\n        this._requestRender();\n    }\n    copyTo(buffer) {\n        buffer.data.set(this._data);\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    toX(x) {\n        return Math.floor(this.width * x / this.node.clientWidth);\n    }\n    toY(y) {\n        return Math.floor(this.height * y / this.node.clientHeight);\n    }\n}\nexport class Canvas extends BaseCanvas {\n    constructor(options) {\n        super(options);\n    }\n    _createContext() {\n        let gl = this.node.getContext(\"webgl2\");\n        if (!gl) {\n            throw new NotSupportedError(\"WebGL 2 not supported\");\n        }\n        this._gl = gl;\n        this._buffers = {};\n        this._attribs = {};\n        this._uniforms = {};\n        const p = createProgram(gl, shaders.VS, shaders.FS);\n        gl.useProgram(p);\n        const attributeCount = gl.getProgramParameter(p, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            gl.enableVertexAttribArray(i);\n            let info = gl.getActiveAttrib(p, i);\n            this._attribs[info.name] = i;\n        }\n        const uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(p, i);\n            this._uniforms[info.name] = gl.getUniformLocation(p, info.name);\n        }\n        gl.uniform1i(this._uniforms[\"font\"], 0);\n        this._texture = createTexture(gl);\n    }\n    _createGeometry() {\n        const gl = this._gl;\n        this._buffers.position && gl.deleteBuffer(this._buffers.position);\n        this._buffers.uv && gl.deleteBuffer(this._buffers.uv);\n        let buffers = createGeometry(gl, this._attribs, this.width, this.height);\n        Object.assign(this._buffers, buffers);\n    }\n    _createData() {\n        const gl = this._gl;\n        const attribs = this._attribs;\n        const tileCount = this.width * this.height;\n        this._buffers.style && gl.deleteBuffer(this._buffers.style);\n        this._data = new Uint32Array(tileCount * VERTICES_PER_TILE);\n        const style = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, style);\n        gl.vertexAttribIPointer(attribs[\"style\"], 1, gl.UNSIGNED_INT, 0, 0);\n        Object.assign(this._buffers, { style });\n    }\n    _setGlyphs(glyphs) {\n        if (!super._setGlyphs(glyphs))\n            return false;\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.uniform2uiv(uniforms[\"tileSize\"], [this.tileWidth, this.tileHeight]);\n        this._uploadGlyphs();\n        return true;\n    }\n    _uploadGlyphs() {\n        if (!this._glyphs.needsUpdate)\n            return;\n        const gl = this._gl;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._glyphs.node);\n        this._requestRender();\n        this._glyphs.needsUpdate = false;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.viewport(0, 0, this.node.width, this.node.height);\n        gl.uniform2ui(uniforms[\"viewportSize\"], this.node.width, this.node.height);\n        this._createGeometry();\n        this._createData();\n    }\n    _set(x, y, style) {\n        let index = y * this.width + x;\n        index *= VERTICES_PER_TILE;\n        const current = this._data[index + 2];\n        if (current !== style) {\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n            this._requestRender();\n        }\n    }\n    copy(buffer) {\n        buffer.data.forEach((style, i) => {\n            const index = i * VERTICES_PER_TILE;\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n        });\n        this._requestRender();\n    }\n    copyTo(buffer) {\n        const n = this.width * this.height;\n        const dest = buffer.data;\n        for (let i = 0; i < n; ++i) {\n            const index = i * VERTICES_PER_TILE;\n            dest[i] = this._data[index + 2];\n        }\n    }\n    render() {\n        const gl = this._gl;\n        if (this._glyphs.needsUpdate) { // auto keep glyphs up to date\n            this._uploadGlyphs();\n        }\n        else if (!this._renderRequested) {\n            return;\n        }\n        this._renderRequested = false;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.style);\n        gl.bufferData(gl.ARRAY_BUFFER, this._data, gl.DYNAMIC_DRAW);\n        gl.drawArrays(gl.TRIANGLES, 0, this._width * this._height * VERTICES_PER_TILE);\n    }\n}\n","export class Glyphs {\n    constructor(opts = {}) {\n        this._tileWidth = 12;\n        this._tileHeight = 16;\n        this.needsUpdate = true;\n        this._map = {};\n        opts.font = opts.font || 'monospace';\n        this._node = document.createElement('canvas');\n        this._ctx = this.node.getContext('2d');\n        this._configure(opts);\n    }\n    static fromImage(src) {\n        if (typeof src === 'string') {\n            if (src.startsWith('data:'))\n                throw new Error('Glyph: You must load a data string into an image element and use that.');\n            const el = document.getElementById(src);\n            if (!el)\n                throw new Error('Glyph: Failed to find image element with id:' + src);\n            src = el;\n        }\n        const glyph = new this({ tileWidth: src.width / 16, tileHeight: src.height / 16 });\n        glyph._ctx.drawImage(src, 0, 0);\n        return glyph;\n    }\n    static fromFont(src) {\n        if (typeof src === 'string') {\n            src = { font: src };\n        }\n        const glyphs = new this(src);\n        const basicOnly = src.basicOnly || src.basic || false;\n        glyphs._initGlyphs(basicOnly);\n        return glyphs;\n    }\n    get node() { return this._node; }\n    get tileWidth() { return this._tileWidth; }\n    get tileHeight() { return this._tileHeight; }\n    get pxWidth() { return this._node.width; }\n    get pxHeight() { return this._node.height; }\n    forChar(ch) {\n        if (ch === null || ch === undefined)\n            return -1;\n        return this._map[ch] || -1;\n    }\n    _configure(opts) {\n        this._tileWidth = opts.tileWidth || this.tileWidth;\n        this._tileHeight = opts.tileHeight || this.tileHeight;\n        this.node.width = 16 * this.tileWidth;\n        this.node.height = 16 * this.tileHeight;\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(0, 0, this.pxWidth, this.pxHeight);\n        const size = opts.fontSize || opts.size || Math.max(this.tileWidth, this.tileHeight);\n        this._ctx.font = '' + size + 'px ' + opts.font;\n        this._ctx.textAlign = 'center';\n        this._ctx.textBaseline = 'middle';\n        this._ctx.fillStyle = 'white';\n    }\n    draw(n, ch) {\n        if (n > 256)\n            throw new Error('Cannot draw more than 256 glyphs.');\n        const x = (n % 16) * this.tileWidth;\n        const y = Math.floor(n / 16) * this.tileHeight;\n        const cx = x + Math.floor(this.tileWidth / 2);\n        const cy = y + Math.floor(this.tileHeight / 2);\n        this._ctx.save();\n        this._ctx.beginPath();\n        this._ctx.rect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.clip();\n        if (typeof ch === 'function') {\n            ch(this._ctx, x, y, this.tileWidth, this.tileHeight);\n        }\n        else {\n            if (this._map[ch] === undefined)\n                this._map[ch] = n;\n            this._ctx.fillText(ch, cx, cy);\n        }\n        this._ctx.restore();\n        this.needsUpdate = true;\n    }\n    _initGlyphs(basicOnly = false) {\n        for (let i = 32; i < 127; ++i) {\n            this.draw(i, String.fromCharCode(i));\n        }\n        if (!basicOnly) {\n            [' ', '\\u263a', '\\u263b', '\\u2665', '\\u2666', '\\u2663', '\\u2660', '\\u263c',\n                '\\u2600', '\\u2605', '\\u2606', '\\u2642', '\\u2640', '\\u266a', '\\u266b', '\\u2638',\n                '\\u25b6', '\\u25c0', '\\u2195', '\\u203c', '\\u204b', '\\u262f', '\\u2318', '\\u2616',\n                '\\u2191', '\\u2193', '\\u2192', '\\u2190', '\\u2126', '\\u2194', '\\u25b2', '\\u25bc',\n            ].forEach((ch, i) => {\n                this.draw(i, ch);\n            });\n            // [\n            // '\\u2302',\n            // '\\u2b09', '\\u272a', '\\u2718', '\\u2610', '\\u2611', '\\u25ef', '\\u25ce', '\\u2690',\n            // '\\u2691', '\\u2598', '\\u2596', '\\u259d', '\\u2597', '\\u2744', '\\u272d', '\\u2727',\n            // '\\u25e3', '\\u25e4', '\\u25e2', '\\u25e5', '\\u25a8', '\\u25a7', '\\u259a', '\\u265f',\n            // '\\u265c', '\\u265e', '\\u265d', '\\u265b', '\\u265a', '\\u301c', '\\u2694', '\\u2692',\n            // '\\u25b6', '\\u25bc', '\\u25c0', '\\u25b2', '\\u25a4', '\\u25a5', '\\u25a6', '\\u257a',\n            // '\\u257b', '\\u2578', '\\u2579', '\\u2581', '\\u2594', '\\u258f', '\\u2595', '\\u272d',\n            // '\\u2591', '\\u2592', '\\u2593', '\\u2503', '\\u252b', '\\u2561', '\\u2562', '\\u2556',\n            // '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255d', '\\u255c', '\\u255b', '\\u2513',\n            // '\\u2517', '\\u253b', '\\u2533', '\\u2523', '\\u2501', '\\u254b', '\\u255e', '\\u255f',\n            // '\\u255a', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256c', '\\u2567',\n            // '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256b',\n            // '\\u256a', '\\u251b', '\\u250f', '\\u2588', '\\u2585', '\\u258c', '\\u2590', '\\u2580',\n            // '\\u03b1', '\\u03b2', '\\u0393', '\\u03c0', '\\u03a3', '\\u03c3', '\\u03bc', '\\u03c4',\n            // '\\u03a6', '\\u03b8', '\\u03a9', '\\u03b4', '\\u221e', '\\u03b8', '\\u03b5', '\\u03b7',\n            // '\\u039e', '\\u00b1', '\\u2265', '\\u2264', '\\u2234', '\\u2237', '\\u00f7', '\\u2248',\n            // '\\u22c4', '\\u22c5', '\\u2217', '\\u27b5', '\\u2620', '\\u2625', '\\u25fc', '\\u25fb'\n            // ].forEach( (ch, i) => {\n            //   this.draw(i + 127, ch); \n            // });\n            ['\\u2302',\n                '\\u00C7', '\\u00FC', '\\u00E9', '\\u00E2', '\\u00E4', '\\u00E0', '\\u00E5', '\\u00E7',\n                '\\u00EA', '\\u00EB', '\\u00E8', '\\u00EF', '\\u00EE', '\\u00EC', '\\u00C4', '\\u00C5',\n                '\\u00C9', '\\u00E6', '\\u00C6', '\\u00F4', '\\u00F6', '\\u00F2', '\\u00FB', '\\u00F9',\n                '\\u00FF', '\\u00D6', '\\u00DC', '\\u00A2', '\\u00A3', '\\u00A5', '\\u20A7', '\\u0192',\n                '\\u00E1', '\\u00ED', '\\u00F3', '\\u00FA', '\\u00F1', '\\u00D1', '\\u00AA', '\\u00BA',\n                '\\u00BF', '\\u2310', '\\u00AC', '\\u00BD', '\\u00BC', '\\u00A1', '\\u00AB', '\\u00BB',\n                '\\u2591', '\\u2592', '\\u2593', '\\u2502', '\\u2524', '\\u2561', '\\u2562', '\\u2556',\n                '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255D', '\\u255C', '\\u255B', '\\u2510',\n                '\\u2514', '\\u2534', '\\u252C', '\\u251C', '\\u2500', '\\u253C', '\\u255E', '\\u255F',\n                '\\u255A', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256C', '\\u2567',\n                '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256B',\n                '\\u256A', '\\u2518', '\\u250C', '\\u2588', '\\u2584', '\\u258C', '\\u2590', '\\u2580',\n                '\\u03B1', '\\u00DF', '\\u0393', '\\u03C0', '\\u03A3', '\\u03C3', '\\u00B5', '\\u03C4',\n                '\\u03A6', '\\u0398', '\\u03A9', '\\u03B4', '\\u221E', '\\u03C6', '\\u03B5', '\\u2229',\n                '\\u2261', '\\u00B1', '\\u2265', '\\u2264', '\\u2320', '\\u2321', '\\u00F7', '\\u2248',\n                '\\u00B0', '\\u2219', '\\u00B7', '\\u221A', '\\u207F', '\\u00B2', '\\u25A0', '\\u00A0'\n            ].forEach((ch, i) => {\n                this.draw(i + 127, ch);\n            });\n        }\n    }\n}\n","export var options = {\n    random: Math.random.bind(Math),\n    colorLookup: ((_) => null),\n};\nexport function configure(opts = {}) {\n    Object.assign(options, opts);\n}\n","import { options } from './config';\nfunction toColorInt(r = 0, g = 0, b = 0, base256 = false) {\n    if (base256) {\n        r = Math.max(0, Math.min(255, Math.round(r * 2.550001)));\n        g = Math.max(0, Math.min(255, Math.round(g * 2.550001)));\n        b = Math.max(0, Math.min(255, Math.round(b * 2.550001)));\n        return (r << 16) + (g << 8) + b;\n    }\n    r = Math.max(0, Math.min(15, Math.round(r / 100 * 15)));\n    g = Math.max(0, Math.min(15, Math.round(g / 100 * 15)));\n    b = Math.max(0, Math.min(15, Math.round(b / 100 * 15)));\n    return (r << 8) + (g << 4) + b;\n}\nexport class Color extends Int16Array {\n    static fromArray(vals, base256 = false) {\n        while (vals.length < 3)\n            vals.push(0);\n        if (base256) {\n            for (let i = 0; i < 7; ++i) {\n                vals[i] = Math.round((vals[i] || 0) * 100 / 255);\n            }\n        }\n        return new this(...vals);\n    }\n    static fromCss(css) {\n        if (!css.startsWith('#')) {\n            throw new Error('Color CSS strings must be of form \"#abc\" or \"#abcdef\" - received: [' + css + ']');\n        }\n        const c = Number.parseInt(css.substring(1), 16);\n        let r, g, b;\n        if (css.length == 4) {\n            r = Math.round((c >> 8) / 15 * 100);\n            g = Math.round(((c & 0xF0) >> 4) / 15 * 100);\n            b = Math.round((c & 0xF) / 15 * 100);\n        }\n        else {\n            r = Math.round((c >> 16) / 255 * 100);\n            g = Math.round(((c & 0xFF00) >> 8) / 255 * 100);\n            b = Math.round((c & 0xFF) / 255 * 100);\n        }\n        return new this(r, g, b);\n    }\n    static fromNumber(val, base256 = false) {\n        const c = new this();\n        for (let i = 0; i < c.length; ++i) {\n            c[i] = 0;\n        }\n        if (val < 0) {\n            c._r = -1;\n        }\n        else if (base256 || (val > 0xFFF)) {\n            c._r = Math.round(((val & 0xFF0000) >> 16) * 100 / 255);\n            c._g = Math.round(((val & 0xFF00) >> 8) * 100 / 255);\n            c._b = Math.round((val & 0xFF) * 100 / 255);\n        }\n        else {\n            c._r = Math.round(((val & 0xF00) >> 8) * 100 / 15);\n            c._g = Math.round(((val & 0xF0) >> 4) * 100 / 15);\n            c._b = Math.round((val & 0xF) * 100 / 15);\n        }\n        return c;\n    }\n    static make(arg, base256 = false) {\n        if ((arg === undefined) || (arg === null))\n            return new this(-1);\n        if (arg instanceof Color) {\n            return arg.clone();\n        }\n        if (typeof arg === 'string') {\n            const l = options.colorLookup(arg);\n            if (l)\n                return l.clone();\n            return this.fromCss(arg);\n        }\n        else if (Array.isArray(arg)) {\n            return this.fromArray(arg, base256);\n        }\n        else if (typeof arg === 'number') {\n            if (arg < 0)\n                return new this(-1);\n            return this.fromNumber(arg, base256);\n        }\n        throw new Error('Failed to make color - unknown argument: ' + JSON.stringify(arg));\n    }\n    static from(...args) {\n        const arg = args[0];\n        if (arg instanceof Color)\n            return arg;\n        if (arg < 0)\n            return new this(-1);\n        if (typeof arg === 'string') {\n            const l = options.colorLookup(arg);\n            if (l)\n                return l;\n        }\n        return this.make(arg, args[1]);\n    }\n    constructor(r = -1, g = 0, b = 0, rand = 0, redRand = 0, greenRand = 0, blueRand = 0) {\n        super(7);\n        this.set([r, g, b, rand, redRand, greenRand, blueRand]);\n    }\n    get r() { return Math.round(this[0] * 2.550001); }\n    get _r() { return this[0]; }\n    set _r(v) { this[0] = v; }\n    get g() { return Math.round(this[1] * 2.550001); }\n    get _g() { return this[1]; }\n    set _g(v) { this[1] = v; }\n    get b() { return Math.round(this[2] * 2.550001); }\n    get _b() { return this[2]; }\n    set _b(v) { this[2] = v; }\n    get _rand() { return this[3]; }\n    get _redRand() { return this[4]; }\n    get _greenRand() { return this[5]; }\n    get _blueRand() { return this[6]; }\n    // luminosity (0-100)\n    get l() {\n        return Math.round(0.5 * (Math.min(this._r, this._g, this._b) + Math.max(this._r, this._g, this._b)));\n    }\n    // saturation (0-100)\n    get s() {\n        if (this.l >= 100)\n            return 0;\n        return Math.round((Math.max(this._r, this._g, this._b) - Math.min(this._r, this._g, this._b)) * (100 - Math.abs(this.l * 2 - 100)) / 100);\n    }\n    // hue (0-360)\n    get h() {\n        let H = 0;\n        let R = this.r;\n        let G = this.g;\n        let B = this.b;\n        if (R >= G && G >= B) {\n            H = 60 * ((G - B) / (R - B));\n        }\n        else if (G > R && R >= B) {\n            H = 60 * (2 - (R - B) / (G - B));\n        }\n        else if (G >= B && B > R) {\n            H = 60 * (2 + (B - R) / (G - R));\n        }\n        else if (B > G && G > R) {\n            H = 60 * (4 - (G - R) / (B - R));\n        }\n        else if (B > R && R >= G) {\n            H = 60 * (4 + (R - G) / (B - G));\n        }\n        else {\n            H = 60 * (6 - (B - G) / (R - G));\n        }\n        return Math.round(H);\n    }\n    isNull() { return this._r < 0; }\n    equals(other) {\n        if (typeof other === 'string') {\n            return (other.length > 4) ? (this.toString(true) == other) : (this.toString() == other);\n        }\n        else if (typeof other === 'number') {\n            return (this.toInt() == other) || (this.toInt(true) == other);\n        }\n        const O = Color.from(other);\n        if (this.isNull())\n            return O.isNull();\n        return this.every((v, i) => {\n            return v == (O[i] || 0);\n        });\n    }\n    copy(other) {\n        if (Array.isArray(other)) {\n            this.set(other);\n        }\n        else {\n            const O = Color.from(other);\n            this.set(O);\n        }\n        return this;\n    }\n    _changed() {\n        return this;\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor();\n        other.copy(this);\n        return other;\n    }\n    assign(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = (arguments[i] || 0);\n        }\n        return this;\n    }\n    assignRGB(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((arguments[i] || 0) / 2.55);\n        }\n        return this;\n    }\n    nullify() {\n        this[0] = -1;\n        return this;\n    }\n    blackOut() {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = 0;\n        }\n        return this;\n    }\n    toInt(base256 = false) {\n        if (this.isNull())\n            return -1;\n        return toColorInt(this._r, this._g, this._b, base256);\n    }\n    clamp() {\n        if (this.isNull())\n            return this;\n        this._r = Math.min(100, Math.max(0, this._r));\n        this._g = Math.min(100, Math.max(0, this._g));\n        this._b = Math.min(100, Math.max(0, this._b));\n        return this._changed();\n    }\n    mix(other, percent) {\n        const O = Color.from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        percent = Math.min(100, Math.max(0, percent));\n        const keepPct = 100 - percent;\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round(((this[i] * keepPct) + (O[i] * percent)) / 100);\n        }\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    lighten(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round(((this[i] * keepPct) + (100 * percent)) / 100);\n        }\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    darken(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round(((this[i] * keepPct) + (0 * percent)) / 100);\n        }\n        return this._changed();\n    }\n    bake() {\n        if (this.isNull())\n            return this;\n        const d = this;\n        if (d[3] + d[4] + d[5] + d[6]) {\n            const rand = this._rand ? Math.floor(options.random() * this._rand) : 0;\n            const redRand = this._redRand ? Math.floor(options.random() * this._redRand) : 0;\n            const greenRand = this._greenRand ? Math.floor(options.random() * this._greenRand) : 0;\n            const blueRand = this._blueRand ? Math.floor(options.random() * this._blueRand) : 0;\n            this._r += (rand + redRand);\n            this._g += (rand + greenRand);\n            this._b += (rand + blueRand);\n            for (let i = 3; i < this.length; ++i) {\n                this[i] = 0;\n            }\n            return this._changed();\n        }\n        return this;\n    }\n    // Adds a color to this one\n    add(other, percent = 100) {\n        const O = Color.from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] += Math.round(O[i] * percent / 100);\n        }\n        return this._changed();\n    }\n    scale(percent) {\n        if (this.isNull() || percent == 100)\n            return this;\n        percent = Math.max(0, percent);\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round(this[i] * percent / 100);\n        }\n        return this._changed();\n    }\n    multiply(other) {\n        if (this.isNull())\n            return this;\n        let data = other;\n        if (!Array.isArray(other)) {\n            if (other.isNull())\n                return this;\n            data = other;\n        }\n        const len = Math.max(3, Math.min(this.length, data.length));\n        for (let i = 0; i < len; ++i) {\n            this[i] = Math.round(this[i] * (data[i] || 0) / 100);\n        }\n        return this._changed();\n    }\n    // scales rgb down to a max of 100\n    normalize() {\n        if (this.isNull())\n            return this;\n        const max = Math.max(this._r, this._g, this._b);\n        if (max <= 100)\n            return this;\n        this._r = Math.round(100 * this._r / max);\n        this._g = Math.round(100 * this._g / max);\n        this._b = Math.round(100 * this._b / max);\n        return this._changed();\n    }\n    css(base256 = false) {\n        const d = this;\n        let v = 0;\n        if (d[3] + d[4] + d[5] + d[6]) {\n            const rand = this._rand ? Math.floor(options.random() * this._rand) : 0;\n            const redRand = this._redRand ? Math.floor(options.random() * this._redRand) : 0;\n            const greenRand = this._greenRand ? Math.floor(options.random() * this._greenRand) : 0;\n            const blueRand = this._blueRand ? Math.floor(options.random() * this._blueRand) : 0;\n            const red = (this._r + rand + redRand);\n            const green = (this._g + rand + greenRand);\n            const blue = (this._b + rand + blueRand);\n            v = toColorInt(red, green, blue, base256);\n        }\n        else {\n            v = this.toInt(base256);\n        }\n        return '#' + v.toString(16).padStart(base256 ? 6 : 3, '0');\n    }\n    toString(base256 = false) {\n        if (this.isNull())\n            return 'null color';\n        return '#' + this.toInt(base256).toString(16).padStart(base256 ? 6 : 3, '0');\n    }\n    // adjusts the luminosity of 2 colors to ensure there is enough separation between them\n    static separate(a, b) {\n        if (a.isNull() || b.isNull())\n            return;\n        const A = a.clone().clamp();\n        const B = b.clone().clamp();\n        // console.log('separate');\n        // console.log('- a=%s, h=%d, s=%d, l=%d', A.toString(), A.h, A.s, A.l);\n        // console.log('- b=%s, h=%d, s=%d, l=%d', B.toString(), B.h, B.s, B.l);\n        let hDiff = Math.abs(A.h - B.h);\n        if (hDiff > 180) {\n            hDiff = 360 - hDiff;\n        }\n        if (hDiff > 45)\n            return; // colors are far enough apart in hue to be distinct\n        const dist = 40;\n        if (Math.abs(A.l - B.l) >= dist)\n            return;\n        // Get them sorted by saturation ( we will darken the more saturated color and lighten the other)\n        const [lo, hi] = [A, B].sort((a, b) => a.s - b.s);\n        // console.log('- lo=%s, hi=%s', lo.toString(), hi.toString());\n        while ((hi.l - lo.l) < dist) {\n            hi.mix(WHITE, 5);\n            lo.mix(BLACK, 5);\n        }\n        a.copy(A);\n        b.copy(B);\n        // console.log('=>', a.toString(), b.toString());\n    }\n}\nconst BLACK = new Color(0, 0, 0);\nconst WHITE = new Color(100, 100, 100);\n","import { Color } from './color';\n;\nexport class DataBuffer {\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n        this._data = new Uint32Array(width * height);\n    }\n    get data() { return this._data; }\n    get width() { return this._width; }\n    get height() { return this._height; }\n    get(x, y) {\n        let index = y * this.width + x;\n        const style = this._data[index] || 0;\n        const glyph = (style >> 24);\n        const bg = (style >> 12) & 0xFFF;\n        const fg = (style & 0xFFF);\n        return { glyph, fg, bg };\n    }\n    _toGlyph(ch) {\n        if (ch === null || ch === undefined)\n            return -1;\n        return ch.charCodeAt(0);\n    }\n    draw(x, y, glyph = -1, fg = -1, bg = -1) {\n        let index = y * this.width + x;\n        const current = this._data[index] || 0;\n        if (typeof glyph !== 'number') {\n            glyph = this._toGlyph(glyph);\n        }\n        if (typeof fg !== 'number') {\n            fg = Color.from(fg).toInt();\n        }\n        if (typeof bg !== 'number') {\n            bg = Color.from(bg).toInt();\n        }\n        glyph = (glyph >= 0) ? (glyph & 0xFF) : (current >> 24);\n        bg = (bg >= 0) ? (bg & 0xFFF) : ((current >> 12) & 0xFFF);\n        fg = (fg >= 0) ? (fg & 0xFFF) : (current & 0xFFF);\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data[index] = style;\n        return this;\n    }\n    // This is without opacity - opacity must be done in Mixer\n    drawSprite(x, y, sprite) {\n        const glyph = sprite.ch ? sprite.ch : sprite.glyph;\n        // const fg = sprite.fg ? sprite.fg.toInt() : -1;\n        // const bg = sprite.bg ? sprite.bg.toInt() : -1;\n        return this.draw(x, y, glyph, sprite.fg, sprite.bg);\n    }\n    blackOut(x, y) {\n        if (arguments.length == 0) {\n            return this.fill(0, 0, 0);\n        }\n        return this.draw(x, y, 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xFFF, bg = 0) {\n        if (typeof glyph == 'string') {\n            glyph = this._toGlyph(glyph);\n        }\n        glyph = glyph & 0xFF;\n        fg = fg & 0xFFF;\n        bg = bg & 0xFFF;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data.fill(style);\n        return this;\n    }\n    copy(other) {\n        this._data.set(other._data);\n        return this;\n    }\n}\nexport class Buffer extends DataBuffer {\n    constructor(canvas) {\n        super(canvas.width, canvas.height);\n        this._canvas = canvas;\n        canvas.copyTo(this);\n    }\n    // get canvas() { return this._canvas; }\n    _toGlyph(ch) {\n        return this._canvas.glyphs.forChar(ch);\n    }\n    render() {\n        this._canvas.copy(this);\n        return this;\n    }\n    copyFromCanvas() {\n        this._canvas.copyTo(this);\n        return this;\n    }\n}\n","import { Color } from './color';\nexport class Mixer {\n    constructor() {\n        this.ch = -1;\n        this.fg = new Color();\n        this.bg = new Color();\n    }\n    _changed() {\n        return this;\n    }\n    copy(other) {\n        this.ch = other.ch;\n        this.fg.copy(other.fg);\n        this.bg.copy(other.bg);\n        return this._changed();\n    }\n    clone() {\n        const other = new Mixer();\n        other.copy(this);\n        return other;\n    }\n    nullify() {\n        this.ch = -1;\n        this.fg.nullify();\n        this.bg.nullify();\n        return this._changed();\n    }\n    blackOut() {\n        this.ch = 0;\n        this.fg.blackOut();\n        this.bg.blackOut();\n        return this._changed();\n    }\n    draw(ch = -1, fg = -1, bg = -1) {\n        if (ch && (ch !== -1)) {\n            this.ch = ch;\n        }\n        if ((fg !== -1) && (fg !== null)) {\n            fg = Color.from(fg);\n            this.fg.copy(fg);\n        }\n        if ((bg !== -1) && (bg !== null)) {\n            bg = Color.from(bg);\n            this.bg.copy(bg);\n        }\n        return this._changed();\n    }\n    drawSprite(info, opacity) {\n        if (opacity === undefined)\n            opacity = info.opacity;\n        if (opacity === undefined)\n            opacity = 100;\n        if (opacity <= 0)\n            return;\n        if (info.ch)\n            this.ch = info.ch;\n        else if (info.glyph !== undefined)\n            this.ch = info.glyph;\n        if (info.fg)\n            this.fg.mix(info.fg, opacity);\n        if (info.bg)\n            this.bg.mix(info.bg, opacity);\n        return this._changed();\n    }\n    invert() {\n        [this.bg, this.fg] = [this.fg, this.bg];\n        return this._changed();\n    }\n    multiply(color, fg = true, bg = true) {\n        color = Color.from(color);\n        if (fg) {\n            this.fg.multiply(color);\n        }\n        if (bg) {\n            this.bg.multiply(color);\n        }\n        return this._changed();\n    }\n    mix(color, fg = 50, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.mix(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.mix(color, bg);\n        }\n        return this._changed();\n    }\n    add(color, fg = 100, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.add(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.add(color, bg);\n        }\n        return this._changed();\n    }\n    separate() {\n        Color.separate(this.fg, this.bg);\n        return this._changed();\n    }\n    bake() {\n        this.fg.bake();\n        this.bg.bake();\n        this._changed();\n        return {\n            ch: this.ch,\n            fg: this.fg.toInt(),\n            bg: this.bg.toInt(),\n        };\n    }\n}\n","import { Canvas } from \"./canvas\";\nimport { Glyphs } from \"./glyphs\";\nimport { Buffer, DataBuffer } from './buffer';\nimport { Color } from './color';\nimport { Mixer } from './mixer';\nimport { configure } from './config';\nfunction withImage(image) {\n    let opts = {};\n    if (typeof image === 'string') {\n        opts.glyphs = Glyphs.fromImage(image);\n    }\n    else if (image instanceof HTMLImageElement) {\n        opts.glyphs = Glyphs.fromImage(image);\n    }\n    else {\n        if (!image.image)\n            throw new Error('You must supply the image.');\n        Object.assign(opts, image);\n        opts.glyphs = Glyphs.fromImage(image.image);\n    }\n    return new Canvas(opts);\n}\nfunction withFont(src) {\n    if (typeof src === 'string') {\n        src = { font: src };\n    }\n    src.glyphs = Glyphs.fromFont(src);\n    return new Canvas(src);\n}\nexport { Canvas, Glyphs, Buffer, DataBuffer, Color, Mixer, withImage, withFont, configure, };\n"],"names":["QUAD","VS","trim","FS","NotSupportedError","Error","[object Object]","params","super","captureStackTrace","this","name","Canvas","options","_data","Uint32Array","_renderRequested","_autoRender","_width","_height","glyphs","_node","_createNode","_createContext","_configure","node","width","height","tileWidth","_glyphs","tileHeight","pxWidth","clientWidth","pxHeight","clientHeight","_setGlyphs","document","createElement","render","div","el","getElementById","console","warn","appendChild","resize","x","y","glyph","fg","bg","style","_set","requestAnimationFrame","index","_requestRender","buffer","set","data","Math","floor","gl","getContext","_gl","_buffers","_attribs","_uniforms","p","sources","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","forEach","type","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaders.VS","shaders.FS","useProgram","attributeCount","ACTIVE_ATTRIBUTES","i","enableVertexAttribArray","info","getActiveAttrib","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","uniform1i","_texture","t","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","position","deleteBuffer","uv","buffers","attribs","tileCount","positionData","Uint16Array","length","uvData","Uint8Array","value","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribIPointer","UNSIGNED_SHORT","bufferData","STATIC_DRAW","UNSIGNED_BYTE","createGeometry","Object","assign","UNSIGNED_INT","uniforms","uniform2uiv","_uploadGlyphs","needsUpdate","activeTexture","TEXTURE0","texImage2D","RGBA","viewport","uniform2ui","_createGeometry","_createData","n","dest","DYNAMIC_DRAW","drawArrays","TRIANGLES","Glyphs","opts","_tileWidth","_tileHeight","_map","font","_ctx","src","startsWith","drawImage","basicOnly","basic","_initGlyphs","ch","fillStyle","fillRect","size","fontSize","max","textAlign","textBaseline","cx","cy","save","beginPath","rect","clip","undefined","fillText","restore","draw","String","fromCharCode","random","bind","colorLookup","_","toColorInt","r","g","b","base256","min","round","Color","Int16Array","vals","push","css","c","Number","parseInt","substring","val","_r","_g","_b","arg","clone","l","fromCss","Array","isArray","fromArray","fromNumber","JSON","stringify","args","make","rand","redRand","greenRand","blueRand","v","_rand","_redRand","_greenRand","_blueRand","s","abs","h","H","R","G","B","other","toString","toInt","O","from","isNull","every","constructor","copy","arguments","_changed","percent","blackOut","keepPct","d","len","padStart","a","A","clamp","hDiff","lo","hi","sort","mix","WHITE","BLACK","DataBuffer","charCodeAt","current","_toGlyph","sprite","fill","Mixer","nullify","opacity","color","multiply","add","separate","bake","canvas","_canvas","copyTo","forChar","image","fromImage","HTMLImageElement","fromFont"],"mappings":"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"}