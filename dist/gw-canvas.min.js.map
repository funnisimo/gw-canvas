{"version":3,"file":"gw-canvas.min.js","sources":["../js/utils.js","../js/shaders.js","../js/canvas.js","../js/glyphs.js","../js/config.js","../js/color.js","../js/buffer.js","../js/mixer.js","../js/index.js"],"sourcesContent":["// Copy of: https://github.com/ondras/fastiles/blob/master/ts/utils.ts (v2.1.0)\nexport const QUAD = [\n    0, 0, 1, 0, 0, 1,\n    0, 1, 1, 0, 1, 1\n];\nexport function createProgram(gl, ...sources) {\n    const p = gl.createProgram();\n    [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER].forEach((type, index) => {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sources[index]);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(shader));\n        }\n        gl.attachShader(p, shader);\n    });\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p));\n    }\n    return p;\n}\nexport function createTexture(gl) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    return t;\n}\nexport function createGeometry(gl, attribs, width, height) {\n    let tileCount = width * height;\n    let positionData = new Uint16Array(tileCount * QUAD.length);\n    let uvData = new Uint8Array(tileCount * QUAD.length);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            QUAD.forEach(value => {\n                positionData[i] = (i % 2 ? y : x) + value;\n                uvData[i] = value;\n                i++;\n            });\n        }\n    }\n    const position = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, position);\n    gl.vertexAttribIPointer(attribs[\"position\"], 2, gl.UNSIGNED_SHORT, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, positionData, gl.STATIC_DRAW);\n    const uv = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uv);\n    gl.vertexAttribIPointer(attribs[\"uv\"], 2, gl.UNSIGNED_BYTE, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, uvData, gl.STATIC_DRAW);\n    return { position, uv };\n}\n","// Based on: https://github.com/ondras/fastiles/blob/master/ts/shaders.ts (v2.1.0)\nexport const VS = `\n#version 300 es\nin uvec2 position;\nin uvec2 uv;\nin uint style;\nout vec2 fsUv;\nflat out uint fsStyle;\nuniform highp uvec2 tileSize;\nuniform uvec2 viewportSize;\nvoid main() {\n\tivec2 positionPx = ivec2(position * tileSize);\n\tvec2 positionNdc = (vec2(positionPx * 2) / vec2(viewportSize))-1.0;\n\tpositionNdc.y *= -1.0;\n\tgl_Position = vec4(positionNdc, 0.0, 1.0);\n\tfsUv = vec2(uv);\n\tfsStyle = style;\n}`.trim();\nexport const FS = `\n#version 300 es\nprecision highp float;\nin vec2 fsUv;\nflat in uint fsStyle;\nout vec4 fragColor;\nuniform sampler2D font;\nuniform highp uvec2 tileSize;\nvoid main() {\n\tuvec2 fontTiles = uvec2(textureSize(font, 0)) / tileSize;\n\n\tuint glyph = (fsStyle & uint(0xFF000000)) >> 24;\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tuvec2 fontPosition = uvec2(glyphX, glyphY);\n\n\tuvec2 fontPx = (tileSize * fontPosition) + uvec2(vec2(tileSize) * fsUv);\n\tvec3 texel = texelFetch(font, ivec2(fontPx), 0).rgb;\n\n\tfloat s = 15.0;\n\tuint fr = (fsStyle & uint(0xF00)) >> 8;\n\tuint fg = (fsStyle & uint(0x0F0)) >> 4;\n\tuint fb = (fsStyle & uint(0x00F)) >> 0;\n\tvec3 fgRgb = vec3(fr, fg, fb) / s;\n  \n\tuint br = (fsStyle & uint(0xF00000)) >> 20;\n\tuint bg = (fsStyle & uint(0x0F0000)) >> 16;\n\tuint bb = (fsStyle & uint(0x00F000)) >> 12;\n\tvec3 bgRgb = vec3(br, bg, bb) / s;\n  \n\tfragColor = vec4(mix(bgRgb, fgRgb, texel), 1.0);\n}`.trim();\n","// Based on: https://github.com/ondras/fastiles/blob/master/ts/scene.ts (v2.1.0)\nimport { createProgram, createTexture, createGeometry } from \"./utils\";\nimport * as shaders from \"./shaders\";\nconst VERTICES_PER_TILE = 6;\nexport class BaseCanvas {\n    constructor(options) {\n        this._data = new Uint32Array();\n        this._renderRequested = false;\n        this._autoRender = true;\n        this._width = 50;\n        this._height = 25;\n        if (!options.glyphs)\n            throw new Error('You must supply glyphs for the canvas.');\n        this._node = this._initNode(options.node);\n        this._initContext();\n        this._configure(options);\n    }\n    get node() { return this._node; }\n    get width() { return this._width; }\n    get height() { return this._height; }\n    get tileWidth() { return this._glyphs.tileWidth; }\n    get tileHeight() { return this._glyphs.tileHeight; }\n    get pxWidth() { return this.node.clientWidth; }\n    get pxHeight() { return this.node.clientHeight; }\n    get glyphs() { return this._glyphs; }\n    set glyphs(glyphs) {\n        this._setGlyphs(glyphs);\n    }\n    _initNode(node) {\n        if (!node) {\n            node = document.createElement(\"canvas\");\n        }\n        else if (typeof node === 'string') {\n            const el = document.getElementById(node);\n            if (!el)\n                throw new Error('Failed to find element with id:' + node);\n            if (!(el instanceof HTMLCanvasElement)) {\n                node = document.createElement('canvas');\n                el.appendChild(node);\n            }\n            else {\n                node = el;\n            }\n        }\n        return node;\n    }\n    _configure(options) {\n        this._width = options.width || this._width;\n        this._height = options.height || this._height;\n        this._autoRender = (options.render !== false);\n        this._setGlyphs(options.glyphs);\n    }\n    _setGlyphs(glyphs) {\n        if (glyphs === this._glyphs)\n            return false;\n        this._glyphs = glyphs;\n        this.resize(this._width, this._height);\n        return true;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        const node = this.node;\n        node.width = this._width * this.tileWidth;\n        node.height = this._height * this.tileHeight;\n    }\n    draw(x, y, glyph, fg, bg) {\n        glyph = glyph & 0xFF;\n        bg = bg & 0xFFF;\n        fg = fg & 0xFFF;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._set(x, y, style);\n    }\n    _requestRender() {\n        if (this._renderRequested)\n            return;\n        this._renderRequested = true;\n        if (!this._autoRender)\n            return;\n        requestAnimationFrame(() => this.render());\n    }\n    _set(x, y, style) {\n        let index = y * this.width + x;\n        const current = this._data[index];\n        if (current !== style) {\n            this._data[index] = style;\n            this._requestRender();\n        }\n    }\n    copy(buffer) {\n        this._data.set(buffer.data);\n        this._requestRender();\n    }\n    copyTo(buffer) {\n        buffer.data.set(this._data);\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    toX(x) {\n        return Math.floor(this.width * x / this.node.clientWidth);\n    }\n    toY(y) {\n        return Math.floor(this.height * y / this.node.clientHeight);\n    }\n}\nexport class Canvas extends BaseCanvas {\n    constructor(options) {\n        super(options);\n    }\n    _initContext() {\n        let gl = this.node.getContext(\"webgl2\");\n        if (!gl) {\n            throw new Error(\"WebGL 2 not supported\");\n        }\n        this._gl = gl;\n        this._buffers = {};\n        this._attribs = {};\n        this._uniforms = {};\n        const p = createProgram(gl, shaders.VS, shaders.FS);\n        gl.useProgram(p);\n        const attributeCount = gl.getProgramParameter(p, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            gl.enableVertexAttribArray(i);\n            let info = gl.getActiveAttrib(p, i);\n            this._attribs[info.name] = i;\n        }\n        const uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(p, i);\n            this._uniforms[info.name] = gl.getUniformLocation(p, info.name);\n        }\n        gl.uniform1i(this._uniforms[\"font\"], 0);\n        this._texture = createTexture(gl);\n    }\n    _createGeometry() {\n        const gl = this._gl;\n        this._buffers.position && gl.deleteBuffer(this._buffers.position);\n        this._buffers.uv && gl.deleteBuffer(this._buffers.uv);\n        let buffers = createGeometry(gl, this._attribs, this.width, this.height);\n        Object.assign(this._buffers, buffers);\n    }\n    _createData() {\n        const gl = this._gl;\n        const attribs = this._attribs;\n        const tileCount = this.width * this.height;\n        this._buffers.style && gl.deleteBuffer(this._buffers.style);\n        this._data = new Uint32Array(tileCount * VERTICES_PER_TILE);\n        const style = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, style);\n        gl.vertexAttribIPointer(attribs[\"style\"], 1, gl.UNSIGNED_INT, 0, 0);\n        Object.assign(this._buffers, { style });\n    }\n    _setGlyphs(glyphs) {\n        if (!super._setGlyphs(glyphs))\n            return false;\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.uniform2uiv(uniforms[\"tileSize\"], [this.tileWidth, this.tileHeight]);\n        this._uploadGlyphs();\n        return true;\n    }\n    _uploadGlyphs() {\n        if (!this._glyphs.needsUpdate)\n            return;\n        const gl = this._gl;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._glyphs.node);\n        this._requestRender();\n        this._glyphs.needsUpdate = false;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.viewport(0, 0, this.node.width, this.node.height);\n        gl.uniform2ui(uniforms[\"viewportSize\"], this.node.width, this.node.height);\n        this._createGeometry();\n        this._createData();\n    }\n    _set(x, y, style) {\n        let index = y * this.width + x;\n        index *= VERTICES_PER_TILE;\n        const current = this._data[index + 2];\n        if (current !== style) {\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n            this._requestRender();\n        }\n    }\n    copy(buffer) {\n        buffer.data.forEach((style, i) => {\n            const index = i * VERTICES_PER_TILE;\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n        });\n        this._requestRender();\n    }\n    copyTo(buffer) {\n        const n = this.width * this.height;\n        const dest = buffer.data;\n        for (let i = 0; i < n; ++i) {\n            const index = i * VERTICES_PER_TILE;\n            dest[i] = this._data[index + 2];\n        }\n    }\n    render() {\n        const gl = this._gl;\n        if (this._glyphs.needsUpdate) { // auto keep glyphs up to date\n            this._uploadGlyphs();\n        }\n        else if (!this._renderRequested) {\n            return;\n        }\n        this._renderRequested = false;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.style);\n        gl.bufferData(gl.ARRAY_BUFFER, this._data, gl.DYNAMIC_DRAW);\n        gl.drawArrays(gl.TRIANGLES, 0, this._width * this._height * VERTICES_PER_TILE);\n    }\n}\n","export class Glyphs {\n    constructor(opts = {}) {\n        this._tileWidth = 12;\n        this._tileHeight = 16;\n        this.needsUpdate = true;\n        this._map = {};\n        opts.font = opts.font || 'monospace';\n        this._node = document.createElement('canvas');\n        this._ctx = this.node.getContext('2d');\n        this._configure(opts);\n    }\n    static fromImage(src) {\n        if (typeof src === 'string') {\n            if (src.startsWith('data:'))\n                throw new Error('Glyph: You must load a data string into an image element and use that.');\n            const el = document.getElementById(src);\n            if (!el)\n                throw new Error('Glyph: Failed to find image element with id:' + src);\n            src = el;\n        }\n        const glyph = new this({ tileWidth: src.width / 16, tileHeight: src.height / 16 });\n        glyph._ctx.drawImage(src, 0, 0);\n        return glyph;\n    }\n    static fromFont(src) {\n        if (typeof src === 'string') {\n            src = { font: src };\n        }\n        const glyphs = new this(src);\n        const basicOnly = src.basicOnly || src.basic || false;\n        glyphs._initGlyphs(basicOnly);\n        return glyphs;\n    }\n    get node() { return this._node; }\n    get tileWidth() { return this._tileWidth; }\n    get tileHeight() { return this._tileHeight; }\n    get pxWidth() { return this._node.width; }\n    get pxHeight() { return this._node.height; }\n    forChar(ch) {\n        if (ch === null || ch === undefined)\n            return -1;\n        return this._map[ch] || -1;\n    }\n    _configure(opts) {\n        this._tileWidth = opts.tileWidth || this.tileWidth;\n        this._tileHeight = opts.tileHeight || this.tileHeight;\n        this.node.width = 16 * this.tileWidth;\n        this.node.height = 16 * this.tileHeight;\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(0, 0, this.pxWidth, this.pxHeight);\n        const size = opts.fontSize || opts.size || Math.max(this.tileWidth, this.tileHeight);\n        this._ctx.font = '' + size + 'px ' + opts.font;\n        this._ctx.textAlign = 'center';\n        this._ctx.textBaseline = 'middle';\n        this._ctx.fillStyle = 'white';\n    }\n    draw(n, ch) {\n        if (n > 256)\n            throw new Error('Cannot draw more than 256 glyphs.');\n        const x = (n % 16) * this.tileWidth;\n        const y = Math.floor(n / 16) * this.tileHeight;\n        const cx = x + Math.floor(this.tileWidth / 2);\n        const cy = y + Math.floor(this.tileHeight / 2);\n        this._ctx.save();\n        this._ctx.beginPath();\n        this._ctx.rect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.clip();\n        if (typeof ch === 'function') {\n            ch(this._ctx, x, y, this.tileWidth, this.tileHeight);\n        }\n        else {\n            if (this._map[ch] === undefined)\n                this._map[ch] = n;\n            this._ctx.fillText(ch, cx, cy);\n        }\n        this._ctx.restore();\n        this.needsUpdate = true;\n    }\n    _initGlyphs(basicOnly = false) {\n        for (let i = 32; i < 127; ++i) {\n            this.draw(i, String.fromCharCode(i));\n        }\n        if (!basicOnly) {\n            [' ', '\\u263a', '\\u263b', '\\u2665', '\\u2666', '\\u2663', '\\u2660', '\\u263c',\n                '\\u2600', '\\u2605', '\\u2606', '\\u2642', '\\u2640', '\\u266a', '\\u266b', '\\u2638',\n                '\\u25b6', '\\u25c0', '\\u2195', '\\u203c', '\\u204b', '\\u262f', '\\u2318', '\\u2616',\n                '\\u2191', '\\u2193', '\\u2192', '\\u2190', '\\u2126', '\\u2194', '\\u25b2', '\\u25bc',\n            ].forEach((ch, i) => {\n                this.draw(i, ch);\n            });\n            // [\n            // '\\u2302',\n            // '\\u2b09', '\\u272a', '\\u2718', '\\u2610', '\\u2611', '\\u25ef', '\\u25ce', '\\u2690',\n            // '\\u2691', '\\u2598', '\\u2596', '\\u259d', '\\u2597', '\\u2744', '\\u272d', '\\u2727',\n            // '\\u25e3', '\\u25e4', '\\u25e2', '\\u25e5', '\\u25a8', '\\u25a7', '\\u259a', '\\u265f',\n            // '\\u265c', '\\u265e', '\\u265d', '\\u265b', '\\u265a', '\\u301c', '\\u2694', '\\u2692',\n            // '\\u25b6', '\\u25bc', '\\u25c0', '\\u25b2', '\\u25a4', '\\u25a5', '\\u25a6', '\\u257a',\n            // '\\u257b', '\\u2578', '\\u2579', '\\u2581', '\\u2594', '\\u258f', '\\u2595', '\\u272d',\n            // '\\u2591', '\\u2592', '\\u2593', '\\u2503', '\\u252b', '\\u2561', '\\u2562', '\\u2556',\n            // '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255d', '\\u255c', '\\u255b', '\\u2513',\n            // '\\u2517', '\\u253b', '\\u2533', '\\u2523', '\\u2501', '\\u254b', '\\u255e', '\\u255f',\n            // '\\u255a', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256c', '\\u2567',\n            // '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256b',\n            // '\\u256a', '\\u251b', '\\u250f', '\\u2588', '\\u2585', '\\u258c', '\\u2590', '\\u2580',\n            // '\\u03b1', '\\u03b2', '\\u0393', '\\u03c0', '\\u03a3', '\\u03c3', '\\u03bc', '\\u03c4',\n            // '\\u03a6', '\\u03b8', '\\u03a9', '\\u03b4', '\\u221e', '\\u03b8', '\\u03b5', '\\u03b7',\n            // '\\u039e', '\\u00b1', '\\u2265', '\\u2264', '\\u2234', '\\u2237', '\\u00f7', '\\u2248',\n            // '\\u22c4', '\\u22c5', '\\u2217', '\\u27b5', '\\u2620', '\\u2625', '\\u25fc', '\\u25fb'\n            // ].forEach( (ch, i) => {\n            //   this.draw(i + 127, ch); \n            // });\n            ['\\u2302',\n                '\\u00C7', '\\u00FC', '\\u00E9', '\\u00E2', '\\u00E4', '\\u00E0', '\\u00E5', '\\u00E7',\n                '\\u00EA', '\\u00EB', '\\u00E8', '\\u00EF', '\\u00EE', '\\u00EC', '\\u00C4', '\\u00C5',\n                '\\u00C9', '\\u00E6', '\\u00C6', '\\u00F4', '\\u00F6', '\\u00F2', '\\u00FB', '\\u00F9',\n                '\\u00FF', '\\u00D6', '\\u00DC', '\\u00A2', '\\u00A3', '\\u00A5', '\\u20A7', '\\u0192',\n                '\\u00E1', '\\u00ED', '\\u00F3', '\\u00FA', '\\u00F1', '\\u00D1', '\\u00AA', '\\u00BA',\n                '\\u00BF', '\\u2310', '\\u00AC', '\\u00BD', '\\u00BC', '\\u00A1', '\\u00AB', '\\u00BB',\n                '\\u2591', '\\u2592', '\\u2593', '\\u2502', '\\u2524', '\\u2561', '\\u2562', '\\u2556',\n                '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255D', '\\u255C', '\\u255B', '\\u2510',\n                '\\u2514', '\\u2534', '\\u252C', '\\u251C', '\\u2500', '\\u253C', '\\u255E', '\\u255F',\n                '\\u255A', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256C', '\\u2567',\n                '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256B',\n                '\\u256A', '\\u2518', '\\u250C', '\\u2588', '\\u2584', '\\u258C', '\\u2590', '\\u2580',\n                '\\u03B1', '\\u00DF', '\\u0393', '\\u03C0', '\\u03A3', '\\u03C3', '\\u00B5', '\\u03C4',\n                '\\u03A6', '\\u0398', '\\u03A9', '\\u03B4', '\\u221E', '\\u03C6', '\\u03B5', '\\u2229',\n                '\\u2261', '\\u00B1', '\\u2265', '\\u2264', '\\u2320', '\\u2321', '\\u00F7', '\\u2248',\n                '\\u00B0', '\\u2219', '\\u00B7', '\\u221A', '\\u207F', '\\u00B2', '\\u25A0', '\\u00A0'\n            ].forEach((ch, i) => {\n                this.draw(i + 127, ch);\n            });\n        }\n    }\n}\n","export var options = {\n    random: Math.random.bind(Math),\n    colorLookup: ((_) => null),\n};\nexport function configure(opts = {}) {\n    Object.assign(options, opts);\n}\n","import { options } from './config';\nfunction toColorInt(r = 0, g = 0, b = 0, base256 = false) {\n    if (base256) {\n        r = Math.max(0, Math.min(255, Math.round(r * 2.550001)));\n        g = Math.max(0, Math.min(255, Math.round(g * 2.550001)));\n        b = Math.max(0, Math.min(255, Math.round(b * 2.550001)));\n        return (r << 16) + (g << 8) + b;\n    }\n    r = Math.max(0, Math.min(15, Math.round(r / 100 * 15)));\n    g = Math.max(0, Math.min(15, Math.round(g / 100 * 15)));\n    b = Math.max(0, Math.min(15, Math.round(b / 100 * 15)));\n    return (r << 8) + (g << 4) + b;\n}\nexport class Color extends Int16Array {\n    static fromArray(vals, base256 = false) {\n        while (vals.length < 3)\n            vals.push(0);\n        if (base256) {\n            for (let i = 0; i < 7; ++i) {\n                vals[i] = Math.round((vals[i] || 0) * 100 / 255);\n            }\n        }\n        return new this(...vals);\n    }\n    static fromCss(css) {\n        if (!css.startsWith('#')) {\n            throw new Error('Color CSS strings must be of form \"#abc\" or \"#abcdef\" - received: [' + css + ']');\n        }\n        const c = Number.parseInt(css.substring(1), 16);\n        let r, g, b;\n        if (css.length == 4) {\n            r = Math.round((c >> 8) / 15 * 100);\n            g = Math.round(((c & 0xF0) >> 4) / 15 * 100);\n            b = Math.round((c & 0xF) / 15 * 100);\n        }\n        else {\n            r = Math.round((c >> 16) / 255 * 100);\n            g = Math.round(((c & 0xFF00) >> 8) / 255 * 100);\n            b = Math.round((c & 0xFF) / 255 * 100);\n        }\n        return new this(r, g, b);\n    }\n    static fromNumber(val, base256 = false) {\n        const c = new this();\n        for (let i = 0; i < c.length; ++i) {\n            c[i] = 0;\n        }\n        if (val < 0) {\n            c._r = -1;\n        }\n        else if (base256 || (val > 0xFFF)) {\n            c._r = Math.round(((val & 0xFF0000) >> 16) * 100 / 255);\n            c._g = Math.round(((val & 0xFF00) >> 8) * 100 / 255);\n            c._b = Math.round((val & 0xFF) * 100 / 255);\n        }\n        else {\n            c._r = Math.round(((val & 0xF00) >> 8) * 100 / 15);\n            c._g = Math.round(((val & 0xF0) >> 4) * 100 / 15);\n            c._b = Math.round((val & 0xF) * 100 / 15);\n        }\n        return c;\n    }\n    static make(arg, base256 = false) {\n        if ((arg === undefined) || (arg === null))\n            return new this(-1);\n        if (arg instanceof Color) {\n            return arg.clone();\n        }\n        if (typeof arg === 'string') {\n            const l = options.colorLookup(arg);\n            if (l)\n                return l.clone();\n            return this.fromCss(arg);\n        }\n        else if (Array.isArray(arg)) {\n            return this.fromArray(arg, base256);\n        }\n        else if (typeof arg === 'number') {\n            if (arg < 0)\n                return new this(-1);\n            return this.fromNumber(arg, base256);\n        }\n        throw new Error('Failed to make color - unknown argument: ' + JSON.stringify(arg));\n    }\n    static from(...args) {\n        const arg = args[0];\n        if (arg instanceof Color)\n            return arg;\n        if (arg < 0)\n            return new this(-1);\n        if (typeof arg === 'string') {\n            const l = options.colorLookup(arg);\n            if (l)\n                return l;\n        }\n        return this.make(arg, args[1]);\n    }\n    constructor(r = -1, g = 0, b = 0, rand = 0, redRand = 0, greenRand = 0, blueRand = 0) {\n        super(7);\n        this.set([r, g, b, rand, redRand, greenRand, blueRand]);\n    }\n    get r() { return Math.round(this[0] * 2.550001); }\n    get _r() { return this[0]; }\n    set _r(v) { this[0] = v; }\n    get g() { return Math.round(this[1] * 2.550001); }\n    get _g() { return this[1]; }\n    set _g(v) { this[1] = v; }\n    get b() { return Math.round(this[2] * 2.550001); }\n    get _b() { return this[2]; }\n    set _b(v) { this[2] = v; }\n    get _rand() { return this[3]; }\n    get _redRand() { return this[4]; }\n    get _greenRand() { return this[5]; }\n    get _blueRand() { return this[6]; }\n    // luminosity (0-100)\n    get l() {\n        return Math.round(0.5 * (Math.min(this._r, this._g, this._b) + Math.max(this._r, this._g, this._b)));\n    }\n    // saturation (0-100)\n    get s() {\n        if (this.l >= 100)\n            return 0;\n        return Math.round((Math.max(this._r, this._g, this._b) - Math.min(this._r, this._g, this._b)) * (100 - Math.abs(this.l * 2 - 100)) / 100);\n    }\n    // hue (0-360)\n    get h() {\n        let H = 0;\n        let R = this.r;\n        let G = this.g;\n        let B = this.b;\n        if (R >= G && G >= B) {\n            H = 60 * ((G - B) / (R - B));\n        }\n        else if (G > R && R >= B) {\n            H = 60 * (2 - (R - B) / (G - B));\n        }\n        else if (G >= B && B > R) {\n            H = 60 * (2 + (B - R) / (G - R));\n        }\n        else if (B > G && G > R) {\n            H = 60 * (4 - (G - R) / (B - R));\n        }\n        else if (B > R && R >= G) {\n            H = 60 * (4 + (R - G) / (B - G));\n        }\n        else {\n            H = 60 * (6 - (B - G) / (R - G));\n        }\n        return Math.round(H);\n    }\n    isNull() { return this._r < 0; }\n    equals(other) {\n        if (typeof other === 'string') {\n            return (other.length > 4) ? (this.toString(true) == other) : (this.toString() == other);\n        }\n        else if (typeof other === 'number') {\n            return (this.toInt() == other) || (this.toInt(true) == other);\n        }\n        const O = Color.from(other);\n        if (this.isNull())\n            return O.isNull();\n        return this.every((v, i) => {\n            return v == (O[i] || 0);\n        });\n    }\n    copy(other) {\n        if (Array.isArray(other)) {\n            this.set(other);\n        }\n        else {\n            const O = Color.from(other);\n            this.set(O);\n        }\n        return this;\n    }\n    _changed() {\n        return this;\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor();\n        other.copy(this);\n        return other;\n    }\n    assign(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = (arguments[i] || 0);\n        }\n        return this;\n    }\n    assignRGB(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((arguments[i] || 0) / 2.55);\n        }\n        return this;\n    }\n    nullify() {\n        this[0] = -1;\n        return this;\n    }\n    blackOut() {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = 0;\n        }\n        return this;\n    }\n    toInt(base256 = false) {\n        if (this.isNull())\n            return -1;\n        return toColorInt(this._r, this._g, this._b, base256);\n    }\n    clamp() {\n        if (this.isNull())\n            return this;\n        this._r = Math.min(100, Math.max(0, this._r));\n        this._g = Math.min(100, Math.max(0, this._g));\n        this._b = Math.min(100, Math.max(0, this._b));\n        return this._changed();\n    }\n    mix(other, percent) {\n        const O = Color.from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        percent = Math.min(100, Math.max(0, percent));\n        const keepPct = 100 - percent;\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round(((this[i] * keepPct) + (O[i] * percent)) / 100);\n        }\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    lighten(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round(((this[i] * keepPct) + (100 * percent)) / 100);\n        }\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    darken(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round(((this[i] * keepPct) + (0 * percent)) / 100);\n        }\n        return this._changed();\n    }\n    bake() {\n        if (this.isNull())\n            return this;\n        const d = this;\n        if (d[3] + d[4] + d[5] + d[6]) {\n            const rand = this._rand ? Math.floor(options.random() * this._rand) : 0;\n            const redRand = this._redRand ? Math.floor(options.random() * this._redRand) : 0;\n            const greenRand = this._greenRand ? Math.floor(options.random() * this._greenRand) : 0;\n            const blueRand = this._blueRand ? Math.floor(options.random() * this._blueRand) : 0;\n            this._r += (rand + redRand);\n            this._g += (rand + greenRand);\n            this._b += (rand + blueRand);\n            for (let i = 3; i < this.length; ++i) {\n                this[i] = 0;\n            }\n            return this._changed();\n        }\n        return this;\n    }\n    // Adds a color to this one\n    add(other, percent = 100) {\n        const O = Color.from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] += Math.round(O[i] * percent / 100);\n        }\n        return this._changed();\n    }\n    scale(percent) {\n        if (this.isNull() || percent == 100)\n            return this;\n        percent = Math.max(0, percent);\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round(this[i] * percent / 100);\n        }\n        return this._changed();\n    }\n    multiply(other) {\n        if (this.isNull())\n            return this;\n        let data = other;\n        if (!Array.isArray(other)) {\n            if (other.isNull())\n                return this;\n            data = other;\n        }\n        const len = Math.max(3, Math.min(this.length, data.length));\n        for (let i = 0; i < len; ++i) {\n            this[i] = Math.round(this[i] * (data[i] || 0) / 100);\n        }\n        return this._changed();\n    }\n    // scales rgb down to a max of 100\n    normalize() {\n        if (this.isNull())\n            return this;\n        const max = Math.max(this._r, this._g, this._b);\n        if (max <= 100)\n            return this;\n        this._r = Math.round(100 * this._r / max);\n        this._g = Math.round(100 * this._g / max);\n        this._b = Math.round(100 * this._b / max);\n        return this._changed();\n    }\n    css(base256 = false) {\n        const d = this;\n        let v = 0;\n        if (d[3] + d[4] + d[5] + d[6]) {\n            const rand = this._rand ? Math.floor(options.random() * this._rand) : 0;\n            const redRand = this._redRand ? Math.floor(options.random() * this._redRand) : 0;\n            const greenRand = this._greenRand ? Math.floor(options.random() * this._greenRand) : 0;\n            const blueRand = this._blueRand ? Math.floor(options.random() * this._blueRand) : 0;\n            const red = (this._r + rand + redRand);\n            const green = (this._g + rand + greenRand);\n            const blue = (this._b + rand + blueRand);\n            v = toColorInt(red, green, blue, base256);\n        }\n        else {\n            v = this.toInt(base256);\n        }\n        return '#' + v.toString(16).padStart(base256 ? 6 : 3, '0');\n    }\n    toString(base256 = false) {\n        if (this.isNull())\n            return 'null color';\n        return '#' + this.toInt(base256).toString(16).padStart(base256 ? 6 : 3, '0');\n    }\n    // adjusts the luminosity of 2 colors to ensure there is enough separation between them\n    static separate(a, b) {\n        if (a.isNull() || b.isNull())\n            return;\n        const A = a.clone().clamp();\n        const B = b.clone().clamp();\n        // console.log('separate');\n        // console.log('- a=%s, h=%d, s=%d, l=%d', A.toString(), A.h, A.s, A.l);\n        // console.log('- b=%s, h=%d, s=%d, l=%d', B.toString(), B.h, B.s, B.l);\n        let hDiff = Math.abs(A.h - B.h);\n        if (hDiff > 180) {\n            hDiff = 360 - hDiff;\n        }\n        if (hDiff > 45)\n            return; // colors are far enough apart in hue to be distinct\n        const dist = 40;\n        if (Math.abs(A.l - B.l) >= dist)\n            return;\n        // Get them sorted by saturation ( we will darken the more saturated color and lighten the other)\n        const [lo, hi] = [A, B].sort((a, b) => a.s - b.s);\n        // console.log('- lo=%s, hi=%s', lo.toString(), hi.toString());\n        while ((hi.l - lo.l) < dist) {\n            hi.mix(WHITE, 5);\n            lo.mix(BLACK, 5);\n        }\n        a.copy(A);\n        b.copy(B);\n        // console.log('=>', a.toString(), b.toString());\n    }\n}\nconst BLACK = new Color(0, 0, 0);\nconst WHITE = new Color(100, 100, 100);\n","import { Color } from './color';\n;\nexport class DataBuffer {\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n        this._data = new Uint32Array(width * height);\n    }\n    get data() { return this._data; }\n    get width() { return this._width; }\n    get height() { return this._height; }\n    get(x, y) {\n        let index = y * this.width + x;\n        const style = this._data[index] || 0;\n        const glyph = (style >> 24);\n        const bg = (style >> 12) & 0xFFF;\n        const fg = (style & 0xFFF);\n        return { glyph, fg, bg };\n    }\n    _toGlyph(ch) {\n        if (ch === null || ch === undefined)\n            return -1;\n        return ch.charCodeAt(0);\n    }\n    draw(x, y, glyph = -1, fg = -1, bg = -1) {\n        let index = y * this.width + x;\n        const current = this._data[index] || 0;\n        if (typeof glyph !== 'number') {\n            glyph = this._toGlyph(glyph);\n        }\n        if (typeof fg !== 'number') {\n            fg = Color.from(fg).toInt();\n        }\n        if (typeof bg !== 'number') {\n            bg = Color.from(bg).toInt();\n        }\n        glyph = (glyph >= 0) ? (glyph & 0xFF) : (current >> 24);\n        bg = (bg >= 0) ? (bg & 0xFFF) : ((current >> 12) & 0xFFF);\n        fg = (fg >= 0) ? (fg & 0xFFF) : (current & 0xFFF);\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data[index] = style;\n        return this;\n    }\n    // This is without opacity - opacity must be done in Mixer\n    drawSprite(x, y, sprite) {\n        const glyph = sprite.ch ? sprite.ch : sprite.glyph;\n        // const fg = sprite.fg ? sprite.fg.toInt() : -1;\n        // const bg = sprite.bg ? sprite.bg.toInt() : -1;\n        return this.draw(x, y, glyph, sprite.fg, sprite.bg);\n    }\n    blackOut(x, y) {\n        if (arguments.length == 0) {\n            return this.fill(0, 0, 0);\n        }\n        return this.draw(x, y, 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xFFF, bg = 0) {\n        if (typeof glyph == 'string') {\n            glyph = this._toGlyph(glyph);\n        }\n        glyph = glyph & 0xFF;\n        fg = fg & 0xFFF;\n        bg = bg & 0xFFF;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data.fill(style);\n        return this;\n    }\n    copy(other) {\n        this._data.set(other._data);\n        return this;\n    }\n}\nexport class Buffer extends DataBuffer {\n    constructor(canvas) {\n        super(canvas.width, canvas.height);\n        this._canvas = canvas;\n        canvas.copyTo(this);\n    }\n    // get canvas() { return this._canvas; }\n    _toGlyph(ch) {\n        return this._canvas.glyphs.forChar(ch);\n    }\n    render() {\n        this._canvas.copy(this);\n        return this;\n    }\n    copyFromCanvas() {\n        this._canvas.copyTo(this);\n        return this;\n    }\n}\n","import { Color } from './color';\nexport class Mixer {\n    constructor() {\n        this.ch = -1;\n        this.fg = new Color();\n        this.bg = new Color();\n    }\n    _changed() {\n        return this;\n    }\n    copy(other) {\n        this.ch = other.ch;\n        this.fg.copy(other.fg);\n        this.bg.copy(other.bg);\n        return this._changed();\n    }\n    clone() {\n        const other = new Mixer();\n        other.copy(this);\n        return other;\n    }\n    nullify() {\n        this.ch = -1;\n        this.fg.nullify();\n        this.bg.nullify();\n        return this._changed();\n    }\n    blackOut() {\n        this.ch = 0;\n        this.fg.blackOut();\n        this.bg.blackOut();\n        return this._changed();\n    }\n    draw(ch = -1, fg = -1, bg = -1) {\n        if (ch && (ch !== -1)) {\n            this.ch = ch;\n        }\n        if ((fg !== -1) && (fg !== null)) {\n            fg = Color.from(fg);\n            this.fg.copy(fg);\n        }\n        if ((bg !== -1) && (bg !== null)) {\n            bg = Color.from(bg);\n            this.bg.copy(bg);\n        }\n        return this._changed();\n    }\n    drawSprite(info, opacity) {\n        if (opacity === undefined)\n            opacity = info.opacity;\n        if (opacity === undefined)\n            opacity = 100;\n        if (opacity <= 0)\n            return;\n        if (info.ch)\n            this.ch = info.ch;\n        else if (info.glyph !== undefined)\n            this.ch = info.glyph;\n        if (info.fg)\n            this.fg.mix(info.fg, opacity);\n        if (info.bg)\n            this.bg.mix(info.bg, opacity);\n        return this._changed();\n    }\n    invert() {\n        [this.bg, this.fg] = [this.fg, this.bg];\n        return this._changed();\n    }\n    multiply(color, fg = true, bg = true) {\n        color = Color.from(color);\n        if (fg) {\n            this.fg.multiply(color);\n        }\n        if (bg) {\n            this.bg.multiply(color);\n        }\n        return this._changed();\n    }\n    mix(color, fg = 50, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.mix(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.mix(color, bg);\n        }\n        return this._changed();\n    }\n    add(color, fg = 100, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.add(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.add(color, bg);\n        }\n        return this._changed();\n    }\n    separate() {\n        Color.separate(this.fg, this.bg);\n        return this._changed();\n    }\n    bake() {\n        this.fg.bake();\n        this.bg.bake();\n        this._changed();\n        return {\n            ch: this.ch,\n            fg: this.fg.toInt(),\n            bg: this.bg.toInt(),\n        };\n    }\n}\n","import { Canvas } from \"./canvas\";\nimport { Glyphs } from \"./glyphs\";\nimport { Buffer, DataBuffer } from './buffer';\nimport { Color } from './color';\nimport { Mixer } from './mixer';\nimport { configure } from './config';\nfunction withImage(image) {\n    let opts = {};\n    if (typeof image === 'string') {\n        opts.glyphs = Glyphs.fromImage(image);\n    }\n    else if (image instanceof HTMLImageElement) {\n        opts.glyphs = Glyphs.fromImage(image);\n    }\n    else {\n        if (!image.image)\n            throw new Error('You must supply the image.');\n        Object.assign(opts, image);\n        opts.glyphs = Glyphs.fromImage(image.image);\n    }\n    return new Canvas(opts);\n}\nfunction withFont(src) {\n    if (typeof src === 'string') {\n        src = { font: src };\n    }\n    src.glyphs = Glyphs.fromFont(src);\n    return new Canvas(src);\n}\nexport { Canvas, Glyphs, Buffer, DataBuffer, Color, Mixer, withImage, withFont, configure, };\n"],"names":["QUAD","VS","trim","FS","Canvas","[object Object]","options","this","_data","Uint32Array","_renderRequested","_autoRender","_width","_height","glyphs","Error","_node","_initNode","node","_initContext","_configure","width","height","tileWidth","_glyphs","tileHeight","pxWidth","clientWidth","pxHeight","clientHeight","_setGlyphs","el","document","getElementById","HTMLCanvasElement","createElement","appendChild","render","resize","x","y","glyph","fg","bg","style","_set","requestAnimationFrame","index","_requestRender","buffer","set","data","Math","floor","super","gl","getContext","_gl","_buffers","_attribs","_uniforms","p","sources","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","forEach","type","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaders.VS","shaders.FS","useProgram","attributeCount","ACTIVE_ATTRIBUTES","i","enableVertexAttribArray","info","getActiveAttrib","name","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","uniform1i","_texture","t","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","position","deleteBuffer","uv","buffers","attribs","tileCount","positionData","Uint16Array","length","uvData","Uint8Array","value","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribIPointer","UNSIGNED_SHORT","bufferData","STATIC_DRAW","UNSIGNED_BYTE","createGeometry","Object","assign","UNSIGNED_INT","uniforms","uniform2uiv","_uploadGlyphs","needsUpdate","activeTexture","TEXTURE0","texImage2D","RGBA","viewport","uniform2ui","_createGeometry","_createData","n","dest","DYNAMIC_DRAW","drawArrays","TRIANGLES","Glyphs","opts","_tileWidth","_tileHeight","_map","font","_ctx","src","startsWith","drawImage","basicOnly","basic","_initGlyphs","ch","fillStyle","fillRect","size","fontSize","max","textAlign","textBaseline","cx","cy","save","beginPath","rect","clip","undefined","fillText","restore","draw","String","fromCharCode","random","bind","colorLookup","_","toColorInt","r","g","b","base256","min","round","Color","Int16Array","vals","push","css","c","Number","parseInt","substring","val","_r","_g","_b","arg","clone","l","fromCss","Array","isArray","fromArray","fromNumber","JSON","stringify","args","make","rand","redRand","greenRand","blueRand","v","_rand","_redRand","_greenRand","_blueRand","s","abs","h","H","R","G","B","other","toString","toInt","O","from","isNull","every","constructor","copy","arguments","_changed","percent","blackOut","keepPct","d","len","padStart","a","A","clamp","hDiff","lo","hi","sort","mix","WHITE","BLACK","DataBuffer","charCodeAt","current","_toGlyph","sprite","fill","Mixer","nullify","opacity","color","multiply","add","separate","bake","canvas","_canvas","copyTo","forChar","image","fromImage","HTMLImageElement","fromFont"],"mappings":"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"}