{"version":3,"file":"gw-canvas.min.js","sources":["../js/shaders.js","../js/glyphs.js","../js/canvas.js","../js/config.js","../js/color.js","../js/buffer.js","../js/mixer.js","../js/sprite.js"],"sourcesContent":["// Based on: https://github.com/ondras/fastiles/blob/master/ts/shaders.ts (v2.1.0)\nexport const VS = `\n#version 300 es\nin uvec2 position;\nin uvec2 uv;\nin uint style;\nout vec2 fsUv;\nflat out uint fsStyle;\nuniform highp uvec2 tileSize;\nuniform uvec2 viewportSize;\nvoid main() {\n\tivec2 positionPx = ivec2(position * tileSize);\n\tvec2 positionNdc = (vec2(positionPx * 2) / vec2(viewportSize))-1.0;\n\tpositionNdc.y *= -1.0;\n\tgl_Position = vec4(positionNdc, 0.0, 1.0);\n\tfsUv = vec2(uv);\n\tfsStyle = style;\n}`.trim();\nexport const FS = `\n#version 300 es\nprecision highp float;\nin vec2 fsUv;\nflat in uint fsStyle;\nout vec4 fragColor;\nuniform sampler2D font;\nuniform highp uvec2 tileSize;\nvoid main() {\n\tuvec2 fontTiles = uvec2(textureSize(font, 0)) / tileSize;\n\n\tuint glyph = (fsStyle & uint(0xFF000000)) >> 24;\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tuvec2 fontPosition = uvec2(glyphX, glyphY);\n\n\tuvec2 fontPx = (tileSize * fontPosition) + uvec2(vec2(tileSize) * fsUv);\n\tvec3 texel = texelFetch(font, ivec2(fontPx), 0).rgb;\n\n\tfloat s = 15.0;\n\tuint fr = (fsStyle & uint(0xF00)) >> 8;\n\tuint fg = (fsStyle & uint(0x0F0)) >> 4;\n\tuint fb = (fsStyle & uint(0x00F)) >> 0;\n\tvec3 fgRgb = vec3(fr, fg, fb) / s;\n  \n\tuint br = (fsStyle & uint(0xF00000)) >> 20;\n\tuint bg = (fsStyle & uint(0x0F0000)) >> 16;\n\tuint bb = (fsStyle & uint(0x00F000)) >> 12;\n\tvec3 bgRgb = vec3(br, bg, bb) / s;\n  \n\tfragColor = vec4(mix(bgRgb, fgRgb, texel), 1.0);\n}`.trim();\n","export class Glyphs {\n    constructor(opts = {}) {\n        this._tileWidth = 12;\n        this._tileHeight = 16;\n        this.needsUpdate = true;\n        this._map = {};\n        opts.font = opts.font || 'monospace';\n        this._node = document.createElement('canvas');\n        this._ctx = this.node.getContext('2d');\n        this._configure(opts);\n    }\n    static fromImage(src) {\n        if (typeof src === 'string') {\n            if (src.startsWith('data:'))\n                throw new Error('Glyph: You must load a data string into an image element and use that.');\n            const el = document.getElementById(src);\n            if (!el)\n                throw new Error('Glyph: Failed to find image element with id:' + src);\n            src = el;\n        }\n        const glyph = new this({ tileWidth: src.width / 16, tileHeight: src.height / 16 });\n        glyph._ctx.drawImage(src, 0, 0);\n        return glyph;\n    }\n    static fromFont(src) {\n        if (typeof src === 'string') {\n            src = { font: src };\n        }\n        const glyphs = new this(src);\n        const basicOnly = src.basicOnly || src.basic || false;\n        glyphs._initGlyphs(basicOnly);\n        return glyphs;\n    }\n    get node() { return this._node; }\n    get ctx() { return this._ctx; }\n    get tileWidth() { return this._tileWidth; }\n    get tileHeight() { return this._tileHeight; }\n    get pxWidth() { return this._node.width; }\n    get pxHeight() { return this._node.height; }\n    forChar(ch) {\n        if (ch === null || ch === undefined)\n            return -1;\n        return this._map[ch] || -1;\n    }\n    _configure(opts) {\n        this._tileWidth = opts.tileWidth || this.tileWidth;\n        this._tileHeight = opts.tileHeight || this.tileHeight;\n        this.node.width = 16 * this.tileWidth;\n        this.node.height = 16 * this.tileHeight;\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(0, 0, this.pxWidth, this.pxHeight);\n        const size = opts.fontSize || opts.size || Math.max(this.tileWidth, this.tileHeight);\n        this._ctx.font = '' + size + 'px ' + opts.font;\n        this._ctx.textAlign = 'center';\n        this._ctx.textBaseline = 'middle';\n        this._ctx.fillStyle = 'white';\n    }\n    draw(n, ch) {\n        if (n > 256)\n            throw new Error('Cannot draw more than 256 glyphs.');\n        const x = (n % 16) * this.tileWidth;\n        const y = Math.floor(n / 16) * this.tileHeight;\n        const cx = x + Math.floor(this.tileWidth / 2);\n        const cy = y + Math.floor(this.tileHeight / 2);\n        this._ctx.save();\n        this._ctx.beginPath();\n        this._ctx.rect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.clip();\n        if (typeof ch === 'function') {\n            ch(this._ctx, x, y, this.tileWidth, this.tileHeight);\n        }\n        else {\n            if (this._map[ch] === undefined)\n                this._map[ch] = n;\n            this._ctx.fillText(ch, cx, cy);\n        }\n        this._ctx.restore();\n        this.needsUpdate = true;\n    }\n    _initGlyphs(basicOnly = false) {\n        for (let i = 32; i < 127; ++i) {\n            this.draw(i, String.fromCharCode(i));\n        }\n        if (!basicOnly) {\n            [' ', '\\u263a', '\\u263b', '\\u2665', '\\u2666', '\\u2663', '\\u2660', '\\u263c',\n                '\\u2600', '\\u2605', '\\u2606', '\\u2642', '\\u2640', '\\u266a', '\\u266b', '\\u2638',\n                '\\u25b6', '\\u25c0', '\\u2195', '\\u203c', '\\u204b', '\\u262f', '\\u2318', '\\u2616',\n                '\\u2191', '\\u2193', '\\u2192', '\\u2190', '\\u2126', '\\u2194', '\\u25b2', '\\u25bc',\n            ].forEach((ch, i) => {\n                this.draw(i, ch);\n            });\n            // [\n            // '\\u2302',\n            // '\\u2b09', '\\u272a', '\\u2718', '\\u2610', '\\u2611', '\\u25ef', '\\u25ce', '\\u2690',\n            // '\\u2691', '\\u2598', '\\u2596', '\\u259d', '\\u2597', '\\u2744', '\\u272d', '\\u2727',\n            // '\\u25e3', '\\u25e4', '\\u25e2', '\\u25e5', '\\u25a8', '\\u25a7', '\\u259a', '\\u265f',\n            // '\\u265c', '\\u265e', '\\u265d', '\\u265b', '\\u265a', '\\u301c', '\\u2694', '\\u2692',\n            // '\\u25b6', '\\u25bc', '\\u25c0', '\\u25b2', '\\u25a4', '\\u25a5', '\\u25a6', '\\u257a',\n            // '\\u257b', '\\u2578', '\\u2579', '\\u2581', '\\u2594', '\\u258f', '\\u2595', '\\u272d',\n            // '\\u2591', '\\u2592', '\\u2593', '\\u2503', '\\u252b', '\\u2561', '\\u2562', '\\u2556',\n            // '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255d', '\\u255c', '\\u255b', '\\u2513',\n            // '\\u2517', '\\u253b', '\\u2533', '\\u2523', '\\u2501', '\\u254b', '\\u255e', '\\u255f',\n            // '\\u255a', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256c', '\\u2567',\n            // '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256b',\n            // '\\u256a', '\\u251b', '\\u250f', '\\u2588', '\\u2585', '\\u258c', '\\u2590', '\\u2580',\n            // '\\u03b1', '\\u03b2', '\\u0393', '\\u03c0', '\\u03a3', '\\u03c3', '\\u03bc', '\\u03c4',\n            // '\\u03a6', '\\u03b8', '\\u03a9', '\\u03b4', '\\u221e', '\\u03b8', '\\u03b5', '\\u03b7',\n            // '\\u039e', '\\u00b1', '\\u2265', '\\u2264', '\\u2234', '\\u2237', '\\u00f7', '\\u2248',\n            // '\\u22c4', '\\u22c5', '\\u2217', '\\u27b5', '\\u2620', '\\u2625', '\\u25fc', '\\u25fb'\n            // ].forEach( (ch, i) => {\n            //   this.draw(i + 127, ch); \n            // });\n            ['\\u2302',\n                '\\u00C7', '\\u00FC', '\\u00E9', '\\u00E2', '\\u00E4', '\\u00E0', '\\u00E5', '\\u00E7',\n                '\\u00EA', '\\u00EB', '\\u00E8', '\\u00EF', '\\u00EE', '\\u00EC', '\\u00C4', '\\u00C5',\n                '\\u00C9', '\\u00E6', '\\u00C6', '\\u00F4', '\\u00F6', '\\u00F2', '\\u00FB', '\\u00F9',\n                '\\u00FF', '\\u00D6', '\\u00DC', '\\u00A2', '\\u00A3', '\\u00A5', '\\u20A7', '\\u0192',\n                '\\u00E1', '\\u00ED', '\\u00F3', '\\u00FA', '\\u00F1', '\\u00D1', '\\u00AA', '\\u00BA',\n                '\\u00BF', '\\u2310', '\\u00AC', '\\u00BD', '\\u00BC', '\\u00A1', '\\u00AB', '\\u00BB',\n                '\\u2591', '\\u2592', '\\u2593', '\\u2502', '\\u2524', '\\u2561', '\\u2562', '\\u2556',\n                '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255D', '\\u255C', '\\u255B', '\\u2510',\n                '\\u2514', '\\u2534', '\\u252C', '\\u251C', '\\u2500', '\\u253C', '\\u255E', '\\u255F',\n                '\\u255A', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256C', '\\u2567',\n                '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256B',\n                '\\u256A', '\\u2518', '\\u250C', '\\u2588', '\\u2584', '\\u258C', '\\u2590', '\\u2580',\n                '\\u03B1', '\\u00DF', '\\u0393', '\\u03C0', '\\u03A3', '\\u03C3', '\\u00B5', '\\u03C4',\n                '\\u03A6', '\\u0398', '\\u03A9', '\\u03B4', '\\u221E', '\\u03C6', '\\u03B5', '\\u2229',\n                '\\u2261', '\\u00B1', '\\u2265', '\\u2264', '\\u2320', '\\u2321', '\\u00F7', '\\u2248',\n                '\\u00B0', '\\u2219', '\\u00B7', '\\u221A', '\\u207F', '\\u00B2', '\\u25A0', '\\u00A0'\n            ].forEach((ch, i) => {\n                this.draw(i + 127, ch);\n            });\n        }\n    }\n}\n","// Based on: https://github.com/ondras/fastiles/blob/master/ts/scene.ts (v2.1.0)\nimport * as shaders from \"./shaders\";\nimport { Glyphs } from \"./glyphs\";\nconst VERTICES_PER_TILE = 6;\nexport class NotSupportedError extends Error {\n    constructor(...params) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(...params);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        // @ts-ignore\n        if (Error.captureStackTrace) {\n            // @ts-ignore\n            Error.captureStackTrace(this, NotSupportedError);\n        }\n        this.name = \"NotSupportedError\";\n    }\n}\nexport class BaseCanvas {\n    constructor(options) {\n        this._renderRequested = false;\n        this._autoRender = true;\n        this._width = 50;\n        this._height = 25;\n        if (!options.glyphs)\n            throw new Error(\"You must supply glyphs for the canvas.\");\n        this._node = this._createNode();\n        this._createContext();\n        this._configure(options);\n    }\n    get node() {\n        return this._node;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get tileWidth() {\n        return this._glyphs.tileWidth;\n    }\n    get tileHeight() {\n        return this._glyphs.tileHeight;\n    }\n    get pxWidth() {\n        return this.node.clientWidth;\n    }\n    get pxHeight() {\n        return this.node.clientHeight;\n    }\n    get glyphs() {\n        return this._glyphs;\n    }\n    set glyphs(glyphs) {\n        this._setGlyphs(glyphs);\n    }\n    _createNode() {\n        return document.createElement(\"canvas\");\n    }\n    _configure(options) {\n        this._width = options.width || this._width;\n        this._height = options.height || this._height;\n        this._autoRender = options.render !== false;\n        this._setGlyphs(options.glyphs);\n        if (options.div) {\n            let el;\n            if (typeof options.div === \"string\") {\n                el = document.getElementById(options.div);\n                if (!el) {\n                    console.warn(\"Failed to find parent element by ID: \" + options.div);\n                }\n            }\n            else {\n                el = options.div;\n            }\n            if (el && el.appendChild) {\n                el.appendChild(this.node);\n            }\n        }\n    }\n    _setGlyphs(glyphs) {\n        if (glyphs === this._glyphs)\n            return false;\n        this._glyphs = glyphs;\n        this.resize(this._width, this._height);\n        return true;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        const node = this.node;\n        node.width = this._width * this.tileWidth;\n        node.height = this._height * this.tileHeight;\n    }\n    draw(x, y, glyph, fg, bg) {\n        glyph = glyph & 0xff;\n        bg = bg & 0xfff;\n        fg = fg & 0xfff;\n        const style = glyph * (1 << 24) + bg * (1 << 12) + fg;\n        this._set(x, y, style);\n    }\n    _requestRender() {\n        if (this._renderRequested)\n            return;\n        this._renderRequested = true;\n        if (!this._autoRender)\n            return;\n        requestAnimationFrame(() => this.render());\n    }\n    _set(x, y, style) {\n        let index = y * this.width + x;\n        const current = this._data[index];\n        if (current !== style) {\n            this._data[index] = style;\n            this._requestRender();\n            return true;\n        }\n        return false;\n    }\n    copy(buffer) {\n        this._data.set(buffer.data);\n        this._requestRender();\n    }\n    copyTo(buffer) {\n        buffer.data.set(this._data);\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    toX(x) {\n        return Math.floor((this.width * x) / this.node.clientWidth);\n    }\n    toY(y) {\n        return Math.floor((this.height * y) / this.node.clientHeight);\n    }\n}\nexport class Canvas extends BaseCanvas {\n    constructor(options) {\n        super(options);\n    }\n    _createContext() {\n        let gl = this.node.getContext(\"webgl2\");\n        if (!gl) {\n            throw new NotSupportedError(\"WebGL 2 not supported\");\n        }\n        this._gl = gl;\n        this._buffers = {};\n        this._attribs = {};\n        this._uniforms = {};\n        const p = createProgram(gl, shaders.VS, shaders.FS);\n        gl.useProgram(p);\n        const attributeCount = gl.getProgramParameter(p, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            gl.enableVertexAttribArray(i);\n            let info = gl.getActiveAttrib(p, i);\n            this._attribs[info.name] = i;\n        }\n        const uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(p, i);\n            this._uniforms[info.name] = gl.getUniformLocation(p, info.name);\n        }\n        gl.uniform1i(this._uniforms[\"font\"], 0);\n        this._texture = createTexture(gl);\n    }\n    _createGeometry() {\n        const gl = this._gl;\n        this._buffers.position && gl.deleteBuffer(this._buffers.position);\n        this._buffers.uv && gl.deleteBuffer(this._buffers.uv);\n        let buffers = createGeometry(gl, this._attribs, this.width, this.height);\n        Object.assign(this._buffers, buffers);\n    }\n    _createData() {\n        const gl = this._gl;\n        const attribs = this._attribs;\n        const tileCount = this.width * this.height;\n        this._buffers.style && gl.deleteBuffer(this._buffers.style);\n        this._data = new Uint32Array(tileCount * VERTICES_PER_TILE);\n        const style = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, style);\n        gl.vertexAttribIPointer(attribs[\"style\"], 1, gl.UNSIGNED_INT, 0, 0);\n        Object.assign(this._buffers, { style });\n    }\n    _setGlyphs(glyphs) {\n        if (!super._setGlyphs(glyphs))\n            return false;\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.uniform2uiv(uniforms[\"tileSize\"], [this.tileWidth, this.tileHeight]);\n        this._uploadGlyphs();\n        return true;\n    }\n    _uploadGlyphs() {\n        if (!this._glyphs.needsUpdate)\n            return;\n        const gl = this._gl;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._glyphs.node);\n        this._requestRender();\n        this._glyphs.needsUpdate = false;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.viewport(0, 0, this.node.width, this.node.height);\n        gl.uniform2ui(uniforms[\"viewportSize\"], this.node.width, this.node.height);\n        this._createGeometry();\n        this._createData();\n    }\n    _set(x, y, style) {\n        let index = y * this.width + x;\n        index *= VERTICES_PER_TILE;\n        const current = this._data[index + 2];\n        if (current !== style) {\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n            this._requestRender();\n            return true;\n        }\n        return false;\n    }\n    copy(buffer) {\n        buffer.data.forEach((style, i) => {\n            const index = i * VERTICES_PER_TILE;\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n        });\n        this._requestRender();\n    }\n    copyTo(buffer) {\n        const n = this.width * this.height;\n        const dest = buffer.data;\n        for (let i = 0; i < n; ++i) {\n            const index = i * VERTICES_PER_TILE;\n            dest[i] = this._data[index + 2];\n        }\n    }\n    render() {\n        const gl = this._gl;\n        if (this._glyphs.needsUpdate) {\n            // auto keep glyphs up to date\n            this._uploadGlyphs();\n        }\n        else if (!this._renderRequested) {\n            return;\n        }\n        this._renderRequested = false;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.style);\n        gl.bufferData(gl.ARRAY_BUFFER, this._data, gl.DYNAMIC_DRAW);\n        gl.drawArrays(gl.TRIANGLES, 0, this._width * this._height * VERTICES_PER_TILE);\n    }\n}\nexport class Canvas2D extends BaseCanvas {\n    constructor(options) {\n        super(options);\n    }\n    _createContext() {\n        const ctx = this.node.getContext(\"2d\");\n        if (!ctx) {\n            throw new NotSupportedError(\"2d context not supported!\");\n        }\n        this._ctx = ctx;\n    }\n    _set(x, y, style) {\n        const result = super._set(x, y, style);\n        if (result) {\n            this._changed[y * this.width + x] = 1;\n        }\n        return result;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        this._data = new Uint32Array(width * height);\n        this._changed = new Int8Array(width * height);\n    }\n    copy(buffer) {\n        for (let i = 0; i < this._data.length; ++i) {\n            if (this._data[i] !== buffer.data[i]) {\n                this._data[i] = buffer.data[i];\n                this._changed[i] = 1;\n            }\n        }\n        this._requestRender();\n    }\n    render() {\n        this._renderRequested = false;\n        for (let i = 0; i < this._changed.length; ++i) {\n            if (this._changed[i])\n                this._renderCell(i);\n            this._changed[i] = 0;\n        }\n    }\n    _renderCell(index) {\n        const x = index % this.width;\n        const y = Math.floor(index / this.width);\n        const style = this._data[index];\n        const glyph = (style / (1 << 24)) >> 0;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        const px = x * this.tileWidth;\n        const py = y * this.tileHeight;\n        const gx = (glyph % 16) * this.tileWidth;\n        const gy = Math.floor(glyph / 16) * this.tileHeight;\n        const d = this.glyphs.ctx.getImageData(gx, gy, this.tileWidth, this.tileHeight);\n        for (let di = 0; di < d.width * d.height; ++di) {\n            const pct = d.data[di * 4] / 255;\n            const inv = 1.0 - pct;\n            d.data[di * 4 + 0] =\n                pct * (((fg & 0xf00) >> 8) * 17) + inv * (((bg & 0xf00) >> 8) * 17);\n            d.data[di * 4 + 1] =\n                pct * (((fg & 0xf0) >> 4) * 17) + inv * (((bg & 0xf0) >> 4) * 17);\n            d.data[di * 4 + 2] = pct * ((fg & 0xf) * 17) + inv * ((bg & 0xf) * 17);\n            d.data[di * 4 + 3] = 255; // not transparent anymore\n        }\n        this._ctx.putImageData(d, px, py);\n    }\n}\nexport function withImage(image) {\n    let opts = {};\n    if (typeof image === \"string\") {\n        opts.glyphs = Glyphs.fromImage(image);\n    }\n    else if (image instanceof HTMLImageElement) {\n        opts.glyphs = Glyphs.fromImage(image);\n    }\n    else {\n        if (!image.image)\n            throw new Error(\"You must supply the image.\");\n        Object.assign(opts, image);\n        opts.glyphs = Glyphs.fromImage(image.image);\n    }\n    let canvas;\n    try {\n        canvas = new Canvas(opts);\n    }\n    catch (e) {\n        if (!(e instanceof NotSupportedError))\n            throw e;\n    }\n    if (!canvas) {\n        canvas = new Canvas2D(opts);\n    }\n    return canvas;\n}\nexport function withFont(src) {\n    if (typeof src === \"string\") {\n        src = { font: src };\n    }\n    src.glyphs = Glyphs.fromFont(src);\n    let canvas;\n    try {\n        canvas = new Canvas(src);\n    }\n    catch (e) {\n        if (!(e instanceof NotSupportedError))\n            throw e;\n    }\n    if (!canvas) {\n        canvas = new Canvas2D(src);\n    }\n    return canvas;\n}\n// Copy of: https://github.com/ondras/fastiles/blob/master/ts/utils.ts (v2.1.0)\nexport const QUAD = [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1];\nexport function createProgram(gl, ...sources) {\n    const p = gl.createProgram();\n    [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER].forEach((type, index) => {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sources[index]);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(shader));\n        }\n        gl.attachShader(p, shader);\n    });\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p));\n    }\n    return p;\n}\nexport function createTexture(gl) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    return t;\n}\nexport function createGeometry(gl, attribs, width, height) {\n    let tileCount = width * height;\n    let positionData = new Uint16Array(tileCount * QUAD.length);\n    let uvData = new Uint8Array(tileCount * QUAD.length);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            QUAD.forEach((value) => {\n                positionData[i] = (i % 2 ? y : x) + value;\n                uvData[i] = value;\n                i++;\n            });\n        }\n    }\n    const position = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, position);\n    gl.vertexAttribIPointer(attribs[\"position\"], 2, gl.UNSIGNED_SHORT, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, positionData, gl.STATIC_DRAW);\n    const uv = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uv);\n    gl.vertexAttribIPointer(attribs[\"uv\"], 2, gl.UNSIGNED_BYTE, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, uvData, gl.STATIC_DRAW);\n    return { position, uv };\n}\n","export var options = {\n    random: Math.random.bind(Math),\n};\nexport function configure(opts = {}) {\n    Object.assign(options, opts);\n}\n","import { options } from \"./config\";\nfunction toColorInt(r = 0, g = 0, b = 0, base256 = false) {\n    if (base256) {\n        r = Math.max(0, Math.min(255, Math.round(r * 2.550001)));\n        g = Math.max(0, Math.min(255, Math.round(g * 2.550001)));\n        b = Math.max(0, Math.min(255, Math.round(b * 2.550001)));\n        return (r << 16) + (g << 8) + b;\n    }\n    r = Math.max(0, Math.min(15, Math.round((r / 100) * 15)));\n    g = Math.max(0, Math.min(15, Math.round((g / 100) * 15)));\n    b = Math.max(0, Math.min(15, Math.round((b / 100) * 15)));\n    return (r << 8) + (g << 4) + b;\n}\nexport const colors = {};\nexport class Color extends Int16Array {\n    constructor(r = -1, g = 0, b = 0, rand = 0, redRand = 0, greenRand = 0, blueRand = 0, dances = false) {\n        super(7);\n        this.dances = false;\n        this.set([r, g, b, rand, redRand, greenRand, blueRand]);\n        this.dances = dances;\n    }\n    static fromArray(vals, base256 = false) {\n        while (vals.length < 3)\n            vals.push(0);\n        if (base256) {\n            for (let i = 0; i < 7; ++i) {\n                vals[i] = Math.round(((vals[i] || 0) * 100) / 255);\n            }\n        }\n        return new this(...vals);\n    }\n    static fromCss(css) {\n        if (!css.startsWith(\"#\")) {\n            throw new Error('Color CSS strings must be of form \"#abc\" or \"#abcdef\" - received: [' +\n                css +\n                \"]\");\n        }\n        const c = Number.parseInt(css.substring(1), 16);\n        let r, g, b;\n        if (css.length == 4) {\n            r = Math.round(((c >> 8) / 15) * 100);\n            g = Math.round((((c & 0xf0) >> 4) / 15) * 100);\n            b = Math.round(((c & 0xf) / 15) * 100);\n        }\n        else {\n            r = Math.round(((c >> 16) / 255) * 100);\n            g = Math.round((((c & 0xff00) >> 8) / 255) * 100);\n            b = Math.round(((c & 0xff) / 255) * 100);\n        }\n        return new this(r, g, b);\n    }\n    static fromName(name) {\n        const c = colors[name];\n        if (!c) {\n            throw new Error(\"Unknown color name: \" + name);\n        }\n        return c;\n    }\n    static fromNumber(val, base256 = false) {\n        const c = new this();\n        for (let i = 0; i < c.length; ++i) {\n            c[i] = 0;\n        }\n        if (val < 0) {\n            c._r = -1;\n        }\n        else if (base256 || val > 0xfff) {\n            c._r = Math.round((((val & 0xff0000) >> 16) * 100) / 255);\n            c._g = Math.round((((val & 0xff00) >> 8) * 100) / 255);\n            c._b = Math.round(((val & 0xff) * 100) / 255);\n        }\n        else {\n            c._r = Math.round((((val & 0xf00) >> 8) * 100) / 15);\n            c._g = Math.round((((val & 0xf0) >> 4) * 100) / 15);\n            c._b = Math.round(((val & 0xf) * 100) / 15);\n        }\n        return c;\n    }\n    static make(arg, base256 = false) {\n        if (arg === undefined || arg === null)\n            return new this(-1);\n        if (arg instanceof Color) {\n            return arg.clone();\n        }\n        if (typeof arg === \"string\") {\n            if (arg.startsWith(\"#\")) {\n                return this.fromCss(arg);\n            }\n            return this.fromName(arg).clone();\n        }\n        else if (Array.isArray(arg)) {\n            return this.fromArray(arg, base256);\n        }\n        else if (typeof arg === \"number\") {\n            if (arg < 0)\n                return new this(-1);\n            return this.fromNumber(arg, base256);\n        }\n        throw new Error(\"Failed to make color - unknown argument: \" + JSON.stringify(arg));\n    }\n    static from(...args) {\n        const arg = args[0];\n        if (arg instanceof Color)\n            return arg;\n        if (arg < 0 || arg === undefined)\n            return new this(-1);\n        if (typeof arg === \"string\") {\n            if (!arg.startsWith(\"#\")) {\n                return this.fromName(arg);\n            }\n        }\n        return this.make(arg, args[1]);\n    }\n    static install(name, info) {\n        const c = info instanceof Color ? info : this.make(info);\n        colors[name] = c;\n        c.name = name;\n        return c;\n    }\n    static installSpread(name, base) {\n        const c = this.install(name, base);\n        this.install(\"light_\" + name, c.clone().lighten(25));\n        this.install(\"lighter_\" + name, c.clone().lighten(50));\n        this.install(\"lightest_\" + name, c.clone().lighten(75));\n        this.install(\"dark_\" + name, c.clone().darken(25));\n        this.install(\"darker_\" + name, c.clone().darken(50));\n        this.install(\"darkest_\" + name, c.clone().darken(75));\n        return c;\n    }\n    get r() {\n        return Math.round(this[0] * 2.550001);\n    }\n    get _r() {\n        return this[0];\n    }\n    set _r(v) {\n        this[0] = v;\n    }\n    get g() {\n        return Math.round(this[1] * 2.550001);\n    }\n    get _g() {\n        return this[1];\n    }\n    set _g(v) {\n        this[1] = v;\n    }\n    get b() {\n        return Math.round(this[2] * 2.550001);\n    }\n    get _b() {\n        return this[2];\n    }\n    set _b(v) {\n        this[2] = v;\n    }\n    get _rand() {\n        return this[3];\n    }\n    get _redRand() {\n        return this[4];\n    }\n    get _greenRand() {\n        return this[5];\n    }\n    get _blueRand() {\n        return this[6];\n    }\n    // luminosity (0-100)\n    get l() {\n        return Math.round(0.5 *\n            (Math.min(this._r, this._g, this._b) +\n                Math.max(this._r, this._g, this._b)));\n    }\n    // saturation (0-100)\n    get s() {\n        if (this.l >= 100)\n            return 0;\n        return Math.round(((Math.max(this._r, this._g, this._b) -\n            Math.min(this._r, this._g, this._b)) *\n            (100 - Math.abs(this.l * 2 - 100))) /\n            100);\n    }\n    // hue (0-360)\n    get h() {\n        let H = 0;\n        let R = this.r;\n        let G = this.g;\n        let B = this.b;\n        if (R >= G && G >= B) {\n            H = 60 * ((G - B) / (R - B));\n        }\n        else if (G > R && R >= B) {\n            H = 60 * (2 - (R - B) / (G - B));\n        }\n        else if (G >= B && B > R) {\n            H = 60 * (2 + (B - R) / (G - R));\n        }\n        else if (B > G && G > R) {\n            H = 60 * (4 - (G - R) / (B - R));\n        }\n        else if (B > R && R >= G) {\n            H = 60 * (4 + (R - G) / (B - G));\n        }\n        else {\n            H = 60 * (6 - (B - G) / (R - G));\n        }\n        return Math.round(H);\n    }\n    isNull() {\n        return this._r < 0;\n    }\n    equals(other) {\n        if (typeof other === \"string\") {\n            return other.length > 4\n                ? this.toString(true) == other\n                : this.toString() == other;\n        }\n        else if (typeof other === \"number\") {\n            return this.toInt() == other || this.toInt(true) == other;\n        }\n        const O = Color.from(other);\n        if (this.isNull())\n            return O.isNull();\n        return this.every((v, i) => {\n            return v == (O[i] || 0);\n        });\n    }\n    copy(other) {\n        if (Array.isArray(other)) {\n            this.set(other);\n        }\n        else {\n            const O = Color.from(other);\n            this.set(O);\n        }\n        if (other instanceof Color) {\n            this.dances = other.dances;\n            this.name = other.name;\n        }\n        else {\n            this._changed();\n        }\n        return this;\n    }\n    _changed() {\n        this.name = undefined;\n        return this;\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor();\n        other.copy(this);\n        return other;\n    }\n    assign(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = arguments[i] || 0;\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    assignRGB(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((arguments[i] || 0) / 2.55);\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    nullify() {\n        this[0] = -1;\n        this.dances = false;\n        return this._changed();\n    }\n    blackOut() {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = 0;\n        }\n        this.dances = false;\n        return this._changed();\n    }\n    toInt(base256 = false) {\n        if (this.isNull())\n            return -1;\n        return toColorInt(this._r, this._g, this._b, base256);\n    }\n    clamp() {\n        if (this.isNull())\n            return this;\n        this._r = Math.min(100, Math.max(0, this._r));\n        this._g = Math.min(100, Math.max(0, this._g));\n        this._b = Math.min(100, Math.max(0, this._b));\n        return this._changed();\n    }\n    mix(other, percent) {\n        const O = Color.from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        percent = Math.min(100, Math.max(0, percent));\n        const keepPct = 100 - percent;\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * keepPct + O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    lighten(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 100 * percent) / 100);\n        }\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    darken(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 0 * percent) / 100);\n        }\n        return this._changed();\n    }\n    bake() {\n        if (this.isNull())\n            return this;\n        const d = this;\n        if (d[3] + d[4] + d[5] + d[6]) {\n            const rand = this._rand ? Math.floor(options.random() * this._rand) : 0;\n            const redRand = this._redRand\n                ? Math.floor(options.random() * this._redRand)\n                : 0;\n            const greenRand = this._greenRand\n                ? Math.floor(options.random() * this._greenRand)\n                : 0;\n            const blueRand = this._blueRand\n                ? Math.floor(options.random() * this._blueRand)\n                : 0;\n            this._r += rand + redRand;\n            this._g += rand + greenRand;\n            this._b += rand + blueRand;\n            for (let i = 3; i < this.length; ++i) {\n                this[i] = 0;\n            }\n            return this._changed();\n        }\n        return this;\n    }\n    // Adds a color to this one\n    add(other, percent = 100) {\n        const O = Color.from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] += Math.round((O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    scale(percent) {\n        if (this.isNull() || percent == 100)\n            return this;\n        percent = Math.max(0, percent);\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * percent) / 100);\n        }\n        return this._changed();\n    }\n    multiply(other) {\n        if (this.isNull())\n            return this;\n        let data = other;\n        if (!Array.isArray(other)) {\n            if (other.isNull())\n                return this;\n            data = other;\n        }\n        const len = Math.max(3, Math.min(this.length, data.length));\n        for (let i = 0; i < len; ++i) {\n            this[i] = Math.round((this[i] * (data[i] || 0)) / 100);\n        }\n        return this._changed();\n    }\n    // scales rgb down to a max of 100\n    normalize() {\n        if (this.isNull())\n            return this;\n        const max = Math.max(this._r, this._g, this._b);\n        if (max <= 100)\n            return this;\n        this._r = Math.round((100 * this._r) / max);\n        this._g = Math.round((100 * this._g) / max);\n        this._b = Math.round((100 * this._b) / max);\n        return this._changed();\n    }\n    /**\n     * Returns the css code for the current RGB values of the color.\n     * @param base256 - Show in base 256 (#abcdef) instead of base 16 (#abc)\n     */\n    css(base256 = false) {\n        const v = this.toInt(base256);\n        return \"#\" + v.toString(16).padStart(base256 ? 6 : 3, \"0\");\n    }\n    toString(base256 = false) {\n        if (this.name)\n            return this.name;\n        if (this.isNull())\n            return \"null color\";\n        return this.css(base256);\n    }\n    // adjusts the luminosity of 2 colors to ensure there is enough separation between them\n    static separate(a, b) {\n        if (a.isNull() || b.isNull())\n            return;\n        const A = a.clone().clamp();\n        const B = b.clone().clamp();\n        // console.log('separate');\n        // console.log('- a=%s, h=%d, s=%d, l=%d', A.toString(), A.h, A.s, A.l);\n        // console.log('- b=%s, h=%d, s=%d, l=%d', B.toString(), B.h, B.s, B.l);\n        let hDiff = Math.abs(A.h - B.h);\n        if (hDiff > 180) {\n            hDiff = 360 - hDiff;\n        }\n        if (hDiff > 45)\n            return; // colors are far enough apart in hue to be distinct\n        const dist = 40;\n        if (Math.abs(A.l - B.l) >= dist)\n            return;\n        // Get them sorted by saturation ( we will darken the more saturated color and lighten the other)\n        const [lo, hi] = [A, B].sort((a, b) => a.s - b.s);\n        // console.log('- lo=%s, hi=%s', lo.toString(), hi.toString());\n        while (hi.l - lo.l < dist) {\n            hi.mix(WHITE, 5);\n            lo.mix(BLACK, 5);\n        }\n        a.copy(A);\n        b.copy(B);\n        // console.log('=>', a.toString(), b.toString());\n    }\n    static swap(a, b) {\n        const temp = a.clone();\n        a.copy(b);\n        b.copy(temp);\n    }\n    static diff(a, b) {\n        return Math.round((a._r - b._r) * (a._r - b._r) * 0.2126 +\n            (a._g - b._g) * (a._g - b._g) * 0.7152 +\n            (a._b - b._b) * (a._b - b._b) * 0.0722);\n    }\n}\nconst BLACK = Color.install(\"black\", 0x000);\nconst WHITE = Color.install(\"white\", 0xfff);\nColor.installSpread(\"teal\", [30, 100, 100]);\nColor.installSpread(\"brown\", [60, 40, 0]);\nColor.installSpread(\"tan\", [80, 70, 55]); // 80, 67,\t\t15);\nColor.installSpread(\"pink\", [100, 60, 66]);\nColor.installSpread(\"gray\", [50, 50, 50]);\nColor.installSpread(\"yellow\", [100, 100, 0]);\nColor.installSpread(\"purple\", [100, 0, 100]);\nColor.installSpread(\"green\", [0, 100, 0]);\nColor.installSpread(\"orange\", [100, 50, 0]);\nColor.installSpread(\"blue\", [0, 0, 100]);\nColor.installSpread(\"red\", [100, 0, 0]);\nColor.installSpread(\"amber\", [100, 75, 0]);\nColor.installSpread(\"flame\", [100, 25, 0]);\nColor.installSpread(\"fuchsia\", [100, 0, 100]);\nColor.installSpread(\"magenta\", [100, 0, 75]);\nColor.installSpread(\"crimson\", [100, 0, 25]);\nColor.installSpread(\"lime\", [75, 100, 0]);\nColor.installSpread(\"chartreuse\", [50, 100, 0]);\nColor.installSpread(\"sepia\", [50, 40, 25]);\nColor.installSpread(\"violet\", [50, 0, 100]);\nColor.installSpread(\"han\", [25, 0, 100]);\nColor.installSpread(\"cyan\", [0, 100, 100]);\nColor.installSpread(\"turquoise\", [0, 100, 75]);\nColor.installSpread(\"sea\", [0, 100, 50]);\nColor.installSpread(\"sky\", [0, 75, 100]);\nColor.installSpread(\"azure\", [0, 50, 100]);\nColor.installSpread(\"silver\", [75, 75, 75]);\nColor.installSpread(\"gold\", [100, 85, 0]);\n","import { Color } from \"./color\";\nexport class DataBuffer {\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n        this._data = new Uint32Array(width * height);\n    }\n    get data() {\n        return this._data;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get(x, y) {\n        let index = y * this.width + x;\n        const style = this._data[index] || 0;\n        const glyph = style >> 24;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        return { glyph, fg, bg };\n    }\n    _toGlyph(ch) {\n        if (ch === null || ch === undefined)\n            return -1;\n        return ch.charCodeAt(0);\n    }\n    draw(x, y, glyph = -1, fg = -1, bg = -1) {\n        let index = y * this.width + x;\n        const current = this._data[index] || 0;\n        if (typeof glyph !== \"number\") {\n            glyph = this._toGlyph(glyph);\n        }\n        if (typeof fg !== \"number\") {\n            fg = Color.from(fg).toInt();\n        }\n        if (typeof bg !== \"number\") {\n            bg = Color.from(bg).toInt();\n        }\n        glyph = glyph >= 0 ? glyph & 0xff : current >> 24;\n        bg = bg >= 0 ? bg & 0xfff : (current >> 12) & 0xfff;\n        fg = fg >= 0 ? fg & 0xfff : current & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data[index] = style;\n        return this;\n    }\n    // This is without opacity - opacity must be done in Mixer\n    drawSprite(x, y, sprite) {\n        let glyph = sprite.ch\n            ? sprite.ch\n            : sprite.glyph !== undefined\n                ? sprite.glyph\n                : -1;\n        // const fg = sprite.fg ? sprite.fg.toInt() : -1;\n        // const bg = sprite.bg ? sprite.bg.toInt() : -1;\n        return this.draw(x, y, glyph, sprite.fg, sprite.bg);\n    }\n    blackOut(x, y) {\n        if (arguments.length == 0) {\n            return this.fill(0, 0, 0);\n        }\n        return this.draw(x, y, 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xfff, bg = 0) {\n        if (typeof glyph == \"string\") {\n            glyph = this._toGlyph(glyph);\n        }\n        glyph = glyph & 0xff;\n        fg = fg & 0xfff;\n        bg = bg & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data.fill(style);\n        return this;\n    }\n    copy(other) {\n        this._data.set(other._data);\n        return this;\n    }\n}\nexport class Buffer extends DataBuffer {\n    constructor(canvas) {\n        super(canvas.width, canvas.height);\n        this._canvas = canvas;\n        canvas.copyTo(this);\n    }\n    // get canvas() { return this._canvas; }\n    _toGlyph(ch) {\n        return this._canvas.glyphs.forChar(ch);\n    }\n    render() {\n        this._canvas.copy(this);\n        return this;\n    }\n    copyFromCanvas() {\n        this._canvas.copyTo(this);\n        return this;\n    }\n}\n","import { Color } from \"./color\";\nexport class Mixer {\n    constructor() {\n        this.ch = -1;\n        this.fg = new Color();\n        this.bg = new Color();\n    }\n    _changed() {\n        return this;\n    }\n    copy(other) {\n        this.ch = other.ch;\n        this.fg.copy(other.fg);\n        this.bg.copy(other.bg);\n        return this._changed();\n    }\n    clone() {\n        const other = new Mixer();\n        other.copy(this);\n        return other;\n    }\n    nullify() {\n        this.ch = -1;\n        this.fg.nullify();\n        this.bg.nullify();\n        return this._changed();\n    }\n    blackOut() {\n        this.ch = 0;\n        this.fg.blackOut();\n        this.bg.blackOut();\n        return this._changed();\n    }\n    draw(ch = -1, fg = -1, bg = -1) {\n        if (ch && ch !== -1) {\n            this.ch = ch;\n        }\n        if (fg !== -1 && fg !== null) {\n            fg = Color.from(fg);\n            this.fg.copy(fg);\n        }\n        if (bg !== -1 && bg !== null) {\n            bg = Color.from(bg);\n            this.bg.copy(bg);\n        }\n        return this._changed();\n    }\n    drawSprite(info, opacity) {\n        if (opacity === undefined)\n            opacity = info.opacity;\n        if (opacity === undefined)\n            opacity = 100;\n        if (opacity <= 0)\n            return;\n        if (info.ch)\n            this.ch = info.ch;\n        else if (info.glyph !== undefined)\n            this.ch = info.glyph;\n        if (info.fg)\n            this.fg.mix(info.fg, opacity);\n        if (info.bg)\n            this.bg.mix(info.bg, opacity);\n        return this._changed();\n    }\n    invert() {\n        [this.bg, this.fg] = [this.fg, this.bg];\n        return this._changed();\n    }\n    multiply(color, fg = true, bg = true) {\n        color = Color.from(color);\n        if (fg) {\n            this.fg.multiply(color);\n        }\n        if (bg) {\n            this.bg.multiply(color);\n        }\n        return this._changed();\n    }\n    mix(color, fg = 50, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.mix(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.mix(color, bg);\n        }\n        return this._changed();\n    }\n    add(color, fg = 100, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.add(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.add(color, bg);\n        }\n        return this._changed();\n    }\n    separate() {\n        Color.separate(this.fg, this.bg);\n        return this._changed();\n    }\n    bake() {\n        this.fg.bake();\n        this.bg.bake();\n        this._changed();\n        return {\n            ch: this.ch,\n            fg: this.fg.toInt(),\n            bg: this.bg.toInt(),\n        };\n    }\n}\n","import { Color } from \"./color\";\nexport class Sprite {\n    constructor(ch, fg, bg, opacity) {\n        this.ch = ch;\n        this.fg = fg;\n        this.bg = bg;\n        this.opacity = opacity;\n    }\n    static make(...args) {\n        let ch = null, fg = -1, bg = -1, opacity;\n        if (args.length == 0) {\n            return new Sprite(null, -1, -1);\n        }\n        else if (args.length == 1 && Array.isArray(args[0])) {\n            args = args[0];\n        }\n        if (args.length > 1) {\n            ch = args[0] || null;\n            fg = args[1];\n            bg = args[2];\n            opacity = args[3];\n        }\n        else if (args.length == 1) {\n            if (typeof args[0] === \"string\") {\n                bg = args[0];\n            }\n            else {\n                const sprite = args[0];\n                ch = sprite.ch || null;\n                fg = sprite.fg || -1;\n                bg = sprite.bg || -1;\n                opacity = sprite.opacity;\n            }\n        }\n        if (typeof fg === \"string\")\n            fg = Color.from(fg);\n        else if (Array.isArray(fg))\n            fg = Color.make(fg);\n        else if (fg === undefined || fg === null)\n            fg = -1;\n        if (typeof bg === \"string\")\n            bg = Color.from(bg);\n        else if (Array.isArray(bg))\n            bg = Color.make(bg);\n        else if (bg === undefined || bg === null)\n            bg = -1;\n        return new this(ch, fg, bg, opacity);\n    }\n    static install(name, ...args) {\n        let sprite;\n        // @ts-ignore\n        sprite = this.make(...args);\n        sprite.name = name;\n        sprites[name] = sprite;\n        return sprite;\n    }\n}\nexport const sprites = {};\n"],"names":["VS","trim","FS","Glyphs","[object Object]","opts","this","_tileWidth","_tileHeight","needsUpdate","_map","font","_node","document","createElement","_ctx","node","getContext","_configure","src","startsWith","Error","el","getElementById","glyph","tileWidth","width","tileHeight","height","drawImage","glyphs","basicOnly","basic","_initGlyphs","ctx","pxWidth","pxHeight","ch","fillStyle","fillRect","size","fontSize","Math","max","textAlign","textBaseline","n","x","y","floor","cx","cy","save","beginPath","rect","clip","undefined","fillText","restore","i","draw","String","fromCharCode","forEach","NotSupportedError","params","super","captureStackTrace","name","BaseCanvas","options","_renderRequested","_autoRender","_width","_height","_createNode","_createContext","_glyphs","clientWidth","clientHeight","_setGlyphs","render","div","console","warn","appendChild","resize","fg","bg","style","_set","requestAnimationFrame","index","_data","_requestRender","buffer","set","data","Canvas","gl","_gl","_buffers","_attribs","_uniforms","p","sources","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","type","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaders.VS","shaders.FS","useProgram","attributeCount","ACTIVE_ATTRIBUTES","enableVertexAttribArray","info","getActiveAttrib","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","uniform1i","_texture","t","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","position","deleteBuffer","uv","buffers","attribs","tileCount","positionData","Uint16Array","QUAD","length","uvData","Uint8Array","value","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribIPointer","UNSIGNED_SHORT","bufferData","STATIC_DRAW","UNSIGNED_BYTE","createGeometry","Object","assign","Uint32Array","UNSIGNED_INT","uniforms","uniform2uiv","_uploadGlyphs","activeTexture","TEXTURE0","texImage2D","RGBA","viewport","uniform2ui","_createGeometry","_createData","dest","DYNAMIC_DRAW","drawArrays","TRIANGLES","Canvas2D","result","_changed","Int8Array","_renderCell","px","py","gx","gy","d","getImageData","di","pct","inv","putImageData","random","bind","colors","Color","Int16Array","r","g","b","rand","redRand","greenRand","blueRand","dances","vals","base256","push","round","css","c","Number","parseInt","substring","val","_r","_g","_b","arg","clone","fromCss","fromName","Array","isArray","fromArray","fromNumber","JSON","stringify","args","make","base","install","lighten","darken","v","_rand","_redRand","_greenRand","_blueRand","l","min","s","abs","h","H","R","G","B","other","toString","toInt","O","from","isNull","every","constructor","copy","arguments","toColorInt","percent","blackOut","keepPct","len","padStart","a","A","clamp","hDiff","lo","hi","sort","mix","WHITE","BLACK","temp","installSpread","DataBuffer","charCodeAt","current","_toGlyph","sprite","fill","Mixer","nullify","opacity","color","multiply","add","separate","bake","Sprite","canvas","_canvas","copyTo","forChar","image","fromImage","HTMLImageElement","e","fromFont"],"mappings":"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"}