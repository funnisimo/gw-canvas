{"version":3,"file":"gw-canvas.js","sources":["../js/shaders.js","../js/glyphs.js","../js/color.js","../js/layer.js","../js/canvas.js","../js/mixer.js","../js/buffer.js","../js/config.js","../js/sprite.js"],"sourcesContent":["// Based on: https://github.com/ondras/fastiles/blob/master/ts/shaders.ts (v2.1.0)\nexport const VS = `\n#version 300 es\n\nin vec2 position;\nin uvec2 offset;\nin uint fg;\nin uint bg;\nin uint glyph;\n\nout vec2 fsOffset;\nout vec3 fgRgb;\nout vec3 bgRgb;\nflat out uvec2 fontPos;\n\nvoid main() {\n\tgl_Position = vec4(position, 0.0, 1.0);\n\n\tfloat fgr = float((fg & uint(0xF00)) >> 8);\n\tfloat fgg = float((fg & uint(0x0F0)) >> 4);\n\tfloat fgb = float(fg & uint(0x00F));\n\tfgRgb = vec3(fgr, fgg, fgb) / 15.0;\n  \n\tfloat bgr = float((bg & uint(0xF00)) >> 8);\n\tfloat bgg = float((bg & uint(0x0F0)) >> 4);\n\tfloat bgb = float((bg & uint(0x00F)));\n\tbgRgb = vec3(bgr, bgg, bgb) / 15.0;\n\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tfontPos = uvec2(glyphX, glyphY);\n\n\tfsOffset = vec2(offset);\n}`.trim();\nexport const FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 fsOffset;\nin vec3 fgRgb;\nin vec3 bgRgb;\nflat in uvec2 fontPos;\n\nout vec4 fragColor;\n\nuniform sampler2D font;\nuniform uvec2 tileSize;\n\nvoid main() {\n\tuvec2 fontPx = (tileSize * fontPos) + uvec2(vec2(tileSize) * fsOffset);\n\tvec3 texel = texelFetch(font, ivec2(fontPx), 0).rgb;\n\n\tfragColor = vec4(mix(bgRgb, fgRgb, texel), 1.0);\n}`.trim();\n","export class Glyphs {\n    constructor(opts = {}) {\n        this._tileWidth = 12;\n        this._tileHeight = 16;\n        this.needsUpdate = true;\n        this._map = {};\n        opts.font = opts.font || 'monospace';\n        this._node = document.createElement('canvas');\n        this._ctx = this.node.getContext('2d');\n        this._configure(opts);\n    }\n    static fromImage(src) {\n        if (typeof src === 'string') {\n            if (src.startsWith('data:'))\n                throw new Error('Glyph: You must load a data string into an image element and use that.');\n            const el = document.getElementById(src);\n            if (!el)\n                throw new Error('Glyph: Failed to find image element with id:' + src);\n            src = el;\n        }\n        const glyph = new this({ tileWidth: src.width / 16, tileHeight: src.height / 16 });\n        glyph._ctx.drawImage(src, 0, 0);\n        return glyph;\n    }\n    static fromFont(src) {\n        if (typeof src === 'string') {\n            src = { font: src };\n        }\n        const glyphs = new this(src);\n        const basicOnly = src.basicOnly || src.basic || false;\n        glyphs._initGlyphs(basicOnly);\n        return glyphs;\n    }\n    get node() { return this._node; }\n    get ctx() { return this._ctx; }\n    get tileWidth() { return this._tileWidth; }\n    get tileHeight() { return this._tileHeight; }\n    get pxWidth() { return this._node.width; }\n    get pxHeight() { return this._node.height; }\n    forChar(ch) {\n        if (ch === null || ch === undefined)\n            return -1;\n        return this._map[ch] || -1;\n    }\n    _configure(opts) {\n        this._tileWidth = opts.tileWidth || this.tileWidth;\n        this._tileHeight = opts.tileHeight || this.tileHeight;\n        this.node.width = 16 * this.tileWidth;\n        this.node.height = 16 * this.tileHeight;\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(0, 0, this.pxWidth, this.pxHeight);\n        const size = opts.fontSize || opts.size || Math.max(this.tileWidth, this.tileHeight);\n        this._ctx.font = '' + size + 'px ' + opts.font;\n        this._ctx.textAlign = 'center';\n        this._ctx.textBaseline = 'middle';\n        this._ctx.fillStyle = 'white';\n    }\n    draw(n, ch) {\n        if (n > 256)\n            throw new Error('Cannot draw more than 256 glyphs.');\n        const x = (n % 16) * this.tileWidth;\n        const y = Math.floor(n / 16) * this.tileHeight;\n        const cx = x + Math.floor(this.tileWidth / 2);\n        const cy = y + Math.floor(this.tileHeight / 2);\n        this._ctx.save();\n        this._ctx.beginPath();\n        this._ctx.rect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.clip();\n        if (typeof ch === 'function') {\n            ch(this._ctx, x, y, this.tileWidth, this.tileHeight);\n        }\n        else {\n            if (this._map[ch] === undefined)\n                this._map[ch] = n;\n            this._ctx.fillText(ch, cx, cy);\n        }\n        this._ctx.restore();\n        this.needsUpdate = true;\n    }\n    _initGlyphs(basicOnly = false) {\n        for (let i = 32; i < 127; ++i) {\n            this.draw(i, String.fromCharCode(i));\n        }\n        if (!basicOnly) {\n            [' ', '\\u263a', '\\u263b', '\\u2665', '\\u2666', '\\u2663', '\\u2660', '\\u263c',\n                '\\u2600', '\\u2605', '\\u2606', '\\u2642', '\\u2640', '\\u266a', '\\u266b', '\\u2638',\n                '\\u25b6', '\\u25c0', '\\u2195', '\\u203c', '\\u204b', '\\u262f', '\\u2318', '\\u2616',\n                '\\u2191', '\\u2193', '\\u2192', '\\u2190', '\\u2126', '\\u2194', '\\u25b2', '\\u25bc',\n            ].forEach((ch, i) => {\n                this.draw(i, ch);\n            });\n            // [\n            // '\\u2302',\n            // '\\u2b09', '\\u272a', '\\u2718', '\\u2610', '\\u2611', '\\u25ef', '\\u25ce', '\\u2690',\n            // '\\u2691', '\\u2598', '\\u2596', '\\u259d', '\\u2597', '\\u2744', '\\u272d', '\\u2727',\n            // '\\u25e3', '\\u25e4', '\\u25e2', '\\u25e5', '\\u25a8', '\\u25a7', '\\u259a', '\\u265f',\n            // '\\u265c', '\\u265e', '\\u265d', '\\u265b', '\\u265a', '\\u301c', '\\u2694', '\\u2692',\n            // '\\u25b6', '\\u25bc', '\\u25c0', '\\u25b2', '\\u25a4', '\\u25a5', '\\u25a6', '\\u257a',\n            // '\\u257b', '\\u2578', '\\u2579', '\\u2581', '\\u2594', '\\u258f', '\\u2595', '\\u272d',\n            // '\\u2591', '\\u2592', '\\u2593', '\\u2503', '\\u252b', '\\u2561', '\\u2562', '\\u2556',\n            // '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255d', '\\u255c', '\\u255b', '\\u2513',\n            // '\\u2517', '\\u253b', '\\u2533', '\\u2523', '\\u2501', '\\u254b', '\\u255e', '\\u255f',\n            // '\\u255a', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256c', '\\u2567',\n            // '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256b',\n            // '\\u256a', '\\u251b', '\\u250f', '\\u2588', '\\u2585', '\\u258c', '\\u2590', '\\u2580',\n            // '\\u03b1', '\\u03b2', '\\u0393', '\\u03c0', '\\u03a3', '\\u03c3', '\\u03bc', '\\u03c4',\n            // '\\u03a6', '\\u03b8', '\\u03a9', '\\u03b4', '\\u221e', '\\u03b8', '\\u03b5', '\\u03b7',\n            // '\\u039e', '\\u00b1', '\\u2265', '\\u2264', '\\u2234', '\\u2237', '\\u00f7', '\\u2248',\n            // '\\u22c4', '\\u22c5', '\\u2217', '\\u27b5', '\\u2620', '\\u2625', '\\u25fc', '\\u25fb'\n            // ].forEach( (ch, i) => {\n            //   this.draw(i + 127, ch); \n            // });\n            ['\\u2302',\n                '\\u00C7', '\\u00FC', '\\u00E9', '\\u00E2', '\\u00E4', '\\u00E0', '\\u00E5', '\\u00E7',\n                '\\u00EA', '\\u00EB', '\\u00E8', '\\u00EF', '\\u00EE', '\\u00EC', '\\u00C4', '\\u00C5',\n                '\\u00C9', '\\u00E6', '\\u00C6', '\\u00F4', '\\u00F6', '\\u00F2', '\\u00FB', '\\u00F9',\n                '\\u00FF', '\\u00D6', '\\u00DC', '\\u00A2', '\\u00A3', '\\u00A5', '\\u20A7', '\\u0192',\n                '\\u00E1', '\\u00ED', '\\u00F3', '\\u00FA', '\\u00F1', '\\u00D1', '\\u00AA', '\\u00BA',\n                '\\u00BF', '\\u2310', '\\u00AC', '\\u00BD', '\\u00BC', '\\u00A1', '\\u00AB', '\\u00BB',\n                '\\u2591', '\\u2592', '\\u2593', '\\u2502', '\\u2524', '\\u2561', '\\u2562', '\\u2556',\n                '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255D', '\\u255C', '\\u255B', '\\u2510',\n                '\\u2514', '\\u2534', '\\u252C', '\\u251C', '\\u2500', '\\u253C', '\\u255E', '\\u255F',\n                '\\u255A', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256C', '\\u2567',\n                '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256B',\n                '\\u256A', '\\u2518', '\\u250C', '\\u2588', '\\u2584', '\\u258C', '\\u2590', '\\u2580',\n                '\\u03B1', '\\u00DF', '\\u0393', '\\u03C0', '\\u03A3', '\\u03C3', '\\u00B5', '\\u03C4',\n                '\\u03A6', '\\u0398', '\\u03A9', '\\u03B4', '\\u221E', '\\u03C6', '\\u03B5', '\\u2229',\n                '\\u2261', '\\u00B1', '\\u2265', '\\u2264', '\\u2320', '\\u2321', '\\u00F7', '\\u2248',\n                '\\u00B0', '\\u2219', '\\u00B7', '\\u221A', '\\u207F', '\\u00B2', '\\u25A0', '\\u00A0'\n            ].forEach((ch, i) => {\n                this.draw(i + 127, ch);\n            });\n        }\n    }\n}\n","export const colors = {};\nfunction clamp(v, n, x) {\n    return Math.max(n, Math.min(x, v));\n}\n// All colors are const!!!\nexport class Color {\n    // values are 0-100 for normal RGBA\n    constructor(r = -1, g = 0, b = 0, a = 100) {\n        if (r < 0) {\n            a = 0;\n            r = 0;\n        }\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n    rgb() {\n        return [this.r, this.g, this.b];\n    }\n    rgba() {\n        return [this.r, this.g, this.b, this.a];\n    }\n    isNull() {\n        return this.a === 0;\n    }\n    alpha(v) {\n        return new Color(this.r, this.g, this.b, clamp(v, 0, 100));\n    }\n    // luminosity (0-100)\n    get l() {\n        return Math.round(0.5 *\n            (Math.min(this.r, this.g, this.b) + Math.max(this.r, this.g, this.b)));\n    }\n    // saturation (0-100)\n    get s() {\n        if (this.l >= 100)\n            return 0;\n        return Math.round(((Math.max(this.r, this.g, this.b) - Math.min(this.r, this.g, this.b)) *\n            (100 - Math.abs(this.l * 2 - 100))) /\n            100);\n    }\n    // hue (0-360)\n    get h() {\n        let H = 0;\n        let R = this.r;\n        let G = this.g;\n        let B = this.b;\n        if (R >= G && G >= B) {\n            H = 60 * ((G - B) / (R - B));\n        }\n        else if (G > R && R >= B) {\n            H = 60 * (2 - (R - B) / (G - B));\n        }\n        else if (G >= B && B > R) {\n            H = 60 * (2 + (B - R) / (G - R));\n        }\n        else if (B > G && G > R) {\n            H = 60 * (4 - (G - R) / (B - R));\n        }\n        else if (B > R && R >= G) {\n            H = 60 * (4 + (R - G) / (B - G));\n        }\n        else {\n            H = 60 * (6 - (B - G) / (R - G));\n        }\n        return Math.round(H);\n    }\n    equals(other) {\n        if (typeof other === \"string\") {\n            if (other.startsWith(\"#\")) {\n                if (other.length == 4) {\n                    return this.css() === other;\n                }\n            }\n            if (this.name && this.name === other)\n                return true;\n        }\n        else if (typeof other === \"number\") {\n            if (other < 0x1000)\n                return this.toInt() === other;\n        }\n        const O = from(other);\n        if (this.isNull())\n            return O.isNull();\n        if (O.isNull())\n            return false;\n        return this.r === O.r && this.g === O.g && this.b === O.b && this.a === O.a;\n    }\n    toInt() {\n        if (this.isNull())\n            return -1;\n        const r = Math.max(0, Math.min(15, Math.round((this.r / 100) * 15)));\n        const g = Math.max(0, Math.min(15, Math.round((this.g / 100) * 15)));\n        const b = Math.max(0, Math.min(15, Math.round((this.b / 100) * 15)));\n        // TODO - alpha\n        return (r << 8) + (g << 4) + b;\n    }\n    toLight() {\n        return this.rgb();\n    }\n    clamp() {\n        if (this.isNull())\n            return this;\n        return make([\n            clamp(this.r, 0, 100),\n            clamp(this.g, 0, 100),\n            clamp(this.b, 0, 100),\n            clamp(this.a, 0, 100),\n        ]);\n    }\n    blend(other) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (O.a === 100)\n            return O;\n        const pct = O.a / 100;\n        const keepPct = 1 - pct;\n        const newColor = make(Math.round(this.r * keepPct + O.r * pct), Math.round(this.g * keepPct + O.g * pct), Math.round(this.b * keepPct + O.b * pct), Math.round(O.a + this.a * keepPct));\n        return newColor;\n    }\n    mix(other, percent) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (percent >= 100)\n            return O;\n        const pct = clamp(percent, 0, 100) / 100;\n        const keepPct = 1 - pct;\n        const newColor = make(Math.round(this.r * keepPct + O.r * pct), Math.round(this.g * keepPct + O.g * pct), Math.round(this.b * keepPct + O.b * pct), (this.isNull() ? 100 : this.a) * keepPct + O.a * pct);\n        return newColor;\n    }\n    // Only adjusts r,g,b\n    lighten(percent) {\n        if (this.isNull())\n            return this;\n        if (percent <= 0)\n            return this;\n        const pct = clamp(percent, 0, 100) / 100;\n        const keepPct = 1 - pct;\n        return make(Math.round(this.r * keepPct + 100 * pct), Math.round(this.g * keepPct + 100 * pct), Math.round(this.b * keepPct + 100 * pct), this.a);\n    }\n    // Only adjusts r,g,b\n    darken(percent) {\n        if (this.isNull())\n            return this;\n        const pct = clamp(percent, 0, 100) / 100;\n        const keepPct = 1 - pct;\n        return make(Math.round(this.r * keepPct + 0 * pct), Math.round(this.g * keepPct + 0 * pct), Math.round(this.b * keepPct + 0 * pct), this.a);\n    }\n    bake(_clearDancing = false) {\n        return this;\n    }\n    // Adds a color to this one\n    add(other, percent = 100) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        const alpha = (O.a / 100) * (percent / 100);\n        return new Color(Math.round(this.r + O.r * alpha), Math.round(this.g + O.g * alpha), Math.round(this.b + O.b * alpha), clamp(Math.round(this.a + alpha * 100), 0, 100));\n    }\n    scale(percent) {\n        if (this.isNull() || percent == 100)\n            return this;\n        const pct = Math.max(0, percent) / 100;\n        return make(Math.round(this.r * pct), Math.round(this.g * pct), Math.round(this.b * pct), this.a);\n    }\n    multiply(other) {\n        if (this.isNull())\n            return this;\n        let data;\n        if (Array.isArray(other)) {\n            if (other.length < 3)\n                throw new Error(\"requires at least r,g,b values.\");\n            data = other;\n        }\n        else {\n            if (other.isNull())\n                return this;\n            data = other.rgb();\n        }\n        const pct = (data[3] || 100) / 100;\n        return make(Math.round(this.r * (data[0] / 100) * pct), Math.round(this.g * (data[1] / 100) * pct), Math.round(this.b * (data[2] / 100) * pct), 100);\n    }\n    // scales rgb down to a max of 100\n    normalize() {\n        if (this.isNull())\n            return this;\n        const max = Math.max(this.r, this.g, this.b);\n        if (max <= 100)\n            return this;\n        return make(Math.round((100 * this.r) / max), Math.round((100 * this.g) / max), Math.round((100 * this.b) / max), 100);\n    }\n    /**\n     * Returns the css code for the current RGB values of the color.\n     * @param base256 - Show in base 256 (#abcdef) instead of base 16 (#abc)\n     */\n    css() {\n        const v = this.toInt();\n        if (v < 0)\n            return \"transparent\";\n        return \"#\" + v.toString(16).padStart(3, \"0\");\n    }\n    toString() {\n        if (this.name)\n            return this.name;\n        if (this.isNull())\n            return \"null color\";\n        return this.css();\n    }\n}\nexport function fromArray(vals, base256 = false) {\n    while (vals.length < 3)\n        vals.push(0);\n    if (base256) {\n        for (let i = 0; i < 3; ++i) {\n            vals[i] = Math.round(((vals[i] || 0) * 100) / 255);\n        }\n    }\n    return new Color(...vals);\n}\nexport function fromCss(css) {\n    if (!css.startsWith(\"#\")) {\n        throw new Error('Color CSS strings must be of form \"#abc\" or \"#abcdef\" - received: [' +\n            css +\n            \"]\");\n    }\n    const c = Number.parseInt(css.substring(1), 16);\n    let r, g, b;\n    if (css.length == 4) {\n        r = Math.round(((c >> 8) / 15) * 100);\n        g = Math.round((((c & 0xf0) >> 4) / 15) * 100);\n        b = Math.round(((c & 0xf) / 15) * 100);\n    }\n    else {\n        r = Math.round(((c >> 16) / 255) * 100);\n        g = Math.round((((c & 0xff00) >> 8) / 255) * 100);\n        b = Math.round(((c & 0xff) / 255) * 100);\n    }\n    return new Color(r, g, b);\n}\nexport function fromName(name) {\n    const c = colors[name];\n    if (!c) {\n        throw new Error(\"Unknown color name: \" + name);\n    }\n    return c;\n}\nexport function fromNumber(val, base256 = false) {\n    if (val < 0) {\n        return new Color();\n    }\n    else if (base256 || val > 0xfff) {\n        return new Color(Math.round((((val & 0xff0000) >> 16) * 100) / 255), Math.round((((val & 0xff00) >> 8) * 100) / 255), Math.round(((val & 0xff) * 100) / 255), 100);\n    }\n    else {\n        return new Color(Math.round((((val & 0xf00) >> 8) * 100) / 15), Math.round((((val & 0xf0) >> 4) * 100) / 15), Math.round(((val & 0xf) * 100) / 15), 100);\n    }\n}\nexport function make(...args) {\n    let arg = args[0];\n    let base256 = args[1];\n    if (args.length == 0)\n        return new Color();\n    if (args.length > 2) {\n        arg = args;\n        base256 = false; // TODO - Change this!!!\n    }\n    if (arg === undefined || arg === null)\n        return new Color(-1);\n    if (arg instanceof Color) {\n        return arg;\n    }\n    if (typeof arg === \"string\") {\n        if (arg.startsWith(\"#\")) {\n            return fromCss(arg);\n        }\n        return fromName(arg);\n    }\n    else if (Array.isArray(arg)) {\n        return fromArray(arg, base256);\n    }\n    else if (typeof arg === \"number\") {\n        return fromNumber(arg, base256);\n    }\n    throw new Error(\"Failed to make color - unknown argument: \" + JSON.stringify(arg));\n}\nexport function from(...args) {\n    const arg = args[0];\n    if (arg instanceof Color)\n        return arg;\n    if (arg === undefined)\n        return new Color(-1);\n    if (typeof arg === \"string\") {\n        if (!arg.startsWith(\"#\")) {\n            return fromName(arg);\n        }\n    }\n    return make(arg, args[1]);\n}\n// adjusts the luminosity of 2 colors to ensure there is enough separation between them\nexport function separate(a, b) {\n    if (a.isNull() || b.isNull())\n        return [a, b];\n    const A = a.clamp();\n    const B = b.clamp();\n    // console.log('separate');\n    // console.log('- a=%s, h=%d, s=%d, l=%d', A.toString(), A.h, A.s, A.l);\n    // console.log('- b=%s, h=%d, s=%d, l=%d', B.toString(), B.h, B.s, B.l);\n    let hDiff = Math.abs(A.h - B.h);\n    if (hDiff > 180) {\n        hDiff = 360 - hDiff;\n    }\n    if (hDiff > 45)\n        return [A, B]; // colors are far enough apart in hue to be distinct\n    const dist = 40;\n    if (Math.abs(A.l - B.l) >= dist)\n        return [A, B];\n    // Get them sorted by saturation ( we will darken the more saturated color and lighten the other)\n    const out = [A, B];\n    const lo = A.s <= B.s ? 0 : 1;\n    const hi = 1 - lo;\n    // console.log('- lo=%s, hi=%s', lo.toString(), hi.toString());\n    while (out[hi].l - out[lo].l < dist) {\n        out[hi] = out[hi].mix(WHITE, 5);\n        out[lo] = out[lo].mix(BLACK, 5);\n    }\n    // console.log('=>', a.toString(), b.toString());\n    return out;\n}\nexport function relativeLuminance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.2126 +\n            (a.g - b.g) * (a.g - b.g) * 0.7152 +\n            (a.b - b.b) * (a.b - b.b) * 0.0722)) /\n        10000);\n}\nexport function distance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.3333 +\n            (a.g - b.g) * (a.g - b.g) * 0.3333 +\n            (a.b - b.b) * (a.b - b.b) * 0.3333)) /\n        10000);\n}\n// Draws the smooth gradient that appears on a button when you hover over or depress it.\n// Returns the percentage by which the current tile should be averaged toward a hilite color.\nexport function smoothScalar(rgb, maxRgb = 100) {\n    return Math.floor(100 * Math.sin((Math.PI * rgb) / maxRgb));\n}\nexport function install(name, ...args) {\n    let info = args;\n    if (args.length == 1) {\n        info = args[0];\n    }\n    const c = info instanceof Color ? info : make(info);\n    // @ts-ignore\n    c._const = true;\n    colors[name] = c;\n    c.name = name;\n    return c;\n}\nexport function installSpread(name, ...args) {\n    let c;\n    if (args.length == 1) {\n        c = install(name, args[0]);\n    }\n    else {\n        c = install(name, ...args);\n    }\n    install(\"light_\" + name, c.lighten(25));\n    install(\"lighter_\" + name, c.lighten(50));\n    install(\"lightest_\" + name, c.lighten(75));\n    install(\"dark_\" + name, c.darken(25));\n    install(\"darker_\" + name, c.darken(50));\n    install(\"darkest_\" + name, c.darken(75));\n    return c;\n}\nexport const NONE = install(\"NONE\", -1);\nexport const BLACK = install(\"black\", 0x000);\nexport const WHITE = install(\"white\", 0xfff);\ninstallSpread(\"teal\", [30, 100, 100]);\ninstallSpread(\"brown\", [60, 40, 0]);\ninstallSpread(\"tan\", [80, 70, 55]); // 80, 67,\t\t15);\ninstallSpread(\"pink\", [100, 60, 66]);\ninstallSpread(\"gray\", [50, 50, 50]);\ninstallSpread(\"yellow\", [100, 100, 0]);\ninstallSpread(\"purple\", [100, 0, 100]);\ninstallSpread(\"green\", [0, 100, 0]);\ninstallSpread(\"orange\", [100, 50, 0]);\ninstallSpread(\"blue\", [0, 0, 100]);\ninstallSpread(\"red\", [100, 0, 0]);\ninstallSpread(\"amber\", [100, 75, 0]);\ninstallSpread(\"flame\", [100, 25, 0]);\ninstallSpread(\"fuchsia\", [100, 0, 100]);\ninstallSpread(\"magenta\", [100, 0, 75]);\ninstallSpread(\"crimson\", [100, 0, 25]);\ninstallSpread(\"lime\", [75, 100, 0]);\ninstallSpread(\"chartreuse\", [50, 100, 0]);\ninstallSpread(\"sepia\", [50, 40, 25]);\ninstallSpread(\"violet\", [50, 0, 100]);\ninstallSpread(\"han\", [25, 0, 100]);\ninstallSpread(\"cyan\", [0, 100, 100]);\ninstallSpread(\"turquoise\", [0, 100, 75]);\ninstallSpread(\"sea\", [0, 100, 50]);\ninstallSpread(\"sky\", [0, 75, 100]);\ninstallSpread(\"azure\", [0, 50, 100]);\ninstallSpread(\"silver\", [75, 75, 75]);\ninstallSpread(\"gold\", [100, 85, 0]);\n","import { VERTICES_PER_TILE } from \"./canvas\";\nimport * as Color from \"./color\";\nexport class Layer {\n    constructor(canvas) {\n        const size = canvas.width * canvas.height * VERTICES_PER_TILE;\n        this.canvas = canvas;\n        this.fg = new Uint16Array(size);\n        this.bg = new Uint16Array(size);\n        this.glyph = new Uint8Array(size);\n    }\n    get width() {\n        return this.canvas.width;\n    }\n    get height() {\n        return this.canvas.height;\n    }\n    draw(x, y, glyph, fg = 0xfff, bg = 0x000) {\n        const index = x + y * this.canvas.width;\n        if (typeof glyph === \"string\") {\n            glyph = this.canvas.glyphs.forChar(glyph);\n        }\n        if (typeof fg !== \"number\") {\n            fg = Color.from(fg).toInt();\n        }\n        if (typeof bg !== \"number\") {\n            bg = Color.from(bg).toInt();\n        }\n        this.set(index, glyph, fg, bg);\n    }\n    set(index, glyph, fg, bg) {\n        index *= VERTICES_PER_TILE;\n        glyph = glyph & 0xff;\n        bg = bg & 0xffff;\n        fg = fg & 0xffff;\n        for (let i = 0; i < VERTICES_PER_TILE; ++i) {\n            this.glyph[index + i] = glyph;\n            this.fg[index + i] = fg;\n            this.bg[index + i] = bg;\n        }\n    }\n    //   forEach(\n    //     cb: (i: number, glyph: number, fg: number, bg: number) => void\n    //   ): void {\n    //     for (let i = 0; i < this.glyph.length; ++i) {\n    //       cb(i, this.glyph[i], this.fg[i], this.bg[i]);\n    //     }\n    //   }\n    copy(buffer) {\n        buffer._data.forEach((mixer, i) => {\n            let glyph = mixer.ch;\n            if (typeof glyph === \"string\") {\n                glyph = this.canvas.glyphs.forChar(glyph);\n            }\n            this.set(i, glyph, mixer.fg.toInt(), mixer.bg.toInt());\n        });\n        this.canvas._requestRender();\n    }\n    copyTo(buffer) {\n        for (let y = 0; y < this.height; ++y) {\n            for (let x = 0; x < this.width; ++x) {\n                const index = (x + y * this.width) * VERTICES_PER_TILE;\n                buffer.draw(x, y, this.glyph[index], this.fg[index], this.bg[index]);\n            }\n        }\n    }\n}\n","// Based on: https://github.com/ondras/fastiles/blob/master/ts/scene.ts (v2.1.0)\nimport * as shaders from \"./shaders\";\nimport { Glyphs } from \"./glyphs\";\nimport { Layer } from \"./layer\";\nimport * as Color from \"./color\";\nexport const VERTICES_PER_TILE = 6;\nexport class NotSupportedError extends Error {\n    constructor(...params) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(...params);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        // @ts-ignore\n        if (Error.captureStackTrace) {\n            // @ts-ignore\n            Error.captureStackTrace(this, NotSupportedError);\n        }\n        this.name = \"NotSupportedError\";\n    }\n}\nexport class Canvas {\n    constructor(options) {\n        this._renderRequested = false;\n        this._autoRender = true;\n        this._width = 50;\n        this._height = 25;\n        if (!options.glyphs)\n            throw new Error(\"You must supply glyphs for the canvas.\");\n        this._node = this._createNode();\n        this._createContext();\n        this._configure(options);\n    }\n    get node() {\n        return this._node;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get tileWidth() {\n        return this._glyphs.tileWidth;\n    }\n    get tileHeight() {\n        return this._glyphs.tileHeight;\n    }\n    get pxWidth() {\n        return this.node.clientWidth;\n    }\n    get pxHeight() {\n        return this.node.clientHeight;\n    }\n    get glyphs() {\n        return this._glyphs;\n    }\n    set glyphs(glyphs) {\n        this._setGlyphs(glyphs);\n    }\n    _createNode() {\n        return document.createElement(\"canvas\");\n    }\n    _configure(options) {\n        this._width = options.width || this._width;\n        this._height = options.height || this._height;\n        this._autoRender = options.render !== false;\n        this._setGlyphs(options.glyphs);\n        this.bg = Color.from(options.bg || Color.BLACK);\n        if (options.div) {\n            let el;\n            if (typeof options.div === \"string\") {\n                el = document.getElementById(options.div);\n                if (!el) {\n                    console.warn(\"Failed to find parent element by ID: \" + options.div);\n                }\n            }\n            else {\n                el = options.div;\n            }\n            if (el && el.appendChild) {\n                el.appendChild(this.node);\n            }\n        }\n    }\n    _setGlyphs(glyphs) {\n        if (glyphs === this._glyphs)\n            return false;\n        this._glyphs = glyphs;\n        this.resize(this._width, this._height);\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.uniform2uiv(uniforms[\"tileSize\"], [this.tileWidth, this.tileHeight]);\n        this._uploadGlyphs();\n        return true;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        const node = this.node;\n        node.width = this._width * this.tileWidth;\n        node.height = this._height * this.tileHeight;\n        const gl = this._gl;\n        // const uniforms = this._uniforms;\n        gl.viewport(0, 0, this.node.width, this.node.height);\n        // gl.uniform2ui(uniforms[\"viewportSize\"], this.node.width, this.node.height);\n        this._createGeometry();\n        this._createData();\n    }\n    _requestRender() {\n        if (this._renderRequested)\n            return;\n        this._renderRequested = true;\n        if (!this._autoRender)\n            return;\n        requestAnimationFrame(() => this.render());\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    toX(x) {\n        return Math.floor((this.width * x) / this.node.clientWidth);\n    }\n    toY(y) {\n        return Math.floor((this.height * y) / this.node.clientHeight);\n    }\n    _createContext() {\n        let gl = this.node.getContext(\"webgl2\");\n        if (!gl) {\n            throw new NotSupportedError(\"WebGL 2 not supported\");\n        }\n        this._gl = gl;\n        this._buffers = {};\n        this._attribs = {};\n        this._uniforms = {};\n        const p = createProgram(gl, shaders.VS, shaders.FS);\n        gl.useProgram(p);\n        const attributeCount = gl.getProgramParameter(p, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            gl.enableVertexAttribArray(i);\n            let info = gl.getActiveAttrib(p, i);\n            this._attribs[info.name] = i;\n        }\n        const uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(p, i);\n            this._uniforms[info.name] = gl.getUniformLocation(p, info.name);\n        }\n        gl.uniform1i(this._uniforms[\"font\"], 0);\n        this._texture = createTexture(gl);\n    }\n    _createGeometry() {\n        const gl = this._gl;\n        this._buffers.position && gl.deleteBuffer(this._buffers.position);\n        this._buffers.uv && gl.deleteBuffer(this._buffers.uv);\n        let buffers = createGeometry(gl, this._attribs, this.width, this.height);\n        Object.assign(this._buffers, buffers);\n    }\n    _createData() {\n        const gl = this._gl;\n        const attribs = this._attribs;\n        this._buffers.fg && gl.deleteBuffer(this._buffers.fg);\n        this._buffers.bg && gl.deleteBuffer(this._buffers.bg);\n        this._buffers.glyph && gl.deleteBuffer(this._buffers.glyph);\n        this.layer = new Layer(this);\n        const fg = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, fg);\n        gl.vertexAttribIPointer(attribs[\"fg\"], 1, gl.UNSIGNED_SHORT, 0, 0);\n        const bg = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, bg);\n        gl.vertexAttribIPointer(attribs[\"bg\"], 1, gl.UNSIGNED_SHORT, 0, 0);\n        const glyph = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, glyph);\n        gl.vertexAttribIPointer(attribs[\"glyph\"], 1, gl.UNSIGNED_BYTE, 0, 0);\n        Object.assign(this._buffers, { fg, bg, glyph });\n    }\n    _uploadGlyphs() {\n        if (!this._glyphs.needsUpdate)\n            return;\n        const gl = this._gl;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._glyphs.node);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        this._requestRender();\n        this._glyphs.needsUpdate = false;\n    }\n    draw(x, y, glyph, fg, bg) {\n        this.layer.draw(x, y, glyph, fg, bg);\n        this._requestRender();\n        return true;\n    }\n    render() {\n        const gl = this._gl;\n        if (this._glyphs.needsUpdate) {\n            // auto keep glyphs up to date\n            this._uploadGlyphs();\n        }\n        else if (!this._renderRequested) {\n            return;\n        }\n        this._renderRequested = false;\n        // clear to bg color?\n        gl.clearColor(this.bg.r / 100, this.bg.g / 100, this.bg.b / 100, this.bg.a / 100);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        // loop layers\n        // set depth\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.fg);\n        gl.bufferData(gl.ARRAY_BUFFER, this.layer.fg, gl.DYNAMIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.bg);\n        gl.bufferData(gl.ARRAY_BUFFER, this.layer.bg, gl.DYNAMIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.glyph);\n        gl.bufferData(gl.ARRAY_BUFFER, this.layer.glyph, gl.DYNAMIC_DRAW);\n        gl.drawArrays(gl.TRIANGLES, 0, this._width * this._height * VERTICES_PER_TILE);\n        // end loop\n    }\n}\nexport function withImage(image) {\n    let opts = {};\n    if (typeof image === \"string\") {\n        opts.glyphs = Glyphs.fromImage(image);\n    }\n    else if (image instanceof HTMLImageElement) {\n        opts.glyphs = Glyphs.fromImage(image);\n    }\n    else {\n        if (!image.image)\n            throw new Error(\"You must supply the image.\");\n        Object.assign(opts, image);\n        opts.glyphs = Glyphs.fromImage(image.image);\n    }\n    return new Canvas(opts);\n}\nexport function withFont(src) {\n    if (typeof src === \"string\") {\n        src = { font: src };\n    }\n    src.glyphs = Glyphs.fromFont(src);\n    return new Canvas(src);\n}\n// Copy of: https://github.com/ondras/fastiles/blob/master/ts/utils.ts (v2.1.0)\nexport function createProgram(gl, ...sources) {\n    const p = gl.createProgram();\n    [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER].forEach((type, index) => {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sources[index]);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(shader));\n        }\n        gl.attachShader(p, shader);\n    });\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p));\n    }\n    return p;\n}\nfunction createTexture(gl) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    return t;\n}\n// x, y offsets for 6 verticies (2 triangles) in square\nexport const QUAD = [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1];\nfunction createGeometry(gl, attribs, width, height) {\n    let tileCount = width * height;\n    let positionData = new Float32Array(tileCount * QUAD.length);\n    let offsetData = new Uint8Array(tileCount * QUAD.length);\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            const index = (x + y * width) * QUAD.length;\n            positionData.set(QUAD.map((v, i) => {\n                if (i % 2) {\n                    // y\n                    return 1 - (2 * (y + v)) / height;\n                }\n                else {\n                    return (2 * (x + v)) / width - 1;\n                }\n            }), index);\n            offsetData.set(QUAD, index);\n        }\n    }\n    const position = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, position);\n    gl.vertexAttribPointer(attribs[\"position\"], 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, positionData, gl.STATIC_DRAW);\n    const uv = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uv);\n    gl.vertexAttribIPointer(attribs[\"offset\"], 2, gl.UNSIGNED_BYTE, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, offsetData, gl.STATIC_DRAW);\n    return { position, uv };\n}\n","import * as Color from \"./color\";\nexport class Mixer {\n    constructor(base = {}) {\n        this.ch = base.ch || 0;\n        this.fg = Color.make(base.fg);\n        this.bg = Color.make(base.bg);\n    }\n    _changed() {\n        return this;\n    }\n    copy(other) {\n        this.ch = other.ch || -1;\n        this.fg = Color.from(other.fg);\n        this.bg = Color.from(other.bg);\n        return this._changed();\n    }\n    clone() {\n        const other = new Mixer();\n        other.copy(this);\n        return other;\n    }\n    equals(other) {\n        return (this.ch == other.ch &&\n            this.fg.equals(other.fg) &&\n            this.bg.equals(other.bg));\n    }\n    // get dances(): boolean {\n    //   return this.fg.dances || this.bg.dances;\n    // }\n    nullify() {\n        this.ch = -1;\n        this.fg = Color.NONE;\n        this.bg = Color.NONE;\n        return this._changed();\n    }\n    blackOut() {\n        this.ch = -1;\n        this.fg = Color.BLACK;\n        this.bg = Color.BLACK;\n        return this._changed();\n    }\n    draw(ch = -1, fg = -1, bg = -1) {\n        if (ch && ch !== -1) {\n            this.ch = ch;\n        }\n        if (fg !== -1 && fg !== null) {\n            fg = Color.from(fg);\n            this.fg = this.fg.blend(fg);\n        }\n        if (bg !== -1 && bg !== null) {\n            bg = Color.from(bg);\n            this.bg = this.bg.blend(bg);\n        }\n        return this._changed();\n    }\n    drawSprite(src, opacity) {\n        if (src === this)\n            return this;\n        // @ts-ignore\n        if (opacity === undefined)\n            opacity = src.opacity;\n        if (opacity === undefined)\n            opacity = 100;\n        if (opacity <= 0)\n            return;\n        if (src.ch)\n            this.ch = src.ch;\n        if ((src.fg && src.fg !== -1) || src.fg === 0)\n            this.fg = this.fg.mix(src.fg, opacity);\n        if ((src.bg && src.bg !== -1) || src.bg === 0)\n            this.bg = this.bg.mix(src.bg, opacity);\n        return this._changed();\n    }\n    invert() {\n        [this.bg, this.fg] = [this.fg, this.bg];\n        return this._changed();\n    }\n    multiply(color, fg = true, bg = true) {\n        color = Color.from(color);\n        if (fg) {\n            this.fg = this.fg.multiply(color);\n        }\n        if (bg) {\n            this.bg = this.bg.multiply(color);\n        }\n        return this._changed();\n    }\n    scale(multiplier, fg = true, bg = true) {\n        if (fg)\n            this.fg = this.fg.scale(multiplier);\n        if (bg)\n            this.bg = this.bg.scale(multiplier);\n        return this._changed();\n    }\n    mix(color, fg = 50, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg = this.fg.mix(color, fg);\n        }\n        if (bg > 0) {\n            this.bg = this.bg.mix(color, bg);\n        }\n        return this._changed();\n    }\n    add(color, fg = 100, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg = this.fg.add(color, fg);\n        }\n        if (bg > 0) {\n            this.bg = this.bg.add(color, bg);\n        }\n        return this._changed();\n    }\n    separate() {\n        [this.fg, this.bg] = Color.separate(this.fg, this.bg);\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        this.fg = this.fg.bake(clearDancing);\n        this.bg = this.bg.bake(clearDancing);\n        this._changed();\n        return {\n            ch: this.ch,\n            fg: this.fg.toInt(),\n            bg: this.bg.toInt(),\n        };\n    }\n    toString() {\n        // prettier-ignore\n        return `{ ch: ${this.ch}, fg: ${this.fg.toString()}, bg: ${this.bg.toString()} }`;\n    }\n}\nexport function makeMixer(base) {\n    return new Mixer(base);\n}\n","import { Mixer } from \"./mixer\";\nexport class DataBuffer {\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n        this._data = [];\n        for (let i = 0; i < width * height; ++i) {\n            this._data.push(new Mixer());\n        }\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get(x, y) {\n        let index = y * this.width + x;\n        return this._data[index];\n    }\n    _toGlyph(ch) {\n        if (ch === null || ch === undefined)\n            return -1;\n        return ch.charCodeAt(0);\n    }\n    draw(x, y, glyph = -1, fg = -1, bg = -1) {\n        let index = y * this.width + x;\n        const current = this._data[index];\n        current.draw(glyph, fg, bg);\n        return this;\n    }\n    // This is without opacity - opacity must be done in Mixer\n    drawSprite(x, y, sprite) {\n        let glyph = sprite.ch\n            ? sprite.ch\n            : sprite.glyph !== undefined\n                ? sprite.glyph\n                : -1;\n        // const fg = sprite.fg ? sprite.fg.toInt() : -1;\n        // const bg = sprite.bg ? sprite.bg.toInt() : -1;\n        return this.draw(x, y, glyph, sprite.fg, sprite.bg);\n    }\n    blackOut(x, y) {\n        if (arguments.length == 0) {\n            return this.fill(0, 0, 0);\n        }\n        return this.draw(x, y, 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xfff, bg = 0) {\n        this._data.forEach((m) => m.draw(glyph, fg, bg));\n        return this;\n    }\n    copy(other) {\n        this._data.forEach((m, i) => {\n            m.copy(other._data[i]);\n        });\n        return this;\n    }\n}\nexport class Buffer extends DataBuffer {\n    constructor(layer) {\n        super(layer.width, layer.height);\n        this._layer = layer;\n        layer.copyTo(this);\n    }\n    // get canvas() { return this._canvas; }\n    _toGlyph(ch) {\n        return this._layer.canvas.glyphs.forChar(ch);\n    }\n    render() {\n        this._layer.copy(this);\n        return this;\n    }\n    copyFromCanvas() {\n        this._layer.copyTo(this);\n        return this;\n    }\n}\n","export var options = {\n    random: Math.random.bind(Math),\n};\nexport function configure(opts = {}) {\n    Object.assign(options, opts);\n}\n","import * as Color from \"./color\";\nfunction clamp(v, n, x) {\n    return Math.min(x, Math.max(n, v));\n}\nexport class Sprite {\n    constructor(ch, fg, bg, opacity = 100) {\n        if (!ch)\n            ch = null;\n        this.ch = ch;\n        this.fg = Color.from(fg);\n        this.bg = Color.from(bg);\n        this.opacity = clamp(opacity, 0, 100);\n    }\n    clone() {\n        return new Sprite(this.ch, this.fg, this.bg, this.opacity);\n    }\n    toString() {\n        const parts = [];\n        if (this.ch)\n            parts.push(\"ch: \" + this.ch);\n        if (!this.fg.isNull())\n            parts.push(\"fg: \" + this.fg.toString());\n        if (!this.bg.isNull())\n            parts.push(\"bg: \" + this.bg.toString());\n        if (this.opacity !== 100)\n            parts.push(\"opacity: \" + this.opacity);\n        return \"{ \" + parts.join(\", \") + \" }\";\n    }\n}\nexport const sprites = {};\nexport function make(...args) {\n    let ch = null, fg = -1, bg = -1, opacity;\n    if (args.length == 0) {\n        return new Sprite(null, -1, -1);\n    }\n    else if (args.length == 1 && Array.isArray(args[0])) {\n        args = args[0];\n    }\n    if (args.length > 3) {\n        opacity = args[3];\n        args.pop();\n    }\n    else if (args.length == 2 &&\n        typeof args[1] == \"number\" &&\n        args[0].length > 1) {\n        opacity = args.pop();\n    }\n    if (args.length > 1) {\n        ch = args[0] || null;\n        fg = args[1];\n        bg = args[2];\n    }\n    else {\n        if (typeof args[0] === \"string\" && args[0].length == 1) {\n            ch = args[0];\n            fg = \"white\"; // white is default?\n        }\n        else if ((typeof args[0] === \"string\" && args[0].length > 1) ||\n            typeof args[0] === \"number\") {\n            bg = args[0];\n        }\n        else if (args[0] instanceof Color.Color) {\n            bg = args[0];\n        }\n        else {\n            const sprite = args[0];\n            ch = sprite.ch || null;\n            fg = sprite.fg || -1;\n            bg = sprite.bg || -1;\n            opacity = sprite.opacity;\n        }\n    }\n    if (typeof fg === \"string\")\n        fg = Color.from(fg);\n    else if (Array.isArray(fg))\n        fg = Color.make(fg);\n    else if (fg === undefined || fg === null)\n        fg = -1;\n    if (typeof bg === \"string\")\n        bg = Color.from(bg);\n    else if (Array.isArray(bg))\n        bg = Color.make(bg);\n    else if (bg === undefined || bg === null)\n        bg = -1;\n    return new Sprite(ch, fg, bg, opacity);\n}\nexport function from(config) {\n    if (typeof config === \"string\") {\n        const sprite = sprites[config];\n        if (!sprite)\n            throw new Error(\"Failed to find sprite: \" + config);\n        return sprite;\n    }\n    return make(config);\n}\nexport function install(name, ...args) {\n    let sprite;\n    // @ts-ignore\n    sprite = make(...args);\n    sprite.name = name;\n    sprites[name] = sprite;\n    return sprite;\n}\n"],"names":["clamp","Color.from","Color.BLACK","shaders.VS","shaders.FS","Color.make","Color.NONE","color","Color.separate"],"mappings":"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"}